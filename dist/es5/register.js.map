{"version":3,"file":"register.js","sources":["../../src/api/client.js","../../src/api/auth.js","../../src/form.js","../../src/utils.js","../../src/routes.js","../../src/views/register.js"],"sourcesContent":["const API_URL = location.hostname.includes(\"localhost\")\r\n    ? \"http://localhost:5000\"\r\n    : \"\";\r\n\r\nexport default class ApiClient {\r\n    constructor(base_url, middleware) {\r\n        if (base_url === undefined || base_url === null) {\r\n            base_url = API_URL;\r\n        }\r\n        this.base_url = base_url;\r\n        if (middleware === null || middleware === undefined) {\r\n            middleware = [];\r\n        }\r\n        this.middleware = middleware;\r\n    }\r\n    request(uri, method, body, headers) {\r\n        let requestBody;\r\n        if (body !== null && body !== undefined) {\r\n            requestBody = JSON.stringify(body);\r\n        }\r\n        return fetch(\r\n            this.base_url + uri,\r\n            // Pass the request options to each middleware function for modification\r\n            this.middleware.reduce(\r\n                (requestOptions, middleware) => middleware(requestOptions),\r\n                {\r\n                    method: method,\r\n                    body: requestBody,\r\n                    headers: { \"Content-Type\": \"application/json\", ...headers }\r\n                }\r\n            )\r\n        );\r\n    }\r\n    get(uri, headers) {\r\n        return this.request(uri, \"GET\", null, headers);\r\n    }\r\n    post(uri, body) {\r\n        return this.request(uri, \"POST\", body);\r\n    }\r\n    put(uri, body) {\r\n        return this.request(uri, \"PUT\", body);\r\n    }\r\n    delete(uri, body) {\r\n        return this.request(uri, \"DELETE\", body);\r\n    }\r\n    patch(uri, body) {\r\n        return this.request(uri, \"PATCH\", body);\r\n    }\r\n}\r\n\r\nexport const client = new ApiClient(API_URL);\r\n\r\n/**\r\n * Given a bearer token, returns a middleware function to add to the API\r\n * client.\r\n * @param {string} token\r\n */\r\nexport function createAuthMiddleware(token) {\r\n    return request => {\r\n        request.headers.Authorization = `Bearer ${token}`;\r\n        return request;\r\n    };\r\n}\r\n","import { client, createAuthMiddleware } from \"./client\";\r\n\r\nexport function registerUser({ first, last, email }) {\r\n    return client.post(\"/register/\", { first, last, email });\r\n}\r\n\r\nexport function signInUser({ email }) {\r\n    return client.post(\"/signin/\", { email });\r\n}\r\n\r\nexport function signOut() {\r\n    localStorage.clear();\r\n}\r\n\r\n// Sentinel for when user cannot be authenticated (either has\r\n// no token or the token is not validated by the backend)\r\nexport const unauthenticatedUser = {};\r\n\r\n/**\r\n * Get user's identity and Bearer token. Equip the API client\r\n * with middleware that uses the Bearer token for authentication\r\n * and authorization, and return the user record.\r\n * @param {ApiClient} client\r\n * @returns {Object|unauthenticatedUser} the current user\r\n */\r\nexport default function initializeAuthContext(client) {\r\n    return getBearerToken().then(token =>\r\n        getCurrentUser(token).then(user => {\r\n            if (user === unauthenticatedUser) {\r\n                localStorage.removeItem(\"bearerToken\");\r\n            } else {\r\n                localStorage.setItem(\"bearerToken\", token);\r\n                client.middleware.push(createAuthMiddleware(token));\r\n            }\r\n            return user;\r\n        })\r\n    );\r\n}\r\n\r\n/**\r\n * Given a Bearer token, verifies that token with the API and retrieves\r\n * the user's profile.\r\n * @param {string|noBearerToken} token\r\n * @returns {Promise<Object|unauthenticatedUser>} the current user\r\n */\r\nfunction getCurrentUser(token) {\r\n    const user = getUserFromToken(token);\r\n    if (user !== unauthenticatedUser) {\r\n        return client\r\n            .get(`/users/${user.id}`, { Authorization: `Bearer ${token}` })\r\n            .then(r => {\r\n                if (r.ok) {\r\n                    return r.json();\r\n                } else {\r\n                    return unauthenticatedUser;\r\n                }\r\n            })\r\n            .catch(() => unauthenticatedUser);\r\n    } else {\r\n        return Promise.resolve(unauthenticatedUser);\r\n    }\r\n}\r\n\r\n/**\r\n * Given a token, parse the encoded User object.\r\n * @param {string|noBearerToken} token\r\n * @returns {Object|unauthenticatedUser}\r\n */\r\nexport function getUserFromToken(token) {\r\n    if (token === noBearerToken) {\r\n        return unauthenticatedUser;\r\n    }\r\n    let user;\r\n    try {\r\n        user = atob(token.split(\".\")[1]);\r\n    } catch (error) {\r\n        // Catch encoding errors\r\n        user = null;\r\n    }\r\n    if (user === undefined || user === null) {\r\n        return unauthenticatedUser;\r\n    } else {\r\n        return JSON.parse(user);\r\n    }\r\n}\r\n\r\n// Sentinel for when the user has no bearer token\r\nexport const noBearerToken = {};\r\n\r\n/**\r\n * Retrieves Bearer token for authentication and authorization\r\n * with the Districtr API. Looks in localStorage first, and if that's\r\n * not there tries to use a sign-in token query parameter (from a\r\n * sign-in link) to get a Bearer token from the back-end.\r\n * @returns {Promise<string|noBearerToken>}\r\n */\r\nexport function getBearerToken() {\r\n    // Check localStorage for the Bearer token\r\n    let bearerToken = localStorage.getItem(\"bearerToken\");\r\n    if (bearerToken !== null && bearerToken !== undefined) {\r\n        return Promise.resolve(bearerToken);\r\n    }\r\n    // If that's missing, get signInToken from the URL query parameters\r\n    // and then POST that to /signin/ to get a Bearer token\r\n    const signInToken = getSignInToken();\r\n    if (signInToken !== noSignInToken) {\r\n        return fetchBearerToken(signInToken);\r\n    } else {\r\n        return Promise.resolve(noBearerToken);\r\n    }\r\n}\r\n\r\n/**\r\n * Given a sign-in token, fetch a Bearer token from the API to use\r\n * for auth in subsequent calls.\r\n * @param {string} signInToken\r\n * @returns {string|noBearerToken} the Bearer token, or sentinel\r\n *  noBearerToken that signals failure.\r\n */\r\nexport function fetchBearerToken(signInToken) {\r\n    return (\r\n        client\r\n            .post(\"/tokens/\", { token: signInToken })\r\n            // eslint-disable-next-line no-extra-parens\r\n            .then(r => (r.status === 201 ? r.json() : null))\r\n            .then(payload => {\r\n                if (payload === undefined || payload === null) {\r\n                    return noBearerToken;\r\n                }\r\n                const { token } = payload;\r\n                if (token === undefined || token === null) {\r\n                    return noBearerToken;\r\n                }\r\n                return token;\r\n            })\r\n            .catch(() => noBearerToken)\r\n    );\r\n}\r\n\r\n// Sentinel for when there is no sign-in token available\r\nconst noSignInToken = {};\r\n\r\n/**\r\n * Get a sign-in token from the location bar or return the sentinel\r\n * indicating that no token was there\r\n * @returns {string, noSignInToken}\r\n */\r\nfunction getSignInToken() {\r\n    if (location.search.length <= \"?token=\".length) {\r\n        return noSignInToken;\r\n    }\r\n    return location.search.slice(\"?token=\".length);\r\n}\r\n","export function popupMessage({ message, raw }) {\r\n    const messageElement = document.getElementById(\"popup-message\");\r\n    messageElement.classList.remove(\"hidden\");\r\n    if (raw === true) {\r\n        messageElement.innerHTML = message;\r\n    } else {\r\n        messageElement.innerText = message;\r\n    }\r\n    return messageElement;\r\n}\r\n\r\nexport function errorMessage(message) {\r\n    const element = popupMessage({ message });\r\n    element.classList.add(\"alert\");\r\n}\r\n\r\nexport const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n\r\nexport function isEmail(value) {\r\n    return value.match(emailRegex);\r\n}\r\n\r\nfunction onAllChanges(element, f) {\r\n    element.onblur = f;\r\n    element.onfocus = f;\r\n    element.oninput = f;\r\n}\r\n\r\nexport function createForm(elementIds, formId, validate, onSubmit) {\r\n    const elements = elementIds.reduce((lookup, elementId) => {\r\n        const element = document.getElementById(elementId);\r\n        return { ...lookup, [elementId]: element };\r\n    }, {});\r\n\r\n    elementIds.forEach(elementId => {\r\n        onAllChanges(elements[elementId], () => validate(elements));\r\n    });\r\n\r\n    const form = document.getElementById(formId);\r\n    form.onsubmit = event => {\r\n        event.preventDefault();\r\n        if (!validate(elements)) {\r\n            return;\r\n        }\r\n        onSubmit(elements);\r\n    };\r\n}\r\n","export function zeros(n) {\r\n  let vector = [];\r\n  for (let i = 0; i < n; i++) {\r\n    vector.push(0);\r\n  }\r\n  return vector;\r\n}\r\n\r\n/**\r\n * Summarize an array of data. Returns `{min, max, total, length}`.\r\n *\r\n * @param {string or function} getter The string key of one of the feature's\r\n *  properties, or a function mapping each feature to the desired data.\r\n */\r\nexport function summarize(data) {\r\n  return {\r\n    min: Math.min(...data),\r\n    max: Math.max(...data),\r\n    total: sum(data),\r\n    length: data.length\r\n  };\r\n}\r\n\r\n// From https://stackoverflow.com/questions/2901102/\r\n// how-to-print-a-number-with-commas-as-thousands-separators-in-javascript#2901298\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function roundToDecimal(n, places) {\r\n  return Math.round(n * Math.pow(10, places)) / Math.pow(10, places);\r\n}\r\n\r\nexport function sum(values) {\r\n  return values.reduce((total, value) => total + value, 0);\r\n}\r\n\r\nexport function divideOrZeroIfNaN(x, y) {\r\n  return [\"case\", [\">\", y, 0], [\"/\", x, y], 0];\r\n}\r\n\r\nexport function extent(values) {\r\n  return Math.min(...values) - Math.max(...values);\r\n}\r\n\r\nexport function asPercent(value, total) {\r\n  return `${Math.round(100 * (value / total))}%`;\r\n}\r\n\r\nexport function replace(list, i, item) {\r\n  return [...list.slice(0, i), item, ...list.slice(i + 1)];\r\n}\r\n\r\n// Light-weight redux implementation\r\n\r\nexport function createReducer(handlers) {\r\n  return (state, action) => {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    }\r\n    return state;\r\n  };\r\n}\r\n\r\nexport function combineReducers(reducers) {\r\n  return (state, action) => {\r\n    let hasChanged = false;\r\n    let nextState = {};\r\n\r\n    for (let key in reducers) {\r\n      nextState[key] = reducers[key](state[key], action);\r\n      hasChanged = hasChanged || nextState[key] !== state[key];\r\n    }\r\n\r\n    return hasChanged ? nextState : state;\r\n  };\r\n}\r\n\r\nexport function createActions(handlers) {\r\n  let actions = {};\r\n  for (let actionType in handlers) {\r\n    actions[actionType] = actionInfo => ({\r\n      ...actionInfo,\r\n      type: actionType\r\n    });\r\n  }\r\n  return actions;\r\n}\r\n\r\nexport function bindDispatchToActions(actions, dispatch) {\r\n  let boundActions = {};\r\n  for (let actionType in actions) {\r\n    boundActions[actionType] = actionInfo =>\r\n      dispatch(boundActions[actionType](actionInfo));\r\n  }\r\n  return boundActions;\r\n}\r\n\r\n/**\r\n * Handle HTTP responses by providing handlers for HTTP status codes.\r\n *\r\n * The `handlers` object should have handlers for each status code you want\r\n * to handle (e.g. 200, 500) as well as a \"default\" handler for all other\r\n * cases.\r\n *\r\n * @param {object} handlers\r\n */\r\nexport function handleResponse(handlers) {\r\n  handlers = {\r\n    // eslint-disable-next-line no-console\r\n    default: resp => console.error(\"Request failed\", resp),\r\n    ...handlers\r\n  };\r\n  return response => {\r\n    if (handlers.hasOwnProperty(response.status)) {\r\n      return handlers[response.status](response);\r\n    } else {\r\n      return handlers.default(response);\r\n    }\r\n  };\r\n}\r\n\r\nexport function isString(x) {\r\n  return typeof x === \"string\" || x instanceof String;\r\n}\r\n\r\n// Copied from stackoverflow https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\nexport function dec2hex(dec) {\r\n  return (\"0\" + dec.toString(16)).substr(-2);\r\n}\r\n\r\nexport function generateId(len) {\r\n  const arr = new Uint8Array((len || 40) / 2);\r\n  const crypto = window.crypto ? window.crypto : window.msCrypto;\r\n  crypto.getRandomValues(arr);\r\n  return Array.from(arr, dec2hex).join(\"\");\r\n}\r\n\r\nexport function download(filename, text, isbinary) {\r\n  let blob;\r\n  if (isbinary) {\r\n    blob = new Blob([text], {\r\n      type: 'application/octet-stream'\r\n    });\r\n  }\r\n  let element = document.createElement(\"a\");\r\n  element.setAttribute(\r\n    \"href\",\r\n    isbinary\r\n      ? window.URL.createObjectURL(blob)\r\n      : \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\r\n  );\r\n  element.setAttribute(\"download\", filename);\r\n\r\n  element.style.display = \"none\";\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\nexport function bindAll(keys, obj) {\r\n  keys.forEach(key => {\r\n    obj[key] = obj[key].bind(obj);\r\n  });\r\n}\r\n\r\nexport function boundsOfGJ(gj) {\r\n  var coords, bbox;\r\n  if (!gj.hasOwnProperty('type')) return;\r\n  coords = getCoordinatesDump(gj);\r\n  bbox = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY,\r\n  Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY,];\r\n  return coords.reduce(function (prev, coord) {\r\n    return [\r\n      Math.min(coord[0], prev[0]),\r\n      Math.min(coord[1], prev[1]),\r\n      Math.max(coord[0], prev[2]),\r\n      Math.max(coord[1], prev[3])\r\n    ];\r\n  }, bbox);\r\n};\r\n\r\nfunction getCoordinatesDump(gj) {\r\n  var coords;\r\n  if (gj.type == 'Point') {\r\n    coords = [gj.coordinates];\r\n  } else if (gj.type == 'LineString' || gj.type == 'MultiPoint') {\r\n    coords = gj.coordinates;\r\n  } else if (gj.type == 'Polygon' || gj.type == 'MultiLineString') {\r\n    coords = gj.coordinates.reduce(function (dump, part) {\r\n      return dump.concat(part);\r\n    }, []);\r\n  } else if (gj.type == 'MultiPolygon') {\r\n    coords = gj.coordinates.reduce(function (dump, poly) {\r\n      return dump.concat(poly.reduce(function (points, part) {\r\n        return points.concat(part);\r\n      }, []));\r\n    }, []);\r\n  } else if (gj.type == 'Feature') {\r\n    coords = getCoordinatesDump(gj.geometry);\r\n  } else if (gj.type == 'GeometryCollection') {\r\n    coords = gj.geometries.reduce(function (dump, g) {\r\n      return dump.concat(getCoordinatesDump(g));\r\n    }, []);\r\n  } else if (gj.type == 'FeatureCollection') {\r\n    coords = gj.features.reduce(function (dump, f) {\r\n      return dump.concat(getCoordinatesDump(f));\r\n    }, []);\r\n  }\r\n  return coords;\r\n}\r\n\r\nexport const COUNTIES_TILESET = {\r\n  sourceLayer: \"cb_2018_us_county_500k-6p4p3f\",\r\n  source: { type: \"vector\", url: \"mapbox://districtr.6fcd9f0h\" }\r\n};\r\n\r\nexport const stateNameToFips = {\r\n  alabama: \"01\",\r\n  alaska: \"02\",\r\n  arizona: \"04\",\r\n  arkansas: \"05\",\r\n  california: \"06\",\r\n  colorado: \"08\",\r\n  connecticut: \"09\",\r\n  delaware: 10,\r\n  dc: 11,\r\n  \"district of columbia\": 11,\r\n  district_of_columbia: 11,\r\n  districtofcolumbia: 11,\r\n  florida: 12,\r\n  georgia: 13,\r\n  hawaii: 15,\r\n  idaho: 16,\r\n  illinois: 17,\r\n  indiana: 18,\r\n  iowa: 19,\r\n  kansas: 20,\r\n  kentucky: 21,\r\n  louisiana: 22,\r\n  maine: 23,\r\n  maryland: 24,\r\n  massachusetts: 25,\r\n  ma: 25,\r\n  michigan: 26,\r\n  minnesota: 27,\r\n  mississippi: 28,\r\n  missouri: 29,\r\n  montana: 30,\r\n  nebraska: 31,\r\n  nevada: 32,\r\n  \"new hampshire\": 33,\r\n  new_hampshire: 33,\r\n  newhampshire: 33,\r\n  \"new jersey\": 34,\r\n  new_jersey: 34,\r\n  newjersey: 34,\r\n  \"new mexico\": 35,\r\n  new_mexico: 35,\r\n  new_mexico_portal: 35,\r\n  newmexico: 35,\r\n  \"new york\": 36,\r\n  new_york: 36,\r\n  newyork: 36,\r\n  \"north carolina\": 37,\r\n  north_carolina: 37,\r\n  northcarolina: 37,\r\n  nc: 37,\r\n  \"north dakota\": 38,\r\n  north_dakota: 38,\r\n  northdakota: 38,\r\n  ohio: 39,\r\n  oklahoma: 40,\r\n  oregon: 41,\r\n  pennsylvania: 42,\r\n  \"rhode island\": 44,\r\n  rhode_island: 44,\r\n  rhodeisland: 44,\r\n  \"south carolina\": 45,\r\n  southcarolina: 45,\r\n  south_carolina: 45,\r\n  \"south dakota\": 46,\r\n  south_dakota: 46,\r\n  southdakota: 46,\r\n  tennessee: 47,\r\n  texas: 48,\r\n  utah: 49,\r\n  vermont: 50,\r\n  virginia: 51,\r\n  washington: 53,\r\n  \"west virginia\": 54,\r\n  westvirginia: 55,\r\n  west_virginia: 54,\r\n  wisconsin: 55,\r\n  wyoming: 56,\r\n  \"puerto rico\": 72,\r\n  puertorico: 72,\r\n  puerto_rico: 72\r\n};\r\n\r\nexport function spatial_abilities(id) {\r\n  const status = {\r\n    alabama: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      contiguity: true,\r\n    },\r\n    alaska: {\r\n      number_markers: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      school_districts: true,\r\n      municipalities: true,\r\n      current_districts: true,\r\n      boundaries: [\r\n        {\r\n          id: '2021_plan',\r\n          label: '2021 Proclamation Plan',\r\n          path: 'current_districts/alaska/2021_plan'\r\n        }\r\n      ],\r\n      portal: {\r\n        endpoint: 'https://www.akredistrict.org/map-comment',\r\n      },\r\n    },\r\n    alaska_blocks: {\r\n      coalition: false,\r\n      school_districts: true,\r\n      municipalities: true,\r\n      current_districts: true,\r\n      portal: {\r\n        endpoint: 'https://www.akredistrict.org/map-comment',\r\n        saveredirect: 'www.akredistrict.org/create/edit.html',\r\n      },\r\n    },\r\n    arizona: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n    },\r\n    maricopa: {\r\n      native_american: true,\r\n      number_markers: true,\r\n    },\r\n    nwaz: {\r\n      native_american: true,\r\n      number_markers: true,\r\n    },\r\n    seaz: {\r\n      native_american: true,\r\n      number_markers: true,\r\n    },\r\n    mesaaz: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: true,\r\n    },\r\n    glendaleaz: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      coalition: false,\r\n      boundaries: [{\r\n        id: 'districts',\r\n        label: 'Current Districts',\r\n        path: 'current_districts/arizona/glendaleaz',\r\n        centroids: true,\r\n      }]\r\n    },\r\n    phoenix: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      border: true,\r\n    },\r\n    yuma: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      border: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      boundaries: [{\r\n        id: 'districts',\r\n        label: 'Current Districts',\r\n        path: 'current_districts/arizona/yuma',\r\n        centroids: true,\r\n      }],\r\n    },\r\n    yuma_awc: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      border: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      boundaries: [{\r\n        id: 'districts',\r\n        label: 'Current Districts',\r\n        path: 'current_districts/arizona/yuma_awc',\r\n        centroids: true,\r\n      }],\r\n    },\r\n    arkansas: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    california: {\r\n      number_markers: true,\r\n      native_american: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      sideload: true,\r\n      // find_unpainted: true,\r\n    },\r\n    ca_SanDiego: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      purple_demo: true,\r\n      boundaries: [{\r\n        id: 'districts',\r\n        label: 'Current City Council Districts (2011)',\r\n        path: 'current_districts/california/ca_SanDiego',\r\n        lineColor: 'orangered',\r\n      },{\r\n        id: 'neighborhood',\r\n        label: 'Community Planning Group Areas',\r\n        path: 'neighborhoods/california/ca_SanDiego',\r\n        centroids: true,\r\n        lineColor: 'darkgreen',\r\n      },{\r\n        id: 'pbeats', // aka police beats\r\n        label: 'Neighborhood Areas',\r\n        path: 'neighborhoods/california/ca_SanDiego_beats',\r\n        centroids: true,\r\n        lineColor: 'darkblue',\r\n      },{\r\n        id: 'schools',\r\n        label: 'School Districts',\r\n        path: 'school_districts/california/ca_SanDiego',\r\n        centroids: true,\r\n        fill: true,\r\n        fill_alt: true,\r\n      }],\r\n      portal: {\r\n        endpoint: 'https://portal.sandiego-mapping.org'\r\n      },\r\n    },\r\n    livermore: {\r\n      number_markers: true,\r\n      border: true,\r\n      shapefile: true,\r\n      coalition: false,\r\n    },\r\n    ca_contracosta: {\r\n      number_markers: true,\r\n      border: true,\r\n      shapefile: true,\r\n      school_districts: true,\r\n      municipalities: true,\r\n      current_districts: true,\r\n      boundaries: [{\r\n        id: 'contracosta_cdp',\r\n        label: 'Census Designated Places',\r\n        path: 'ca_contracosta_cdp',\r\n      }],\r\n      portal: {\r\n        endpoint: 'https://portal.contracosta-mapping.org'\r\n      }\r\n    },\r\n    ca_sutter: {\r\n      number_markers: true,\r\n      border: true,\r\n      shapefile: true,\r\n      municipalities: true,\r\n      current_districts: true,\r\n      boundaries: [{\r\n        id: 'precincts',\r\n        label: 'Current Precincts',\r\n        path: 'current_districts/california/ca_sutter_precincts',\r\n      }]\r\n    },\r\n    ftmyers: {\r\n      number_markers: true,\r\n      border: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    contracosta: {\r\n      number_markers: true,\r\n      border: true,\r\n      shapefile: true,\r\n      municipalities: true,\r\n      portal: {\r\n        endpoint: 'https://portal.contracosta-mapping.org'\r\n      }\r\n    },\r\n    pasorobles: {\r\n      number_markers: true,\r\n      border: true,\r\n      shapefile: true\r\n    },\r\n    sacramento: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: true\r\n      // divisor: 1000,\r\n    },\r\n    \"29palms\": {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false,\r\n      current_districts: true\r\n    },\r\n    yuba_city: {\r\n      coalition: false,\r\n      shapefile: false,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false\r\n    },\r\n    buena_park: {\r\n      coalition: false,\r\n      shapefile: false,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false\r\n    },\r\n    modesto: {\r\n      coalition: false,\r\n      shapefile: false,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false\r\n    },\r\n    sbusd_5: {\r\n      coalition: false,\r\n      shapefile: false,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false,\r\n      boundaries: [\r\n        {\r\n          id: 'sbusd_feeder',\r\n          label: 'Elementary School Attendance Boundaries',\r\n          path: 'school_districts/california/sbusd-feeder-districts',\r\n          lineColor: 'black'\r\n        },\r\n        {\r\n          id: 'sbusd',\r\n          label: 'Cities and Towns',\r\n          path: 'municipalities/california/sbusd-municipalities',\r\n          lineColor: 'black'\r\n        }\r\n      ]\r\n    },\r\n    sbusd_7: {\r\n      coalition: false,\r\n      shapefile: false,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false,\r\n      boundaries: [\r\n        {\r\n          id: 'sbusd_feeder',\r\n          label: 'Elementary School Attendance Boundaries',\r\n          path: 'school_districts/california/sbusd-feeder-districts',\r\n          lineColor: 'black'\r\n        },\r\n        {\r\n          id: 'sbusd',\r\n          label: 'Cities and Towns',\r\n          path: 'municipalities/california/sbusd-municipalities',\r\n          lineColor: 'black'\r\n        }\r\n      ]\r\n    },\r\n    navajoco: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false,\r\n      current_districts: \"Supervisorial Districts\",\r\n      boundaries: []\r\n    },\r\n    san_dimas: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false\r\n    },\r\n    marinco: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      current_districts: \"Marin County\",\r\n      boundaries: [\r\n        {\r\n          path: \"municipalities/california/marinco\",\r\n          id: \"cities_towns\",\r\n          label: \"Cities and Towns\",\r\n          centroids: false,\r\n          fill: false\r\n        },\r\n        {\r\n          path: \"school_districts/california/marinco\",\r\n          id: \"school_districts\",\r\n          label: \"School Districts\",\r\n          centroids: false,\r\n          fill: false\r\n        }\r\n      ]\r\n    },\r\n    oxnarduhsd: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      boundaries: [\r\n        {\r\n          path: \"school_districts/california/oxnarduhsd_elementary\",\r\n          id: \"elementary_schools\",\r\n          label: \"Elementary School Attendance Boundaries\",\r\n          centroids: false,\r\n          fill: false\r\n        },\r\n        {\r\n          path: \"municipalities/california/oxnarduhsd\",\r\n          id: \"cities_towns\",\r\n          label: \"Cities and Towns\",\r\n          centroids: false,\r\n          fill: false\r\n        }\r\n      ]\r\n    },\r\n    anaheim: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false,\r\n      current_districts: true\r\n    },\r\n    arcadia: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false,\r\n      current_districts: true\r\n    },\r\n    la_mirada: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false,\r\n      current_districts: true\r\n    },\r\n    lakewood: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false\r\n    },\r\n    stlouis: {\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n    },\r\n    placentia: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false,\r\n      current_districts: true\r\n    },\r\n    san_bruno: {\r\n      coalition: false,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      sideload: false\r\n    },\r\n    ca_sonoma: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    sunnyvale: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    laverne: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n    },\r\n    pomona: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_richmond: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    elcajon: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_carlsbad: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    encinitas: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    buenapark: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    halfmoon: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_stockton: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    lodi: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_pasadena: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_goleta: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n    },\r\n    ca_glendora: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n    },\r\n    ca_santabarbara: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_fresno: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_fresno_ci: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_nevada: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true\r\n    },\r\n    ca_merced: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_kings: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    lake_el: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_chino: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_campbell: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_fremont: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_buellton: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n    },\r\n    ca_vallejo: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_grover: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n    },\r\n    ca_oceano: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n    },\r\n    ca_sm_county: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    sbusd: {\r\n      coalition: false,\r\n      border: true,\r\n      number_markers: true,\r\n      school_districts: true,\r\n      municipalities: true\r\n    },\r\n    pvsd: {\r\n      coalition: false,\r\n      border: true,\r\n      number_markers: true,\r\n      load_coi: true,\r\n      boundaries: [\r\n        {\r\n          id: 'es_boundary',\r\n          label: 'Elementary School Attendance Boundaries',\r\n          path: 'school_districts/california/pvsd_feeder',\r\n          lineColor: 'black'\r\n        },\r\n        {\r\n          id: 'citycouncil',\r\n          label: 'Camarillo City Council Districts (2010)',\r\n          path: 'current_districts/california/camarillo_city_council',\r\n          lineColor: 'black'\r\n        },\r\n        {\r\n          id: 'places',\r\n          label: 'Census Places',\r\n          path: 'neighborhoods/california/camarillo_places',\r\n          lineColor: 'black'\r\n        }\r\n      ]\r\n    },\r\n    ca_sanbenito: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_marin: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      current_districts: true,\r\n    },\r\n    ca_watsonville: {\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n    },\r\n  ca_marina: {\r\n    coalition: false,\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    current_districts: true,\r\n  },\r\n  ca_arroyo: {\r\n    coalition: false,\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n  },\r\n  ca_cvista: {\r\n    coalition: false,\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    current_districts: true,\r\n  },\r\n  ca_camarillo: {\r\n    coalition: false,\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    current_districts: true,\r\n  },\r\n  ca_bellflower: {\r\n    coalition: false,\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    current_districts: true,\r\n  },\r\n  napa2021: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    // contiguity: 2,\r\n  },\r\n  napacounty2021: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    // contiguity: 2,\r\n    municipalities: true,\r\n  },\r\n  ca_tuolumne: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: true\r\n  },\r\n  napa_boe: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: true\r\n  },\r\n  napa_college: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: true\r\n  },\r\n  santa_clara_h2o: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: true\r\n  },\r\n  santarosa: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: false,\r\n    coalition: false,\r\n    current_districts: true\r\n  },\r\n  ca_sanmateo: {\r\n    number_markers: true,\r\n    // contiguity: 2,\r\n    border: true,\r\n    shapefile: true,\r\n    neighborhood_borders: 'Neighborhoods'\r\n  },\r\n  ca_santa_ana: {\r\n    number_markers: true,\r\n    border: true,\r\n    shapefile: true,\r\n  },\r\n  ca_kern: {\r\n    number_markers: true,\r\n    border: true,\r\n    // contiguity: 2,\r\n    shapefile: true,\r\n    municipalities: true,\r\n  },\r\n  ca_poway: {\r\n    coalition: false,\r\n    number_markers: true\r\n  },\r\n  ca_torrance: {\r\n    coalition: false,\r\n    number_markers: true\r\n  },\r\n  menlo_park: {\r\n    border: true,\r\n    find_unpainted: true,\r\n    boundaries: [{\r\n      id: 'schools',\r\n      label: 'School Districts',\r\n      path: 'school_districts/california/menlo_park',\r\n      centroids: true,\r\n      fill: true,\r\n      fill_alt: 'orange',\r\n    },{\r\n      id: 'neighborhood',\r\n      label: 'Neighborhoods',\r\n      path: 'neighborhoods/california/menlo_park',\r\n      centroids: true,\r\n      fill: true,\r\n      fill_alt: true,\r\n    },{\r\n      id: 'flooded',\r\n      label: 'Flood Zone',\r\n      path: 'menlo_park_floodzone',\r\n      fill: '#8090c2',\r\n    },{\r\n      id: 'menloh2o',\r\n      label: 'California Water Service',\r\n      path: 'menlo_park_water',\r\n      fill: '#c6dbef',\r\n      // centroids: true,\r\n    },{\r\n      id: 'menloh2o2',\r\n      label: 'East Palo Alto Water District',\r\n      path: 'menlo_park_water2',\r\n      fill: '#9ecae1',\r\n      // centroids: true,\r\n    },{\r\n      id: 'menloh2o5',\r\n      label: 'Palo Alto Park Water District',\r\n      path: 'menlo_park_water5',\r\n      fill: '#6baed6',\r\n      // centroids: true,\r\n    },{\r\n      id: 'menloh2o3',\r\n      label: 'Menlo Park Water District',\r\n      path: 'menlo_park_water3',\r\n      fill: '#3182bd',\r\n      // centroids: true,\r\n    },{\r\n      id: 'menloh2o4',\r\n      label: 'O’Connor Water District',\r\n      path: 'menlo_park_water4',\r\n      fill: '#08519c',\r\n      // centroids: true,\r\n    },{\r\n      id: 'menlomulti',\r\n      label: 'Multi-Family Parcels',\r\n      path: 'menlo_park_multifamily',\r\n    }]\r\n  },\r\n  ca_imperial: {\r\n    number_markers: true,\r\n    border: true,\r\n    shapefile: true,\r\n    municipalities: \"Census Places\",\r\n    find_unpainted: true,\r\n  },\r\n  ojai: {\r\n    number_markers: true,\r\n    border: true,\r\n    shapefile: true,\r\n    find_unpainted: true,\r\n  },\r\n  ca_foothill: {\r\n    number_markers: true,\r\n    border: true,\r\n    shapefile: true,\r\n    find_unpainted: true,\r\n  },\r\n  ca_sanjoaquin: {\r\n    number_markers: true,\r\n    border: true,\r\n    shapefile: true,\r\n    municipalities: true,\r\n    boundaries: [{\r\n      id: 'bg_gj',\r\n      label: 'Block Groups',\r\n      path: 'ca_sanjoaquin_bg',\r\n    }, {\r\n      id: 'tract_gj',\r\n      label: 'Tracts',\r\n      path: 'ca_sanjoaquin_tract',\r\n      centroids: true,\r\n    }]\r\n  },\r\n  rp_lax: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    // contiguity: 2,\r\n    coalition: false,\r\n    current_districts: 'Current Council Districts',\r\n    boundaries: [{\r\n      id: 'latimes_places',\r\n      label: 'LA Times Neighborhoods',\r\n      path: 'neighborhoods/lax_LATimes_Neighborhood',\r\n      centroids: true,\r\n    }, {\r\n      id: 'ncouncil_places',\r\n      label: 'Neighborhood Councils',\r\n      path: 'neighborhoods/lax_neighborhood_council',\r\n      centroids: true,\r\n    }]\r\n  },\r\n  ca_butte: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    // contiguity: 2,\r\n    municipalities: 'Census Designated Places',\r\n    current_districts: true,\r\n    native_american: true,\r\n    boundaries: [{\r\n      id: 'greenline',\r\n      label: 'Greenline',\r\n      path: 'ca_butte_greenline',\r\n      lineColor: '#070',\r\n      lineWidth: 2.5,\r\n    }]\r\n  },\r\n  ca_humboldt: {\r\n    border: true,\r\n    shapefile: true,\r\n    // contiguity: 2,\r\n    number_markers: true,\r\n    municipalities: true,\r\n    sideload: true,\r\n    native_american: true,\r\n  },\r\n  ca_oakland: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    find_unpainted: true,\r\n  },\r\n  ca_martinez: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    // contiguity: 2,\r\n  },\r\n  carpinteria: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n  },\r\n  ca_brentwood: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n  },\r\n  ca_riverside: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n    boundaries: [\r\n      {\r\n        id: 'council_districts',\r\n        label: 'Current Wards (enacted 2012)',\r\n        path: 'current_districts/california/ca_riverside'\r\n      },\r\n      {\r\n        id: 'neighborhood',\r\n        label: 'Neighborhoods',\r\n        path: 'neighborhoods/california/ca_riverside',\r\n        namefield: 'Neighborho',\r\n        centroids: true,\r\n      }\r\n    ]\r\n  },\r\n  ca_rohnert: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n  },\r\n  ca_millbrae: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n  },\r\n  ca_belmont: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n  },\r\n  ca_elkgrove: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n    boundaries: [\r\n      {\r\n        id: 'council_districts',\r\n        label: 'City Council Districts (enacted 2011)',\r\n        path: 'ca_elkgrove/city_council_districts'\r\n      },\r\n      {\r\n        id: 'city_limits_census_day_2020',\r\n        label: 'City Limits before Census Day 2020',\r\n        path: 'ca_elkgrove/city_limits_census_day_2020'\r\n      },\r\n      {\r\n        id: 'special_planning_areas',\r\n        label: 'Special Planning Areas',\r\n        path: 'ca_elkgrove/special_planning_areas'\r\n      }\r\n    ]\r\n  },\r\n  az_pima: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: true,\r\n    native_american: true,\r\n    shapefile: true,\r\n    boundaries: [\r\n      {\r\n        id: 'current_supervisor_dists',\r\n        label: 'Current Supervisor/P.C.C. Districts',\r\n        path: 'az_pima/current_supervisor_dists'\r\n      },\r\n      {\r\n        id: 'incorp_jurisdictions',\r\n        label: 'Incorporated Jurisdictions',\r\n        path: 'az_pima/incorp_jurisdictions'\r\n      },\r\n      {\r\n        id: \"incumbent_precincts\",\r\n        label: \"Voter Precincts Containing Incumbent Elected Official’s Residence\",\r\n        path: \"az_pima/incumbent_precincts\"\r\n      },\r\n      {\r\n        id: 'school_districts',\r\n        label: 'School Districts',\r\n        centroids: true,\r\n        namefield: 'SDISTNAME',\r\n        path: 'az_pima/school_districts'\r\n      }\r\n    ]\r\n  },\r\n  az_maricopa: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n    boundaries: [\r\n      {\r\n        id: 'school',\r\n        label: 'School Districts',\r\n        path: 'az_maricopa/school'\r\n      },\r\n      {\r\n        id: 'congressional',\r\n        label: 'Congressional Districts',\r\n        path: 'az_maricopa/congressional'\r\n      },\r\n      {\r\n        id: \"legislative\",\r\n        label: \"Legislative Districts\",\r\n        path: \"az_maricopa/legislative\"\r\n      },\r\n      {\r\n        id: 'current',\r\n        label: 'Current Districts',\r\n        path: 'az_maricopa/current'\r\n      },\r\n      {\r\n        id: 'cities',\r\n        label: 'Cities',\r\n        centroids: true,\r\n        namefield: 'Juris',\r\n        path: 'az_maricopa/cities'\r\n      }\r\n    ]\r\n  },\r\n  sanjoseca: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    boundaries: [{\r\n      id: 'sj_places',\r\n      label: 'Neighborhoods',\r\n      path: 'neighborhoods/sanjose_neighborhoods',\r\n      centroids: true,\r\n    }]\r\n  },\r\n  ca_scvosa: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n    boundaries: [\r\n      {\r\n        id: 'fee_title',\r\n        label: 'Protected Lands: Fee Title',\r\n        path: 'ca_scvosa/fee_title'\r\n      },\r\n      {\r\n        id: 'conservation_easement',\r\n        label: 'Protected Lands: Conservation Easements',\r\n        path: 'ca_scvosa/conservation_easement'\r\n      },\r\n      {\r\n        id: 'schools',\r\n        label: 'K-12 Schools',\r\n        path: 'ca_scvosa/schools',\r\n        centroids: true,\r\n        namefield: 'School'\r\n      },\r\n      {\r\n        id: 'census_places',\r\n        label: 'Census Places',\r\n        path: 'ca_scvosa/census_places',\r\n        centroids: true\r\n      }\r\n    ]\r\n  },\r\n  ca_west_sac: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n  },\r\n  ca_diamond_bar: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n    boundaries: [\r\n      {\r\n        id: 'parks',\r\n        label: 'Parks',\r\n        centroids: true,\r\n        namefield: 'NAME',\r\n        path: 'ca_diamond_bar/parks'\r\n      },\r\n      {\r\n        id: 'school_districts',\r\n        label: 'School Districts',\r\n        centroids: true,\r\n        namefield: 'NAME',\r\n        path: 'ca_diamond_bar/school_districts',\r\n        lineWidth: 0.5\r\n      }\r\n    ]\r\n  },\r\n  ca_fpud: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n    boundaries: [\r\n      {\r\n        id: 'current_divisions',\r\n        label: 'Current Divisions',\r\n        path: 'ca_fpud/current_divisions',\r\n      }\r\n    ]\r\n  },\r\n  indianapolis_cc: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n    boundaries: [\r\n      {\r\n        id: 'neighborhoods',\r\n        label: 'Neighborhoods',\r\n        path: 'indianapolis_cc/neighborhoods',\r\n        centroids: true,\r\n        namefield: 'NAME'\r\n      },\r\n      {\r\n        id: 'cities_and_towns',\r\n        label: 'Cities and Towns',\r\n        path: 'indianapolis_cc/cities_and_towns',\r\n        centroids: true,\r\n        namefield: 'CITYNAME'\r\n      }\r\n    ]\r\n  },\r\n  nm_abq: {\r\n    border: true,\r\n    number_markers: true,\r\n    coalition: false,\r\n    boundaries: [\r\n      {\r\n        id: 'current_districts',\r\n        label: 'City Council Districts (enacted 2011)',\r\n        path: 'nm_abq/current_districts',\r\n      },\r\n      {\r\n        id: 'incumbents',\r\n        label: `Current City Councilor Locations`,\r\n        path: 'nm_abq/incumbents',\r\n        centroids: true,\r\n        namefield: 'Name'\r\n      }\r\n    ]\r\n  },\r\n  redwood: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    // contiguity: 2,\r\n    current_districts: true,\r\n    school_districts: true,\r\n    neighborhood_borders: true,\r\n  },\r\n  ca_ventura: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: true,\r\n  },\r\n  ca_yolo: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: true,\r\n  },\r\n  longbeach: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    find_unpainted: true,\r\n    current_districts: true,\r\n  },\r\n  ca_solano: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: true,\r\n  },\r\n  ca_sc_county: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: true,\r\n  },\r\n  ca_siskiyou: {\r\n    border: true,\r\n    shapefile: true,\r\n    number_markers: true,\r\n    municipalities: true,\r\n  },\r\n    sanluiso: {\r\n      coalition: false,\r\n      number_markers: true,\r\n      // contiguity: 2,\r\n      shapefile: true,\r\n      border: true,\r\n      municipalities: true,\r\n      // sideload: true,\r\n    },\r\n    ccsanitation: {\r\n      shapefile: true,\r\n    },\r\n    ccsanitation2: {\r\n      shapefile: true,\r\n      border: true,\r\n      current_districts: true,\r\n      number_markers: true,\r\n    },\r\n    santa_clara: {\r\n      border: true,\r\n    },\r\n    napa: {\r\n      number_markers: true,\r\n      border: true,\r\n    },\r\n    napaschools: {\r\n      number_markers: true,\r\n      coalition: false,\r\n      border: true,\r\n    },\r\n    chicago: {\r\n      number_markers: true,\r\n      multiyear: 2019,\r\n      border: true,\r\n      parties: [\r\n        \"Rahm Emanuel\",\r\n        \"Jesus \\u201cChuy\\u201d Garc\\u00eda\",\r\n        \"Lori Lightfoot\",\r\n        \"Toni Preckwinkle\",\r\n      ]\r\n    },\r\n    colorado: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      load_coi: false,\r\n    },\r\n    connecticut: {\r\n      county_brush: true,\r\n      native_american: true,\r\n      number_markers: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      load_coi: false,\r\n    },\r\n    dc: {\r\n      number_markers: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    delaware: {\r\n      number_markers: true,\r\n      native_american: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    florida: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      sideload: true,\r\n      portal: {\r\n        endpoint: \"https://portal.florida-mapping.org\",\r\n      },\r\n    },\r\n    miamifl: {\r\n      number_markers: true,\r\n      neighborhoods: true,\r\n      border: true,\r\n    },\r\n    miamidade: {\r\n      number_markers: true,\r\n      neighborhoods: true,\r\n      boundaries: [{\r\n        path: 'city_border/miamifl',\r\n        id: 'citybor',\r\n        label: 'Show City Border',\r\n      }]\r\n    },\r\n    fl_hills: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n    },\r\n    fl_orange: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n    },\r\n    fl_osceola: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n    },\r\n    orlando: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n    },\r\n    tampa: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n    },\r\n    kissimmee: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n    },\r\n    georgia: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    hawaii: {\r\n      number_markers: true,\r\n      native_american: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n    },\r\n    idaho: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      contiguity: 2,\r\n      find_unpainted: true,\r\n    },\r\n    illinois: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    indiana: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      school_districts: true,\r\n      current_districts: true,\r\n      municipalities: 'Cities and Towns',\r\n      portal: {\r\n        endpoint: 'https://portal.indiana-mapping.org',\r\n      },\r\n    },\r\n    iowa: {\r\n      number_markers: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n    },\r\n    kansas: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    kentucky: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    lax: {\r\n      neighborhoods: true,\r\n      number_markers: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      boundaries: [{\r\n        id: 'va2010',\r\n        label: 'State Assembly',\r\n        path: 'lax_2010'\r\n      }, {\r\n        id: 'va2013',\r\n        label: 'State Senate',\r\n        path: 'lax_senate'\r\n      }, {\r\n        id: 'lax_ush',\r\n        label: 'US House',\r\n        path: 'lax_congress'\r\n      }]\r\n    },\r\n    little_rock: {\r\n      number_markers: true,\r\n    },\r\n    louisiana: {\r\n      native_american: true,\r\n      county_brush: true, // lakes\r\n      number_markers: true, // fetch is failing?\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      load_coi: false,\r\n    },\r\n    la_vra: {\r\n      native_american: true,\r\n      vra_effectiveness: true,\r\n      county_brush: true, // lakes\r\n      number_markers: true,\r\n    },\r\n    batonrouge: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      // find_unpainted: true, COI only\r\n    },\r\n    maine: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    maryland: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      // absentee: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      load_coi: false,\r\n    },\r\n    baltimore: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      contiguity: 2,\r\n      boundaries: [{\r\n        id: 'cityprec',\r\n        label: 'Voter Precincts',\r\n        path: 'baltimore-precincts'\r\n      }]\r\n    },\r\n    ma: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n      portal: {\r\n        endpoint: 'https://www.massachusetts-mapping.org',\r\n      },\r\n    },\r\n    ma_vra: {\r\n      number_markers: true,\r\n      vra_effectiveness: true,\r\n      // shapefile: true,\r\n      // find_unpainted: true,\r\n    },\r\n    ma_vra2: {\r\n      number_markers: true,\r\n      // vra_effectiveness: true,\r\n      // shapefile: true,\r\n      // find_unpainted: true,\r\n    },\r\n    boston22: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      boundaries: [{\r\n        id: 'council',\r\n        label: 'Current Districts',\r\n        path: 'boston-council',\r\n        namefield: 'DISTRICT',\r\n        centroids: true,\r\n        lineColor: '#007',\r\n        lineWidth: 2,\r\n      }, {\r\n        id: 'precincts',\r\n        label: 'Precinct Names',\r\n        path: 'boston-precincts',\r\n        namefield: 'DISTRICT',\r\n        centroids: true,\r\n      }],\r\n    },\r\n    lowell: {\r\n      neighborhoods: true,\r\n      contiguity: 2,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      coalition: false,\r\n      border: true,\r\n      // find_unpainted: true,\r\n    },\r\n    ma_worcester_fix: {\r\n      number_markers: true,\r\n      coalition: false,\r\n      border: true,\r\n      shapefile: true,\r\n      boundaries: [\r\n        {\r\n          id: 'city_council',\r\n          label: 'City Council Districts',\r\n          path: 'ma_worcester/city_council'\r\n        },\r\n        {\r\n          id: 'wards',\r\n          label: 'Wards (2020)',\r\n          path: 'ma_worcester/worcester-wards'\r\n        },\r\n        {\r\n          id: \"voting_precincts\",\r\n          label: \"Voting Precincts (2020)\",\r\n          path: \"ma_worcester/worcester-precincts\"\r\n        }\r\n      ]\r\n    },\r\n    in_bloomington: {\r\n      number_markers: true,\r\n      coalition: false,\r\n      border: true\r\n    },\r\n    massachusetts: {\r\n      portal: {\r\n        endpoint: 'https://www.massachusetts-mapping.org',\r\n      },\r\n    },\r\n    michigan: {\r\n      load_coi: true,\r\n      coi: {\r\n        tilesets: [\r\n          {\r\n            source: {\r\n              type: \"vector\",\r\n              url: \"mapbox://districtr.michigan_bg_clusters\"\r\n            },\r\n            type: \"fill\",\r\n            sourceLayer: \"michigan_bg_clusters\",\r\n            clusterLayer: true\r\n          }\r\n        ],\r\n        clusterKey: \"cluster\",\r\n        clusterData: {\r\n          url: \"/assets/clusters/MI/clusters.json\"\r\n        }\r\n      },\r\n      number_markers: true,\r\n      native_american: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      current_districts: true,\r\n      school_districts: true,\r\n      municipalities: true,\r\n      contiguity: 2,\r\n      portal: {\r\n        endpoint: 'https://www.michigan-mapping.org',\r\n      },\r\n    },\r\n    minnesota: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    mn2020acs: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    olmsted: {\r\n      number_markers: true,\r\n      border: true,\r\n      boundaries: [{\r\n          path: 'city_border/rochestermn',\r\n          id: 'citybor',\r\n          label: 'Show Rochester Border',\r\n      }]\r\n    },\r\n    rochestermn: {\r\n      number_markers: true,\r\n      border: true,\r\n    },\r\n    washington_mn: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n    },\r\n    stlouis_mn: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      boundaries: [{\r\n          path: 'city_border/duluth',\r\n          id: 'citybor',\r\n          label: 'Show Duluth Border',\r\n      }]\r\n    },\r\n    minneapolis: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      boundaries: [\r\n        {\r\n          id: 'minn_wards',\r\n          label: 'Current City Council Wards',\r\n          path: 'current_districts/minnesota/city_council/minneapolis',\r\n          centroids: true\r\n        },\r\n        {\r\n          id: 'minn_park_dists',\r\n          label: 'Current Park Districts',\r\n          path: 'current_districts/minnesota/park_districts/minneapolis',\r\n          centroids: true\r\n        },\r\n        {\r\n          id: 'minn_neighborhoods',\r\n          label: 'Neighborhoods',\r\n          path: 'neighborhoods/minnesota/minneapolis',\r\n          centroids: true\r\n        }\r\n      ],\r\n      portal: {\r\n        endpoint: \"https://portal.minneapolis-mapping.org\"\r\n      }\r\n    },\r\n    mississippi: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    missouri: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      load_coi: false,\r\n      // find_unpainted: true,\r\n      school_districts: true,\r\n      contiguity: 2,\r\n      portal: {\r\n        endpoint: \"https://portal.missouri-mapping.org\",\r\n      },\r\n      coi: {\r\n        tilesets: [\r\n          {\r\n            source: {\r\n              type: \"vector\",\r\n              url: \"mapbox://districtr.missouri_bg_clusters\"\r\n            },\r\n            type: \"fill\",\r\n            sourceLayer: \"missouri_bg_clusters\",\r\n            clusterLayer: true\r\n          }\r\n        ],\r\n        clusterKey: \"cluster\",\r\n        clusterData: {\r\n          url: \"/assets/clusters/MO/clusters.json\"\r\n        }\r\n      }\r\n    },\r\n    montana: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      county_brush: true,\r\n    },\r\n    mt_pris_adj: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      // shapefile: true,\r\n    },\r\n    nebraska: {\r\n      number_markers: true,\r\n      native_american: true,\r\n      county_brush: true,\r\n      // absentee: true,\r\n      shapefile: true,\r\n      load_coi: false,\r\n      // find_unpainted: true,\r\n    },\r\n    nevada: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      contiguity: 2,\r\n    },\r\n    newhampshire: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n      school_districts: true\r\n    },\r\n    newjersey: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      contiguity: 2,\r\n    },\r\n    new_mexico: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      contiguity: 2,\r\n      current_districts: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      block_assign: true,\r\n    },\r\n    new_mexico_portal: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      contiguity: 2,\r\n      current_districts: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      election_history: false,\r\n      block_assign: true,\r\n      portal: {\r\n        endpoint: 'https://portal.newmexico-mapping.org',\r\n      },\r\n    },\r\n    new_mexico_bg: {\r\n      native_american: true,\r\n      shapefile: true,\r\n      current_districts: true,\r\n      county_brush: true,\r\n      // find_unpainted: true,\r\n      portal: {\r\n        endpoint: 'https://portal.newmexico-mapping.org',\r\n      },\r\n    },\r\n    santafe: {\r\n      number_markers: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n    },\r\n    newyork: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n    },\r\n      nyc_popdemo: {\r\n        number_markers: true,\r\n        shapefile: true,\r\n        coalition: true,\r\n        sideload: true,\r\n        boundaries: [\r\n          {\r\n            id: 'nyc_district',\r\n            label: 'City Council Districts (2012)',\r\n            path: 'current_districts/nyc/city_council',\r\n            centroids: false,\r\n            lineColor: '#007',\r\n          },\r\n          {\r\n            id: 'nyc_comm',\r\n            label: 'Community Boards link:https://communityprofiles.planning.nyc.gov/',\r\n            path: 'current_districts/nyc/community',\r\n            centroids: false,\r\n            lineColor: '#700',\r\n          },\r\n          {\r\n            id: 'nyc_boro',\r\n            label: 'Boroughs',\r\n            path: 'current_districts/nyc/boroughs',\r\n            centroids: false,\r\n          },\r\n        ],\r\n      },\r\n    northcarolina: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      coi2: true,\r\n      current_districts: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      coalition: false,\r\n    },\r\n    forsyth_nc: {\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      boundaries: [{\r\n        id: 'citybor',\r\n        label: 'Show Winston-Salem Border',\r\n        path: 'forsyth_nc_muni'\r\n      }]\r\n    },\r\n    buncombe: {\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      border: true,\r\n      boundaries: [{\r\n          path: 'city_border/asheville',\r\n          id: 'citybor',\r\n          label: 'Show Asheville Border',\r\n      }]\r\n    },\r\n    northdakota: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n      nd_benson: {\r\n        native_american: true,\r\n        number_markers: true,\r\n        shapefile: true,\r\n        county_filter: [\"all\",\r\n            [\">\", [\"get\", \"GEOID20\"], \"38005\"],\r\n            [\"<\", [\"get\", \"GEOID20\"], \"38006\"]\r\n          ],\r\n      },\r\n      nd_dunn: {\r\n        native_american: true,\r\n        number_markers: true,\r\n        shapefile: true,\r\n        county_filter: [\"all\",\r\n            [\">\", [\"get\", \"GEOID20\"], \"38025\"],\r\n            [\"<\", [\"get\", \"GEOID20\"], \"38026\"]\r\n          ],\r\n      },\r\n      nd_mckenzie: {\r\n        native_american: true,\r\n        number_markers: true,\r\n        shapefile: true,\r\n        county_filter: [\"all\",\r\n            [\">\", [\"get\", \"GEOID20\"], \"38053\"],\r\n            [\"<\", [\"get\", \"GEOID20\"], \"38054\"]\r\n          ],\r\n      },\r\n      nd_mountrail: {\r\n        native_american: true,\r\n        number_markers: true,\r\n        shapefile: true,\r\n        county_filter: [\"all\",\r\n            [\">\", [\"get\", \"GEOID20\"], \"38061\"],\r\n            [\"<\", [\"get\", \"GEOID20\"], \"38062\"]\r\n          ],\r\n      },\r\n      nd_ramsey: {\r\n        native_american: true,\r\n        number_markers: true,\r\n        shapefile: true,\r\n        county_filter: [\"all\",\r\n            [\">\", [\"get\", \"GEOID20\"], \"38071\"],\r\n            [\"<\", [\"get\", \"GEOID20\"], \"38072\"]\r\n          ],\r\n      },\r\n      nd_rollette: {\r\n        native_american: true,\r\n        number_markers: true,\r\n        shapefile: true,\r\n        county_filter: [\"all\",\r\n            [\">\", [\"get\", \"GEOID20\"], \"38079\"],\r\n            [\"<\", [\"get\", \"GEOID20\"], \"38080\"]\r\n          ],\r\n      },\r\n      nd_sioux: {\r\n        native_american: true,\r\n        number_markers: true,\r\n        shapefile: true,\r\n        county_filter: [\"all\",\r\n            [\">\", [\"get\", \"GEOID20\"], \"38085\"],\r\n            [\"<\", [\"get\", \"GEOID20\"], \"38086\"]\r\n          ],\r\n      },\r\n    ohio: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      // find_unpainted: true - needs contiguity\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n      school_districts: true,\r\n      current_districts: true,\r\n      // COI clusters.\r\n      coi: {\r\n        tilesets: [\r\n          {\r\n            source: {\r\n              type: \"vector\",\r\n              url: \"mapbox://districtr.ohio_bg_clusters\"\r\n            },\r\n            type: \"fill\",\r\n            sourceLayer: \"ohio_bg_clusters\",\r\n            clusterLayer: true\r\n          }\r\n        ],\r\n        clusterKey: \"cluster\",\r\n        clusterData: {\r\n          url: \"/assets/clusters/OH/clusters.json\"\r\n        }\r\n      }\r\n    },\r\n    ohcentral: {\r\n      multiyear: 2019,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      school_districts: true,\r\n      municipalities: 'Cities and Towns',\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    ohakron: {\r\n      multiyear: 2019,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      school_districts: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    ohcin: {\r\n      multiyear: 2019,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      school_districts: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    ohcle: {\r\n      multiyear: 2019,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      school_districts: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    ohse: {\r\n      multiyear: 2019,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      school_districts: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    ohtoledo: {\r\n      multiyear: 2019,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      school_districts: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    akroncanton: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    cincinnati: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    clevelandeuclid: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    columbus: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    dayton: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    limaoh: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    mansfield: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    portsmouthoh: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    toledo: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    youngstown: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n      border: true,\r\n      portal: {\r\n        endpoint: 'https://portal.ohio-mapping.org',\r\n      },\r\n    },\r\n    oklahoma: {\r\n      number_markers: true,\r\n      native_american: true,\r\n      county_brush: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    ontarioca: {\r\n      number_markers: true,\r\n      border: true,\r\n    },\r\n    oregon: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    portlandor: {\r\n      number_markers: true,\r\n      contiguity: 2,\r\n      border: true,\r\n    },\r\n    pennsylvania: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      sideload: true,\r\n      load_coi: false,\r\n      contiguity: 2,\r\n      portal: {\r\n        endpoint: \"https://portal.pennsylvania-mapping.org\",\r\n      },\r\n    },\r\n    pa_adj: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      sideload: true,\r\n      load_coi: false,\r\n      contiguity: 2,\r\n    },\r\n    pa_prison_adj: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      sideload: true,\r\n      load_coi: false,\r\n      contiguity: 2,\r\n    },\r\n    philadelphia: {\r\n      number_markers: true,\r\n      contiguity: 2,\r\n      find_unpainted: true,\r\n      border: true,\r\n    },\r\n    puertorico: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    puertorico_prec: {\r\n      number_markers: true,\r\n      parties: [\"Nuevo Progresista\", \"Popular Democrático\", \"Nuevo Progresista\", \"Popular Democrático\"],\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n    },\r\n    rhode_island: {\r\n      number_markers: true,\r\n      shapefile: true,\r\n    },\r\n    providence_ri: {\r\n      border: true,\r\n    },\r\n    cranston_ri: {\r\n      border: true,\r\n      shapefile: true,\r\n      number_markers: true,\r\n      find_unpainted: true,\r\n    },\r\n    southcarolina: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n    },\r\n    southdakota: {\r\n      native_american: true,\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n    },\r\n    tennessee: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n    },\r\n    texas: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      contiguity: 2,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      sideload: true,\r\n      portal: {\r\n        endpoint: \"https://portal.texas-mapping.org\",\r\n      },\r\n    },\r\n    tarranttx: {\r\n      number_markers: true,\r\n      contiguity: true,\r\n    },\r\n    harristx: {\r\n      number_markers: true,\r\n      contiguity: true,\r\n    },\r\n    tx_vra: {\r\n      vra_effectiveness: true,\r\n      county_brush: true,\r\n      number_markers: true,\r\n    },\r\n    dallastx: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      current_districts: true,\r\n    },\r\n    austin: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      contiguity: true,\r\n    },\r\n    fortworth: {\r\n      border: true,\r\n      number_markers: true,\r\n    },\r\n    houston: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      multiyear: 2019,\r\n    },\r\n    elpasotx: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      boundaries: [{\r\n        id: 'precinct_gj',\r\n        label: 'Current Precincts',\r\n        path: 'elpasotx_precincts',\r\n        namefield: 'CURRENT_PC',\r\n        unitType: 'block',\r\n        centroids: true,\r\n      }]\r\n    },\r\n    elpaso2: {\r\n      border: true,\r\n      number_markers: true,\r\n      shapefile: true,\r\n      boundaries: [{\r\n        id: 'precinct_gj',\r\n        label: 'Current Precincts',\r\n        path: 'elpasotx_precincts',\r\n        namefield: 'CURRENT_PC',\r\n        unitType: 'blockgroup',\r\n        centroids: true,\r\n      }]\r\n    },\r\n    utah: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n      portal: {\r\n        endpoint: 'https://portal.utah-mapping.org',\r\n      },\r\n    },\r\n      'grand_county_2': {\r\n        portal: {\r\n          endpoint: 'https://portal.utah-mapping.org',\r\n        },\r\n        shapefile: true,\r\n      },\r\n      'grand_county_3': {\r\n        portal: {\r\n          endpoint: 'https://portal.utah-mapping.org',\r\n        },\r\n        shapefile: true,\r\n      },\r\n    vermont: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n    },\r\n    virginia: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      // native_american: true,\r\n      shapefile: true,\r\n      // find_unpainted: true,\r\n      load_coi: false,\r\n      portal: {\r\n        endpoint: 'https://portal.virginia-mapping.org',\r\n      },\r\n      boundaries: [{\r\n        id: 'va2010',\r\n        label: '2003-2013 Congressional Plan',\r\n        path: 'virginia_2010'\r\n      },\r\n      {\r\n        id: 'va2013',\r\n        label: '2013-2017 Congressional Plan',\r\n        path: 'virginia_2013'\r\n      }]\r\n    },\r\n    vabeach: {\r\n      multiyear: 2018,\r\n      number_markers: true,\r\n      border: true,\r\n      // find_unpainted: true,\r\n    },\r\n    washington: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      contiguity: 2,\r\n    },\r\n    yakima_wa: {\r\n      coalition: false,\r\n    },\r\n    kingcountywa: {\r\n      border: true,\r\n    },\r\n    westvirginia: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n    },\r\n    wisconsin: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      current_districts: true,\r\n      school_districts: true,\r\n      municipalities: true,\r\n      contiguity: 2,\r\n      portal: {\r\n        endpoint: 'https://portal.wisconsin-mapping.org',\r\n      },\r\n      sideload: true,\r\n      coi: {\r\n        tilesets: [\r\n          {\r\n            source: {\r\n              type: \"vector\",\r\n              url: \"mapbox://districtr.wisconsin_bg_clusters\"\r\n            },\r\n            type: \"fill\",\r\n            sourceLayer: \"wisconsin_bg_clusters\",\r\n            clusterLayer: true\r\n          }\r\n        ],\r\n        clusterKey: \"cluster\",\r\n        clusterData: {\r\n          url: \"/assets/clusters/WI/clusters.json\"\r\n        }\r\n      }\r\n    },\r\n    wisconsin2020: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      current_districts: true,\r\n      school_districts: true,\r\n      municipalities: true,\r\n      contiguity: 2,\r\n      portal: {\r\n        endpoint: 'https://portal.wisconsin-mapping.org',\r\n      },\r\n      sideload: true,\r\n      load_coi: true,\r\n      coi: {\r\n        tilesets: [\r\n          {\r\n            source: {\r\n              type: \"vector\",\r\n              url: \"mapbox://districtr.wisconsin_bg_clusters\"\r\n            },\r\n            type: \"fill\",\r\n            sourceLayer: \"wisconsin_bg_clusters\",\r\n            clusterLayer: true\r\n          }\r\n        ],\r\n        clusterKey: \"cluster\",\r\n        clusterData: {\r\n          url: \"/assets/clusters/WI/clusters.json\"\r\n        }\r\n      }\r\n    },\r\n    wisco2019acs: {\r\n      number_markers: true,\r\n      county_brush: true,\r\n      native_american: true,\r\n      shapefile: true,\r\n      find_unpainted: true,\r\n      current_districts: true,\r\n      school_districts: true,\r\n      municipalities: true,\r\n      contiguity: 2,\r\n      portal: {\r\n        endpoint: 'https://portal.wisconsin-mapping.org',\r\n      },\r\n      sideload: true,\r\n      coi: {\r\n        tilesets: [\r\n          {\r\n            source: {\r\n              type: \"vector\",\r\n              url: \"mapbox://districtr.wisconsin_bg_clusters\"\r\n            },\r\n            type: \"fill\",\r\n            sourceLayer: \"wisconsin_bg_clusters\",\r\n            clusterLayer: true\r\n          }\r\n        ],\r\n        clusterKey: \"cluster\",\r\n        clusterData: {\r\n          url: \"/assets/clusters/WI/clusters.json\"\r\n        }\r\n      }\r\n    },\r\n    wyoming: {\r\n      native_american: true,\r\n      number_markers: true,\r\n    }\r\n  };\r\n  return status[id] || {};\r\n}\r\n\r\nexport function nested(st) {\r\n  return [\r\n    'alaska',\r\n    'illinois',\r\n    'iowa',\r\n    'minnesota',\r\n    'montana',\r\n    'ohio',\r\n    'oregon',\r\n    'southdakota',\r\n    'washington',\r\n    'wisconsin'].includes(st);\r\n}\r\n\r\nexport function one_cd(st) {\r\n  return [\r\n    'alaska',\r\n    'alaska_blocks',\r\n    'delaware',\r\n    'montana',\r\n    'northdakota',\r\n    'southdakota',\r\n    'vermont',\r\n    'wyoming'].includes(st)\r\n}\r\n\r\n// takes a state and county FIPS code and gives you the county name\r\nexport function county_fips_to_name(fips, state) {\r\n  fips = fips % 1000;\r\n  const codes = {\r\n      ohio:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Allen\",\r\n          5: \"Ashland\",\r\n          7: \"Ashtabula\",\r\n          9: \"Athens\",\r\n          11: \"Auglaize\",\r\n          13: \"Belmont\",\r\n          15: \"Brown\",\r\n          17: \"Butler\",\r\n          19: \"Carroll\",\r\n          21: \"Champaign\",\r\n          23: \"Clark\",\r\n          25: \"Clermont\",\r\n          27: \"Clinton\",\r\n          29: \"Columbiana\",\r\n          31: \"Coshocton\",\r\n          33: \"Crawford\",\r\n          35: \"Cuyahoga\",\r\n          37: \"Darke\",\r\n          39: \"Defiance\",\r\n          41: \"Delaware\",\r\n          43: \"Erie\",\r\n          45: \"Fairfield\",\r\n          47: \"Fayette\",\r\n          49: \"Franklin\",\r\n          51: \"Fulton\",\r\n          53: \"Gallia\",\r\n          55: \"Geauga\",\r\n          57: \"Greene\",\r\n          59: \"Guernsey\",\r\n          61: \"Hamilton\",\r\n          63: \"Hancock\",\r\n          65: \"Hardin\",\r\n          67: \"Harrison\",\r\n          69: \"Henry\",\r\n          71: \"Highland\",\r\n          73: \"Hocking\",\r\n          75: \"Holmes\",\r\n          77: \"Huron\",\r\n          79: \"Jackson\",\r\n          81: \"Jefferson\",\r\n          83: \"Knox\",\r\n          85: \"Lake\",\r\n          87: \"Lawrence\",\r\n          89: \"Licking\",\r\n          91: \"Logan\",\r\n          93: \"Lorain\",\r\n          95: \"Lucas\",\r\n          97: \"Madison\",\r\n          99: \"Mahoning\",\r\n          101: \"Marion\",\r\n          103: \"Medina\",\r\n          105: \"Meigs\",\r\n          107: \"Mercer\",\r\n          109: \"Miami\",\r\n          111: \"Monroe\",\r\n          113: \"Montgomery\",\r\n          115: \"Morgan\",\r\n          117: \"Morrow\",\r\n          119: \"Muskingum\",\r\n          121: \"Noble\",\r\n          123: \"Ottawa\",\r\n          125: \"Paulding\",\r\n          127: \"Perry\",\r\n          129: \"Pickaway\",\r\n          131: \"Pike\",\r\n          133: \"Portage\",\r\n          135: \"Preble\",\r\n          137: \"Putnam\",\r\n          139: \"Richland\",\r\n          141: \"Ross\",\r\n          143: \"Sandusky\",\r\n          145: \"Scioto\",\r\n          147: \"Seneca\",\r\n          149: \"Shelby\",\r\n          151: \"Stark\",\r\n          153: \"Summit\",\r\n          155: \"Trumbull\",\r\n          157: \"Tuscarawas\",\r\n          159: \"Union\",\r\n          161: \"Van Wert\",\r\n          163: \"Vinton\",\r\n          165: \"Warren\",\r\n          167: \"Washington\",\r\n          169: \"Wayne\",\r\n          171: \"Williams\",\r\n          173: \"Wood\",\r\n          175: \"Wyandot\"\r\n      },\r\n      newyork:\r\n      {\r\n          1: \"Albany\",\r\n          3: \"Allegany\",\r\n          5: \"Bronx\",\r\n          7: \"Broome\",\r\n          9: \"Cattaraugus\",\r\n          11: \"Cayuga\",\r\n          13: \"Chautauqua\",\r\n          15: \"Chemung\",\r\n          17: \"Chenango\",\r\n          19: \"Clinton\",\r\n          21: \"Columbia\",\r\n          23: \"Cortland\",\r\n          25: \"Delaware\",\r\n          27: \"Dutchess\",\r\n          29: \"Erie\",\r\n          31: \"Essex\",\r\n          33: \"Franklin\",\r\n          35: \"Fulton\",\r\n          37: \"Genesee\",\r\n          39: \"Greene\",\r\n          41: \"Hamilton\",\r\n          43: \"Herkimer\",\r\n          45: \"Jefferson\",\r\n          47: \"Kings\",\r\n          49: \"Lewis\",\r\n          51: \"Livingston\",\r\n          53: \"Madison\",\r\n          55: \"Monroe\",\r\n          57: \"Montgomery\",\r\n          59: \"Nassau\",\r\n          61: \"New York\",\r\n          63: \"Niagara\",\r\n          65: \"Oneida\",\r\n          67: \"Onondaga\",\r\n          69: \"Ontario\",\r\n          71: \"Orange\",\r\n          73: \"Orleans\",\r\n          75: \"Oswego\",\r\n          77: \"Otsego\",\r\n          79: \"Putnam\",\r\n          81: \"Queens\",\r\n          83: \"Rensselaer\",\r\n          85: \"Richmond\",\r\n          87: \"Rockland\",\r\n          89: \"St Lawrence\",\r\n          91: \"Saratoga\",\r\n          93: \"Schenectady\",\r\n          95: \"Schoharie\",\r\n          97: \"Schuyler\",\r\n          99: \"Seneca\",\r\n          101: \"Steuben\",\r\n          103: \"Suffolk\",\r\n          105: \"Sullivan\",\r\n          107: \"Tioga\",\r\n          109: \"Tompkins\",\r\n          111: \"Ulster\",\r\n          113: \"Warren\",\r\n          115: \"Washington\",\r\n          117: \"Wayne\",\r\n          119: \"Westchester\",\r\n          121: \"Wyoming\",\r\n          123: \"Yates\"\r\n      },\r\n      mississippi:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Alcorn\",\r\n          5: \"Amite\",\r\n          7: \"Attala\",\r\n          9: \"Benton\",\r\n          11: \"Bolivar\",\r\n          13: \"Calhoun\",\r\n          15: \"Carroll\",\r\n          17: \"Chickasaw\",\r\n          19: \"Choctaw\",\r\n          21: \"Claiborne\",\r\n          23: \"Clarke\",\r\n          25: \"Clay\",\r\n          27: \"Coahoma\",\r\n          29: \"Copiah\",\r\n          31: \"Covington\",\r\n          33: \"De Soto\",\r\n          35: \"Forrest\",\r\n          37: \"Franklin\",\r\n          39: \"George\",\r\n          41: \"Greene\",\r\n          43: \"Grenada\",\r\n          45: \"Hancock\",\r\n          47: \"Harrison\",\r\n          49: \"Hinds\",\r\n          51: \"Holmes\",\r\n          53: \"Humphreys\",\r\n          55: \"Issaquena\",\r\n          57: \"Itawamba\",\r\n          59: \"Jackson\",\r\n          61: \"Jasper\",\r\n          63: \"Jefferson\",\r\n          65: \"Jefferson Davis\",\r\n          67: \"Jones\",\r\n          69: \"Kemper\",\r\n          71: \"Lafayette\",\r\n          73: \"Lamar\",\r\n          75: \"Lauderdale\",\r\n          77: \"Lawrence\",\r\n          79: \"Leake\",\r\n          81: \"Lee\",\r\n          83: \"Leflore\",\r\n          85: \"Lincoln\",\r\n          87: \"Lowndes\",\r\n          89: \"Madison\",\r\n          91: \"Marion\",\r\n          93: \"Marshall\",\r\n          95: \"Monroe\",\r\n          97: \"Montgomery\",\r\n          99: \"Neshoba\",\r\n          101: \"Newton\",\r\n          103: \"Noxubee\",\r\n          105: \"Oktibbeha\",\r\n          107: \"Panola\",\r\n          109: \"Pearl River\",\r\n          111: \"Perry\",\r\n          113: \"Pike\",\r\n          115: \"Pontotoc\",\r\n          117: \"Prentiss\",\r\n          119: \"Quitman\",\r\n          121: \"Rankin\",\r\n          123: \"Scott\",\r\n          125: \"Sharkey\",\r\n          127: \"Simpson\",\r\n          129: \"Smith\",\r\n          131: \"Stone\",\r\n          133: \"Sunflower\",\r\n          135: \"Tallahatchie\",\r\n          137: \"Tate\",\r\n          139: \"Tippah\",\r\n          141: \"Tishomingo\",\r\n          143: \"Tunica\",\r\n          145: \"Union\",\r\n          147: \"Walthall\",\r\n          149: \"Warren\",\r\n          151: \"Washington\",\r\n          153: \"Wayne\",\r\n          155: \"Webster\",\r\n          157: \"Wilkinson\",\r\n          159: \"Winston\",\r\n          161: \"Yalobusha\",\r\n          163: \"Yazoo\"\r\n      },\r\n      massachusetts:\r\n      {\r\n          1: \"Barnstable\",\r\n          3: \"Berkshire\",\r\n          5: \"Bristol\",\r\n          7: \"Dukes\",\r\n          9: \"Essex\",\r\n          11: \"Franklin\",\r\n          13: \"Hampden\",\r\n          15: \"Hampshire\",\r\n          17: \"Middlesex\",\r\n          19: \"Nantucket\",\r\n          21: \"Norfolk\",\r\n          23: \"Plymouth\",\r\n          25: \"Suffolk\",\r\n          27: \"Worcester\"\r\n      },\r\n      northdakota:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Barnes\",\r\n          5: \"Benson\",\r\n          7: \"Billings\",\r\n          9: \"Bottineau\",\r\n          11: \"Bowman\",\r\n          13: \"Burke\",\r\n          15: \"Burleigh\",\r\n          17: \"Cass\",\r\n          19: \"Cavalier\",\r\n          21: \"Dickey\",\r\n          23: \"Divide\",\r\n          25: \"Dunn\",\r\n          27: \"Eddy\",\r\n          29: \"Emmons\",\r\n          31: \"Foster\",\r\n          33: \"Golden Valley\",\r\n          35: \"Grand Forks\",\r\n          37: \"Grant\",\r\n          39: \"Griggs\",\r\n          41: \"Hettinger\",\r\n          43: \"Kidder\",\r\n          45: \"La Moure\",\r\n          47: \"Logan\",\r\n          49: \"McHenry\",\r\n          51: \"McIntosh\",\r\n          53: \"McKenzie\",\r\n          55: \"McLean\",\r\n          57: \"Mercer\",\r\n          59: \"Morton\",\r\n          61: \"Mountrail\",\r\n          63: \"Nelson\",\r\n          65: \"Oliver\",\r\n          67: \"Pembina\",\r\n          69: \"Pierce\",\r\n          71: \"Ramsey\",\r\n          73: \"Ransom\",\r\n          75: \"Renville\",\r\n          77: \"Richland\",\r\n          79: \"Rolette\",\r\n          81: \"Sargent\",\r\n          83: \"Sheridan\",\r\n          85: \"Sioux\",\r\n          87: \"Slope\",\r\n          89: \"Stark\",\r\n          91: \"Steele\",\r\n          93: \"Stutsman\",\r\n          95: \"Towner\",\r\n          97: \"Traill\",\r\n          99: \"Walsh\",\r\n          101: \"Ward\",\r\n          103: \"Wells\",\r\n          105: \"Williams\"\r\n      },\r\n      nebraska:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Antelope\",\r\n          5: \"Arthur\",\r\n          7: \"Banner\",\r\n          9: \"Blaine\",\r\n          11: \"Boone\",\r\n          13: \"Box Butte\",\r\n          15: \"Boyd\",\r\n          17: \"Brown\",\r\n          19: \"Buffalo\",\r\n          21: \"Burt\",\r\n          23: \"Butler\",\r\n          25: \"Cass\",\r\n          27: \"Cedar\",\r\n          29: \"Chase\",\r\n          31: \"Cherry\",\r\n          33: \"Cheyenne\",\r\n          35: \"Clay\",\r\n          37: \"Colfax\",\r\n          39: \"Cuming\",\r\n          41: \"Custer\",\r\n          43: \"Dakota\",\r\n          45: \"Dawes\",\r\n          47: \"Dawson\",\r\n          49: \"Deuel\",\r\n          51: \"Dixon\",\r\n          53: \"Dodge\",\r\n          55: \"Douglas\",\r\n          57: \"Dundy\",\r\n          59: \"Fillmore\",\r\n          61: \"Franklin\",\r\n          63: \"Frontier\",\r\n          65: \"Furnas\",\r\n          67: \"Gage\",\r\n          69: \"Garden\",\r\n          71: \"Garfield\",\r\n          73: \"Gosper\",\r\n          75: \"Grant\",\r\n          77: \"Greeley\",\r\n          79: \"Hall\",\r\n          81: \"Hamilton\",\r\n          83: \"Harlan\",\r\n          85: \"Hayes\",\r\n          87: \"Hitchcock\",\r\n          89: \"Holt\",\r\n          91: \"Hooker\",\r\n          93: \"Howard\",\r\n          95: \"Jefferson\",\r\n          97: \"Johnson\",\r\n          99: \"Kearney\",\r\n          101: \"Keith\",\r\n          103: \"Keya Paha\",\r\n          105: \"Kimball\",\r\n          107: \"Knox\",\r\n          109: \"Lancaster\",\r\n          111: \"Lincoln\",\r\n          113: \"Logan\",\r\n          115: \"Loup\",\r\n          117: \"McPherson\",\r\n          119: \"Madison\",\r\n          121: \"Merrick\",\r\n          123: \"Morrill\",\r\n          125: \"Nance\",\r\n          127: \"Nemaha\",\r\n          129: \"Nuckolls\",\r\n          131: \"Otoe\",\r\n          133: \"Pawnee\",\r\n          135: \"Perkins\",\r\n          137: \"Phelps\",\r\n          139: \"Pierce\",\r\n          141: \"Platte\",\r\n          143: \"Polk\",\r\n          145: \"Red Willow\",\r\n          147: \"Richardson\",\r\n          149: \"Rock\",\r\n          151: \"Saline\",\r\n          153: \"Sarpy\",\r\n          155: \"Saunders\",\r\n          157: \"Scotts Bluff\",\r\n          159: \"Seward\",\r\n          161: \"Sheridan\",\r\n          163: \"Sherman\",\r\n          165: \"Sioux\",\r\n          167: \"Stanton\",\r\n          169: \"Thayer\",\r\n          171: \"Thomas\",\r\n          173: \"Thurston\",\r\n          175: \"Valley\",\r\n          177: \"Washington\",\r\n          179: \"Wayne\",\r\n          181: \"Webster\",\r\n          183: \"Wheeler\",\r\n          185: \"York\"\r\n      },\r\n      nevada:\r\n      {\r\n          1: \"Churchill\",\r\n          3: \"Clark\",\r\n          5: \"Douglas\",\r\n          7: \"Elko\",\r\n          9: \"Esmeralda\",\r\n          11: \"Eureka\",\r\n          13: \"Humboldt\",\r\n          15: \"Lander\",\r\n          17: \"Lincoln\",\r\n          19: \"Lyon\",\r\n          21: \"Mineral\",\r\n          23: \"Nye\",\r\n          27: \"Pershing\",\r\n          29: \"Storey\",\r\n          31: \"Washoe\",\r\n          33: \"White Pine\",\r\n          510: \"Carson City\"\r\n      },\r\n      virginislands:\r\n      {\r\n          10: \"St. Croix\",\r\n          20: \"St. John\",\r\n          30: \"St. Thomas\"\r\n      },\r\n      alabama:\r\n      {\r\n          1: \"Autauga\",\r\n          3: \"Baldwin\",\r\n          5: \"Barbour\",\r\n          7: \"Bibb\",\r\n          9: \"Blount\",\r\n          11: \"Bullock\",\r\n          13: \"Butler\",\r\n          15: \"Calhoun\",\r\n          17: \"Chambers\",\r\n          19: \"Cherokee\",\r\n          21: \"Chilton\",\r\n          23: \"Choctaw\",\r\n          25: \"Clarke\",\r\n          27: \"Clay\",\r\n          29: \"Cleburne\",\r\n          31: \"Coffee\",\r\n          33: \"Colbert\",\r\n          35: \"Conecuh\",\r\n          37: \"Coosa\",\r\n          39: \"Covington\",\r\n          41: \"Crenshaw\",\r\n          43: \"Cullman\",\r\n          45: \"Dale\",\r\n          47: \"Dallas\",\r\n          49: \"De Kalb\",\r\n          51: \"Elmore\",\r\n          53: \"Escambia\",\r\n          55: \"Etowah\",\r\n          57: \"Fayette\",\r\n          59: \"Franklin\",\r\n          61: \"Geneva\",\r\n          63: \"Greene\",\r\n          65: \"Hale\",\r\n          67: \"Henry\",\r\n          69: \"Houston\",\r\n          71: \"Jackson\",\r\n          73: \"Jefferson\",\r\n          75: \"Lamar\",\r\n          77: \"Lauderdale\",\r\n          79: \"Lawrence\",\r\n          81: \"Lee\",\r\n          83: \"Limestone\",\r\n          85: \"Lowndes\",\r\n          87: \"Macon\",\r\n          89: \"Madison\",\r\n          91: \"Marengo\",\r\n          93: \"Marion\",\r\n          95: \"Marshall\",\r\n          97: \"Mobile\",\r\n          99: \"Monroe\",\r\n          101: \"Montgomery\",\r\n          103: \"Morgan\",\r\n          105: \"Perry\",\r\n          107: \"Pickens\",\r\n          109: \"Pike\",\r\n          111: \"Randolph\",\r\n          113: \"Russell\",\r\n          115: \"St Clair\",\r\n          117: \"Shelby\",\r\n          119: \"Sumter\",\r\n          121: \"Talladega\",\r\n          123: \"Tallapoosa\",\r\n          125: \"Tuscaloosa\",\r\n          127: \"Walker\",\r\n          129: \"Washington\",\r\n          131: \"Wilcox\",\r\n          133: \"Winston\"\r\n      },\r\n      delaware:\r\n      {\r\n          1: \"Kent\",\r\n          3: \"New Castle\",\r\n          5: \"Sussex\"\r\n      },\r\n      virginia:\r\n      {\r\n          1: \"Accomack\",\r\n          3: \"Albemarle\",\r\n          5: \"Alleghany\",\r\n          7: \"Amelia\",\r\n          9: \"Amherst\",\r\n          11: \"Appomattox\",\r\n          13: \"Arlington\",\r\n          15: \"Augusta\",\r\n          17: \"Bath\",\r\n          19: \"Bedford\",\r\n          21: \"Bland\",\r\n          23: \"Botetourt\",\r\n          25: \"Brunswick\",\r\n          27: \"Buchanan\",\r\n          29: \"Buckingham\",\r\n          31: \"Campbell\",\r\n          33: \"Caroline\",\r\n          35: \"Carroll\",\r\n          36: \"Charles City\",\r\n          37: \"Charlotte\",\r\n          41: \"Chesterfield\",\r\n          43: \"Clarke\",\r\n          45: \"Craig\",\r\n          47: \"Culpeper\",\r\n          49: \"Cumberland\",\r\n          51: \"Dickenson\",\r\n          53: \"Dinwiddie\",\r\n          57: \"Essex\",\r\n          59: \"Fairfax\",\r\n          61: \"Fauquier\",\r\n          63: \"Floyd\",\r\n          65: \"Fluvanna\",\r\n          67: \"Franklin\",\r\n          69: \"Frederick\",\r\n          71: \"Giles\",\r\n          73: \"Gloucester\",\r\n          75: \"Goochland\",\r\n          77: \"Grayson\",\r\n          79: \"Greene\",\r\n          81: \"Greensville\",\r\n          83: \"Halifax\",\r\n          85: \"Hanover\",\r\n          87: \"Henrico\",\r\n          89: \"Henry\",\r\n          91: \"Highland\",\r\n          93: \"Isle of Wight\",\r\n          95: \"James City\",\r\n          97: \"King and Queen\",\r\n          99: \"King George\",\r\n          101: \"King William\",\r\n          103: \"Lancaster\",\r\n          105: \"Lee\",\r\n          107: \"Loudoun\",\r\n          109: \"Louisa\",\r\n          111: \"Lunenburg\",\r\n          113: \"Madison\",\r\n          115: \"Mathews\",\r\n          117: \"Mecklenburg\",\r\n          119: \"Middlesex\",\r\n          121: \"Montgomery\",\r\n          125: \"Nelson\",\r\n          127: \"New Kent\",\r\n          131: \"Northampton\",\r\n          133: \"Northumberland\",\r\n          135: \"Nottoway\",\r\n          137: \"Orange\",\r\n          139: \"Page\",\r\n          141: \"Patrick\",\r\n          143: \"Pittsylvania\",\r\n          145: \"Powhatan\",\r\n          147: \"Prince Edward\",\r\n          149: \"Prince George\",\r\n          153: \"Prince William\",\r\n          155: \"Pulaski\",\r\n          157: \"Rappahannock\",\r\n          159: \"Richmond\",\r\n          161: \"Roanoke\",\r\n          163: \"Rockbridge\",\r\n          165: \"Rockingham\",\r\n          167: \"Russell\",\r\n          169: \"Scott\",\r\n          171: \"Shenandoah\",\r\n          173: \"Smyth\",\r\n          175: \"Southampton\",\r\n          177: \"Spotsylvania\",\r\n          179: \"Stafford\",\r\n          181: \"Surry\",\r\n          183: \"Sussex\",\r\n          185: \"Tazewell\",\r\n          187: \"Warren\",\r\n          191: \"Washington\",\r\n          193: \"Westmoreland\",\r\n          195: \"Wise\",\r\n          197: \"Wythe\",\r\n          199: \"York\",\r\n          510: \"Alexandria City\",\r\n          515: \"Bedford City\",\r\n          520: \"Bristol City\",\r\n          530: \"Buena Vista City\",\r\n          540: \"Charlottesville City\",\r\n          550: \"Chesapeake City\",\r\n          560: \"Clifton Forge City\",\r\n          570: \"Colonial Heights Cit\",\r\n          580: \"Covington City\",\r\n          590: \"Danville City\",\r\n          595: \"Emporia City\",\r\n          600: \"Fairfax City\",\r\n          610: \"Falls Church City\",\r\n          620: \"Franklin City\",\r\n          630: \"Fredericksburg City\",\r\n          640: \"Galax City\",\r\n          650: \"Hampton City\",\r\n          660: \"Harrisonburg City\",\r\n          670: \"Hopewell City\",\r\n          678: \"Lexington City\",\r\n          680: \"Lynchburg City\",\r\n          683: \"Manassas City\",\r\n          685: \"Manassas Park City\",\r\n          690: \"Martinsville City\",\r\n          700: \"Newport News City\",\r\n          710: \"Norfolk City\",\r\n          720: \"Norton City\",\r\n          730: \"Petersburg City\",\r\n          735: \"Poquoson City\",\r\n          740: \"Portsmouth City\",\r\n          750: \"Radford City\",\r\n          760: \"Richmond City\",\r\n          770: \"Roanoke City\",\r\n          775: \"Salem City\",\r\n          780: \"South Boston City\",\r\n          790: \"Staunton City\",\r\n          800: \"Suffolk City\",\r\n          810: \"Virginia Beach City\",\r\n          820: \"Waynesboro City\",\r\n          830: \"Williamsburg City\",\r\n          840: \"Winchester City\"\r\n      },\r\n      vermont:\r\n      {\r\n          1: \"Addison\",\r\n          3: \"Bennington\",\r\n          5: \"Caledonia\",\r\n          7: \"Chittenden\",\r\n          9: \"Essex\",\r\n          11: \"Franklin\",\r\n          13: \"Grand Isle\",\r\n          15: \"Lamoille\",\r\n          17: \"Orange\",\r\n          19: \"Orleans\",\r\n          21: \"Rutland\",\r\n          23: \"Washington\",\r\n          25: \"Windham\",\r\n          27: \"Windsor\"\r\n      },\r\n      southdakota:\r\n      {\r\n          3: \"Aurora\",\r\n          5: \"Beadle\",\r\n          7: \"Bennett\",\r\n          9: \"Bon Homme\",\r\n          11: \"Brookings\",\r\n          13: \"Brown\",\r\n          15: \"Brule\",\r\n          17: \"Buffalo\",\r\n          19: \"Butte\",\r\n          21: \"Campbell\",\r\n          23: \"Charles Mix\",\r\n          25: \"Clark\",\r\n          27: \"Clay\",\r\n          29: \"Codington\",\r\n          31: \"Corson\",\r\n          33: \"Custer\",\r\n          35: \"Davison\",\r\n          37: \"Day\",\r\n          39: \"Deuel\",\r\n          41: \"Dewey\",\r\n          43: \"Douglas\",\r\n          45: \"Edmunds\",\r\n          47: \"Fall River\",\r\n          49: \"Faulk\",\r\n          51: \"Grant\",\r\n          53: \"Gregory\",\r\n          55: \"Haakon\",\r\n          57: \"Hamlin\",\r\n          59: \"Hand\",\r\n          61: \"Hanson\",\r\n          63: \"Harding\",\r\n          65: \"Hughes\",\r\n          67: \"Hutchinson\",\r\n          69: \"Hyde\",\r\n          71: \"Jackson\",\r\n          73: \"Jerauld\",\r\n          75: \"Jones\",\r\n          77: \"Kingsbury\",\r\n          79: \"Lake\",\r\n          81: \"Lawrence\",\r\n          83: \"Lincoln\",\r\n          85: \"Lyman\",\r\n          87: \"McCook\",\r\n          89: \"McPherson\",\r\n          91: \"Marshall\",\r\n          93: \"Meade\",\r\n          95: \"Mellette\",\r\n          97: \"Miner\",\r\n          99: \"Minnehaha\",\r\n          101: \"Moody\",\r\n          103: \"Pennington\",\r\n          105: \"Perkins\",\r\n          107: \"Potter\",\r\n          109: \"Roberts\",\r\n          111: \"Sanborn\",\r\n          113: \"Shannon\",\r\n          115: \"Spink\",\r\n          117: \"Stanley\",\r\n          119: \"Sully\",\r\n          121: \"Todd\",\r\n          123: \"Tripp\",\r\n          125: \"Turner\",\r\n          127: \"Union\",\r\n          129: \"Walworth\",\r\n          135: \"Yankton\",\r\n          137: \"Ziebach\"\r\n      },\r\n      wyoming:\r\n      {\r\n          1: \"Albany\",\r\n          3: \"Big Horn\",\r\n          5: \"Campbell\",\r\n          7: \"Carbon\",\r\n          9: \"Converse\",\r\n          11: \"Crook\",\r\n          13: \"Fremont\",\r\n          15: \"Goshen\",\r\n          17: \"Hot Springs\",\r\n          19: \"Johnson\",\r\n          21: \"Laramie\",\r\n          23: \"Lincoln\",\r\n          25: \"Natrona\",\r\n          27: \"Niobrara\",\r\n          29: \"Park\",\r\n          31: \"Platte\",\r\n          33: \"Sheridan\",\r\n          35: \"Sublette\",\r\n          37: \"Sweetwater\",\r\n          39: \"Teton\",\r\n          41: \"Uinta\",\r\n          43: \"Washakie\",\r\n          45: \"Weston\"\r\n      },\r\n      alaska:\r\n      {\r\n          13: \"Aleutians East\",\r\n          16: \"Aleutians West\",\r\n          20: \"Anchorage\",\r\n          50: \"Bethel\",\r\n          60: \"Bristol Bay\",\r\n          68: \"Denali\",\r\n          70: \"Dillingham\",\r\n          90: \"Fairbanks North Star\",\r\n          100: \"Haines\",\r\n          110: \"Juneau\",\r\n          122: \"Kenai Peninsula\",\r\n          130: \"Ketchikan Gateway\",\r\n          150: \"Kodiak Island\",\r\n          164: \"Lake and Peninsula\",\r\n          170: \"Matanuska-Susitna\",\r\n          180: \"Nome\",\r\n          185: \"North Slope\",\r\n          188: \"Northwest Arctic\",\r\n          201: \"Prince of Wales-Outer Ketchikan\",\r\n          220: \"Sitka\",\r\n          232: \"Skagway-Hoonah-Angoon\",\r\n          240: \"Southeast Fairbanks\",\r\n          261: \"Valdez-Cordova\",\r\n          270: \"Wade Hampton\",\r\n          280: \"Wrangell-Petersburg\",\r\n          282: \"Yakutat\",\r\n          290: \"Yukon-Koyukuk\"\r\n      },\r\n      oregon:\r\n      {\r\n          1: \"Baker\",\r\n          3: \"Benton\",\r\n          5: \"Clackamas\",\r\n          7: \"Clatsop\",\r\n          9: \"Columbia\",\r\n          11: \"Coos\",\r\n          13: \"Crook\",\r\n          15: \"Curry\",\r\n          17: \"Deschutes\",\r\n          19: \"Douglas\",\r\n          21: \"Gilliam\",\r\n          23: \"Grant\",\r\n          25: \"Harney\",\r\n          27: \"Hood River\",\r\n          29: \"Jackson\",\r\n          31: \"Jefferson\",\r\n          33: \"Josephine\",\r\n          35: \"Klamath\",\r\n          37: \"Lake\",\r\n          39: \"Lane\",\r\n          41: \"Lincoln\",\r\n          43: \"Linn\",\r\n          45: \"Malheur\",\r\n          47: \"Marion\",\r\n          49: \"Morrow\",\r\n          51: \"Multnomah\",\r\n          53: \"Polk\",\r\n          55: \"Sherman\",\r\n          57: \"Tillamook\",\r\n          59: \"Umatilla\",\r\n          61: \"Union\",\r\n          63: \"Wallowa\",\r\n          65: \"Wasco\",\r\n          67: \"Washington\",\r\n          69: \"Wheeler\",\r\n          71: \"Yamhill\"\r\n      },\r\n      wisconsin:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Ashland\",\r\n          5: \"Barron\",\r\n          7: \"Bayfield\",\r\n          9: \"Brown\",\r\n          11: \"Buffalo\",\r\n          13: \"Burnett\",\r\n          15: \"Calumet\",\r\n          17: \"Chippewa\",\r\n          19: \"Clark\",\r\n          21: \"Columbia\",\r\n          23: \"Crawford\",\r\n          25: \"Dane\",\r\n          27: \"Dodge\",\r\n          29: \"Door\",\r\n          31: \"Douglas\",\r\n          33: \"Dunn\",\r\n          35: \"Eau Claire\",\r\n          37: \"Florence\",\r\n          39: \"Fond du Lac\",\r\n          41: \"Forest\",\r\n          43: \"Grant\",\r\n          45: \"Green\",\r\n          47: \"Green Lake\",\r\n          49: \"Iowa\",\r\n          51: \"Iron\",\r\n          53: \"Jackson\",\r\n          55: \"Jefferson\",\r\n          57: \"Juneau\",\r\n          59: \"Kenosha\",\r\n          61: \"Kewaunee\",\r\n          63: \"La Crosse\",\r\n          65: \"Lafayette\",\r\n          67: \"Langlade\",\r\n          69: \"Lincoln\",\r\n          71: \"Manitowoc\",\r\n          73: \"Marathon\",\r\n          75: \"Marinette\",\r\n          77: \"Marquette\",\r\n          78: \"Menominee\",\r\n          79: \"Milwaukee\",\r\n          81: \"Monroe\",\r\n          83: \"Oconto\",\r\n          85: \"Oneida\",\r\n          87: \"Outagamie\",\r\n          89: \"Ozaukee\",\r\n          91: \"Pepin\",\r\n          93: \"Pierce\",\r\n          95: \"Polk\",\r\n          97: \"Portage\",\r\n          99: \"Price\",\r\n          101: \"Racine\",\r\n          103: \"Richland\",\r\n          105: \"Rock\",\r\n          107: \"Rusk\",\r\n          109: \"St Croix\",\r\n          111: \"Sauk\",\r\n          113: \"Sawyer\",\r\n          115: \"Shawano\",\r\n          117: \"Sheboygan\",\r\n          119: \"Taylor\",\r\n          121: \"Trempealeau\",\r\n          123: \"Vernon\",\r\n          125: \"Vilas\",\r\n          127: \"Walworth\",\r\n          129: \"Washburn\",\r\n          131: \"Washington\",\r\n          133: \"Waukesha\",\r\n          135: \"Waupaca\",\r\n          137: \"Waushara\",\r\n          139: \"Winnebago\",\r\n          141: \"Wood\"\r\n      },\r\n      districtofcolumbia:\r\n      {\r\n          1: \"Washington\"\r\n      },\r\n      georgia:\r\n      {\r\n          1: \"Appling\",\r\n          3: \"Atkinson\",\r\n          5: \"Bacon\",\r\n          7: \"Baker\",\r\n          9: \"Baldwin\",\r\n          11: \"Banks\",\r\n          13: \"Barrow\",\r\n          15: \"Bartow\",\r\n          17: \"Ben Hill\",\r\n          19: \"Berrien\",\r\n          21: \"Bibb\",\r\n          23: \"Bleckley\",\r\n          25: \"Brantley\",\r\n          27: \"Brooks\",\r\n          29: \"Bryan\",\r\n          31: \"Bulloch\",\r\n          33: \"Burke\",\r\n          35: \"Butts\",\r\n          37: \"Calhoun\",\r\n          39: \"Camden\",\r\n          43: \"Candler\",\r\n          45: \"Carroll\",\r\n          47: \"Catoosa\",\r\n          49: \"Charlton\",\r\n          51: \"Chatham\",\r\n          53: \"Chattahoochee\",\r\n          55: \"Chattooga\",\r\n          57: \"Cherokee\",\r\n          59: \"Clarke\",\r\n          61: \"Clay\",\r\n          63: \"Clayton\",\r\n          65: \"Clinch\",\r\n          67: \"Cobb\",\r\n          69: \"Coffee\",\r\n          71: \"Colquitt\",\r\n          73: \"Columbia\",\r\n          75: \"Cook\",\r\n          77: \"Coweta\",\r\n          79: \"Crawford\",\r\n          81: \"Crisp\",\r\n          83: \"Dade\",\r\n          85: \"Dawson\",\r\n          87: \"Decatur\",\r\n          89: \"De Kalb\",\r\n          91: \"Dodge\",\r\n          93: \"Dooly\",\r\n          95: \"Dougherty\",\r\n          97: \"Douglas\",\r\n          99: \"Early\",\r\n          101: \"Echols\",\r\n          103: \"Effingham\",\r\n          105: \"Elbert\",\r\n          107: \"Emanuel\",\r\n          109: \"Evans\",\r\n          111: \"Fannin\",\r\n          113: \"Fayette\",\r\n          115: \"Floyd\",\r\n          117: \"Forsyth\",\r\n          119: \"Franklin\",\r\n          121: \"Fulton\",\r\n          123: \"Gilmer\",\r\n          125: \"Glascock\",\r\n          127: \"Glynn\",\r\n          129: \"Gordon\",\r\n          131: \"Grady\",\r\n          133: \"Greene\",\r\n          135: \"Gwinnett\",\r\n          137: \"Habersham\",\r\n          139: \"Hall\",\r\n          141: \"Hancock\",\r\n          143: \"Haralson\",\r\n          145: \"Harris\",\r\n          147: \"Hart\",\r\n          149: \"Heard\",\r\n          151: \"Henry\",\r\n          153: \"Houston\",\r\n          155: \"Irwin\",\r\n          157: \"Jackson\",\r\n          159: \"Jasper\",\r\n          161: \"Jeff Davis\",\r\n          163: \"Jefferson\",\r\n          165: \"Jenkins\",\r\n          167: \"Johnson\",\r\n          169: \"Jones\",\r\n          171: \"Lamar\",\r\n          173: \"Lanier\",\r\n          175: \"Laurens\",\r\n          177: \"Lee\",\r\n          179: \"Liberty\",\r\n          181: \"Lincoln\",\r\n          183: \"Long\",\r\n          185: \"Lowndes\",\r\n          187: \"Lumpkin\",\r\n          189: \"McDuffie\",\r\n          191: \"McIntosh\",\r\n          193: \"Macon\",\r\n          195: \"Madison\",\r\n          197: \"Marion\",\r\n          199: \"Meriwether\",\r\n          201: \"Miller\",\r\n          205: \"Mitchell\",\r\n          207: \"Monroe\",\r\n          209: \"Montgomery\",\r\n          211: \"Morgan\",\r\n          213: \"Murray\",\r\n          215: \"Muscogee\",\r\n          217: \"Newton\",\r\n          219: \"Oconee\",\r\n          221: \"Oglethorpe\",\r\n          223: \"Paulding\",\r\n          225: \"Peach\",\r\n          227: \"Pickens\",\r\n          229: \"Pierce\",\r\n          231: \"Pike\",\r\n          233: \"Polk\",\r\n          235: \"Pulaski\",\r\n          237: \"Putnam\",\r\n          239: \"Quitman\",\r\n          241: \"Rabun\",\r\n          243: \"Randolph\",\r\n          245: \"Richmond\",\r\n          247: \"Rockdale\",\r\n          249: \"Schley\",\r\n          251: \"Screven\",\r\n          253: \"Seminole\",\r\n          255: \"Spalding\",\r\n          257: \"Stephens\",\r\n          259: \"Stewart\",\r\n          261: \"Sumter\",\r\n          263: \"Talbot\",\r\n          265: \"Taliaferro\",\r\n          267: \"Tattnall\",\r\n          269: \"Taylor\",\r\n          271: \"Telfair\",\r\n          273: \"Terrell\",\r\n          275: \"Thomas\",\r\n          277: \"Tift\",\r\n          279: \"Toombs\",\r\n          281: \"Towns\",\r\n          283: \"Treutlen\",\r\n          285: \"Troup\",\r\n          287: \"Turner\",\r\n          289: \"Twiggs\",\r\n          291: \"Union\",\r\n          293: \"Upson\",\r\n          295: \"Walker\",\r\n          297: \"Walton\",\r\n          299: \"Ware\",\r\n          301: \"Warren\",\r\n          303: \"Washington\",\r\n          305: \"Wayne\",\r\n          307: \"Webster\",\r\n          309: \"Wheeler\",\r\n          311: \"White\",\r\n          313: \"Whitfield\",\r\n          315: \"Wilcox\",\r\n          317: \"Wilkes\",\r\n          319: \"Wilkinson\",\r\n          321: \"Worth\"\r\n      },\r\n      westvirginia:\r\n      {\r\n          1: \"Barbour\",\r\n          3: \"Berkeley\",\r\n          5: \"Boone\",\r\n          7: \"Braxton\",\r\n          9: \"Brooke\",\r\n          11: \"Cabell\",\r\n          13: \"Calhoun\",\r\n          15: \"Clay\",\r\n          17: \"Doddridge\",\r\n          19: \"Fayette\",\r\n          21: \"Gilmer\",\r\n          23: \"Grant\",\r\n          25: \"Greenbrier\",\r\n          27: \"Hampshire\",\r\n          29: \"Hancock\",\r\n          31: \"Hardy\",\r\n          33: \"Harrison\",\r\n          35: \"Jackson\",\r\n          37: \"Jefferson\",\r\n          39: \"Kanawha\",\r\n          41: \"Lewis\",\r\n          43: \"Lincoln\",\r\n          45: \"Logan\",\r\n          47: \"McDowell\",\r\n          49: \"Marion\",\r\n          51: \"Marshall\",\r\n          53: \"Mason\",\r\n          55: \"Mercer\",\r\n          57: \"Mineral\",\r\n          59: \"Mingo\",\r\n          61: \"Monongalia\",\r\n          63: \"Monroe\",\r\n          65: \"Morgan\",\r\n          67: \"Nicholas\",\r\n          69: \"Ohio\",\r\n          71: \"Pendleton\",\r\n          73: \"Pleasants\",\r\n          75: \"Pocahontas\",\r\n          77: \"Preston\",\r\n          79: \"Putnam\",\r\n          81: \"Raleigh\",\r\n          83: \"Randolph\",\r\n          85: \"Ritchie\",\r\n          87: \"Roane\",\r\n          89: \"Summers\",\r\n          91: \"Taylor\",\r\n          93: \"Tucker\",\r\n          95: \"Tyler\",\r\n          97: \"Upshur\",\r\n          99: \"Wayne\",\r\n          101: \"Webster\",\r\n          103: \"Wetzel\",\r\n          105: \"Wirt\",\r\n          107: \"Wood\",\r\n          109: \"Wyoming\"\r\n      },\r\n      newmexico:\r\n      {\r\n          1: \"Bernalillo\",\r\n          3: \"Catron\",\r\n          5: \"Chaves\",\r\n          6: \"Cibola\",\r\n          7: \"Colfax\",\r\n          9: \"Curry\",\r\n          11: \"De Baca\",\r\n          13: \"Dona Ana\",\r\n          15: \"Eddy\",\r\n          17: \"Grant\",\r\n          19: \"Guadalupe\",\r\n          21: \"Harding\",\r\n          23: \"Hidalgo\",\r\n          25: \"Lea\",\r\n          27: \"Lincoln\",\r\n          28: \"Los Alamos\",\r\n          29: \"Luna\",\r\n          31: \"McKinley\",\r\n          33: \"Mora\",\r\n          35: \"Otero\",\r\n          37: \"Quay\",\r\n          39: \"Rio Arriba\",\r\n          41: \"Roosevelt\",\r\n          43: \"Sandoval\",\r\n          45: \"San Juan\",\r\n          47: \"San Miguel\",\r\n          49: \"Santa Fe\",\r\n          51: \"Sierra\",\r\n          53: \"Socorro\",\r\n          55: \"Taos\",\r\n          57: \"Torrance\",\r\n          59: \"Union\",\r\n          61: \"Valencia\"\r\n      },\r\n      kansas:\r\n      {\r\n          1: \"Allen\",\r\n          3: \"Anderson\",\r\n          5: \"Atchison\",\r\n          7: \"Barber\",\r\n          9: \"Barton\",\r\n          11: \"Bourbon\",\r\n          13: \"Brown\",\r\n          15: \"Butler\",\r\n          17: \"Chase\",\r\n          19: \"Chautauqua\",\r\n          21: \"Cherokee\",\r\n          23: \"Cheyenne\",\r\n          25: \"Clark\",\r\n          27: \"Clay\",\r\n          29: \"Cloud\",\r\n          31: \"Coffey\",\r\n          33: \"Comanche\",\r\n          35: \"Cowley\",\r\n          37: \"Crawford\",\r\n          39: \"Decatur\",\r\n          41: \"Dickinson\",\r\n          43: \"Doniphan\",\r\n          45: \"Douglas\",\r\n          47: \"Edwards\",\r\n          49: \"Elk\",\r\n          51: \"Ellis\",\r\n          53: \"Ellsworth\",\r\n          55: \"Finney\",\r\n          57: \"Ford\",\r\n          59: \"Franklin\",\r\n          61: \"Geary\",\r\n          63: \"Gove\",\r\n          65: \"Graham\",\r\n          67: \"Grant\",\r\n          69: \"Gray\",\r\n          71: \"Greeley\",\r\n          73: \"Greenwood\",\r\n          75: \"Hamilton\",\r\n          77: \"Harper\",\r\n          79: \"Harvey\",\r\n          81: \"Haskell\",\r\n          83: \"Hodgeman\",\r\n          85: \"Jackson\",\r\n          87: \"Jefferson\",\r\n          89: \"Jewell\",\r\n          91: \"Johnson\",\r\n          93: \"Kearny\",\r\n          95: \"Kingman\",\r\n          97: \"Kiowa\",\r\n          99: \"Labette\",\r\n          101: \"Lane\",\r\n          103: \"Leavenworth\",\r\n          105: \"Lincoln\",\r\n          107: \"Linn\",\r\n          109: \"Logan\",\r\n          111: \"Lyon\",\r\n          113: \"McPherson\",\r\n          115: \"Marion\",\r\n          117: \"Marshall\",\r\n          119: \"Meade\",\r\n          121: \"Miami\",\r\n          123: \"Mitchell\",\r\n          125: \"Montgomery\",\r\n          127: \"Morris\",\r\n          129: \"Morton\",\r\n          131: \"Nemaha\",\r\n          133: \"Neosho\",\r\n          135: \"Ness\",\r\n          137: \"Norton\",\r\n          139: \"Osage\",\r\n          141: \"Osborne\",\r\n          143: \"Ottawa\",\r\n          145: \"Pawnee\",\r\n          147: \"Phillips\",\r\n          149: \"Pottawatomie\",\r\n          151: \"Pratt\",\r\n          153: \"Rawlins\",\r\n          155: \"Reno\",\r\n          157: \"Republic\",\r\n          159: \"Rice\",\r\n          161: \"Riley\",\r\n          163: \"Rooks\",\r\n          165: \"Rush\",\r\n          167: \"Russell\",\r\n          169: \"Saline\",\r\n          171: \"Scott\",\r\n          173: \"Sedgwick\",\r\n          175: \"Seward\",\r\n          177: \"Shawnee\",\r\n          179: \"Sheridan\",\r\n          181: \"Sherman\",\r\n          183: \"Smith\",\r\n          185: \"Stafford\",\r\n          187: \"Stanton\",\r\n          189: \"Stevens\",\r\n          191: \"Sumner\",\r\n          193: \"Thomas\",\r\n          195: \"Trego\",\r\n          197: \"Wabaunsee\",\r\n          199: \"Wallace\",\r\n          201: \"Washington\",\r\n          203: \"Wichita\",\r\n          205: \"Wilson\",\r\n          207: \"Woodson\",\r\n          209: \"Wyandotte\"\r\n      },\r\n      louisiana:\r\n      {\r\n          1: \"Acadia\",\r\n          3: \"Allen\",\r\n          5: \"Ascension\",\r\n          7: \"Assumption\",\r\n          9: \"Avoyelles\",\r\n          11: \"Beauregard\",\r\n          13: \"Bienville\",\r\n          15: \"Bossier\",\r\n          17: \"Caddo\",\r\n          19: \"Calcasieu\",\r\n          21: \"Caldwell\",\r\n          23: \"Cameron\",\r\n          25: \"Catahoula\",\r\n          27: \"Claiborne\",\r\n          29: \"Concordia\",\r\n          31: \"De Soto\",\r\n          33: \"East Baton Rouge\",\r\n          35: \"East Carroll\",\r\n          37: \"East Feliciana\",\r\n          39: \"Evangeline\",\r\n          41: \"Franklin\",\r\n          43: \"Grant\",\r\n          45: \"Iberia\",\r\n          47: \"Iberville\",\r\n          49: \"Jackson\",\r\n          51: \"Jefferson\",\r\n          53: \"Jefferson Davis\",\r\n          55: \"Lafayette\",\r\n          57: \"Lafourche\",\r\n          59: \"La Salle\",\r\n          61: \"Lincoln\",\r\n          63: \"Livingston\",\r\n          65: \"Madison\",\r\n          67: \"Morehouse\",\r\n          69: \"Natchitoches\",\r\n          71: \"Orleans\",\r\n          73: \"Ouachita\",\r\n          75: \"Plaquemines\",\r\n          77: \"Pointe Coupee\",\r\n          79: \"Rapides\",\r\n          81: \"Red River\",\r\n          83: \"Richland\",\r\n          85: \"Sabine\",\r\n          87: \"St Bernard\",\r\n          89: \"St Charles\",\r\n          91: \"St Helena\",\r\n          93: \"St James\",\r\n          95: \"St John the Baptist\",\r\n          97: \"St Landry\",\r\n          99: \"St Martin\",\r\n          101: \"St Mary\",\r\n          103: \"St Tammany\",\r\n          105: \"Tangipahoa\",\r\n          107: \"Tensas\",\r\n          109: \"Terrebonne\",\r\n          111: \"Union\",\r\n          113: \"Vermilion\",\r\n          115: \"Vernon\",\r\n          117: \"Washington\",\r\n          119: \"Webster\",\r\n          121: \"West Baton Rouge\",\r\n          123: \"West Carroll\",\r\n          125: \"West Feliciana\",\r\n          127: \"Winn\"\r\n      },\r\n      hawaii:\r\n      {\r\n          1: \"Hawaii\",\r\n          3: \"Honolulu\",\r\n          7: \"Kauai\",\r\n          9: \"Maui\"\r\n      },\r\n      southcarolina:\r\n      {\r\n          1: \"Abbeville\",\r\n          3: \"Aiken\",\r\n          5: \"Allendale\",\r\n          7: \"Anderson\",\r\n          9: \"Bamberg\",\r\n          11: \"Barnwell\",\r\n          13: \"Beaufort\",\r\n          15: \"Berkeley\",\r\n          17: \"Calhoun\",\r\n          19: \"Charleston\",\r\n          21: \"Cherokee\",\r\n          23: \"Chester\",\r\n          25: \"Chesterfield\",\r\n          27: \"Clarendon\",\r\n          29: \"Colleton\",\r\n          31: \"Darlington\",\r\n          33: \"Dillon\",\r\n          35: \"Dorchester\",\r\n          37: \"Edgefield\",\r\n          39: \"Fairfield\",\r\n          41: \"Florence\",\r\n          43: \"Georgetown\",\r\n          45: \"Greenville\",\r\n          47: \"Greenwood\",\r\n          49: \"Hampton\",\r\n          51: \"Horry\",\r\n          53: \"Jasper\",\r\n          55: \"Kershaw\",\r\n          57: \"Lancaster\",\r\n          59: \"Laurens\",\r\n          61: \"Lee\",\r\n          63: \"Lexington\",\r\n          65: \"McCormick\",\r\n          67: \"Marion\",\r\n          69: \"Marlboro\",\r\n          71: \"Newberry\",\r\n          73: \"Oconee\",\r\n          75: \"Orangeburg\",\r\n          77: \"Pickens\",\r\n          79: \"Richland\",\r\n          81: \"Saluda\",\r\n          83: \"Spartanburg\",\r\n          85: \"Sumter\",\r\n          87: \"Union\",\r\n          89: \"Williamsburg\",\r\n          91: \"York\"\r\n      },\r\n      pennsylvania:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Allegheny\",\r\n          5: \"Armstrong\",\r\n          7: \"Beaver\",\r\n          9: \"Bedford\",\r\n          11: \"Berks\",\r\n          13: \"Blair\",\r\n          15: \"Bradford\",\r\n          17: \"Bucks\",\r\n          19: \"Butler\",\r\n          21: \"Cambria\",\r\n          23: \"Cameron\",\r\n          25: \"Carbon\",\r\n          27: \"Centre\",\r\n          29: \"Chester\",\r\n          31: \"Clarion\",\r\n          33: \"Clearfield\",\r\n          35: \"Clinton\",\r\n          37: \"Columbia\",\r\n          39: \"Crawford\",\r\n          41: \"Cumberland\",\r\n          43: \"Dauphin\",\r\n          45: \"Delaware\",\r\n          47: \"Elk\",\r\n          49: \"Erie\",\r\n          51: \"Fayette\",\r\n          53: \"Forest\",\r\n          55: \"Franklin\",\r\n          57: \"Fulton\",\r\n          59: \"Greene\",\r\n          61: \"Huntingdon\",\r\n          63: \"Indiana\",\r\n          65: \"Jefferson\",\r\n          67: \"Juniata\",\r\n          69: \"Lackawanna\",\r\n          71: \"Lancaster\",\r\n          73: \"Lawrence\",\r\n          75: \"Lebanon\",\r\n          77: \"Lehigh\",\r\n          79: \"Luzerne\",\r\n          81: \"Lycoming\",\r\n          83: \"McKean\",\r\n          85: \"Mercer\",\r\n          87: \"Mifflin\",\r\n          89: \"Monroe\",\r\n          91: \"Montgomery\",\r\n          93: \"Montour\",\r\n          95: \"Northampton\",\r\n          97: \"Northumberland\",\r\n          99: \"Perry\",\r\n          101: \"Philadelphia\",\r\n          103: \"Pike\",\r\n          105: \"Potter\",\r\n          107: \"Schuylkill\",\r\n          109: \"Snyder\",\r\n          111: \"Somerset\",\r\n          113: \"Sullivan\",\r\n          115: \"Susquehanna\",\r\n          117: \"Tioga\",\r\n          119: \"Union\",\r\n          121: \"Venango\",\r\n          123: \"Warren\",\r\n          125: \"Washington\",\r\n          127: \"Wayne\",\r\n          129: \"Westmoreland\",\r\n          131: \"Wyoming\",\r\n          133: \"York\"\r\n      },\r\n      washington:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Asotin\",\r\n          5: \"Benton\",\r\n          7: \"Chelan\",\r\n          9: \"Clallam\",\r\n          11: \"Clark\",\r\n          13: \"Columbia\",\r\n          15: \"Cowlitz\",\r\n          17: \"Douglas\",\r\n          19: \"Ferry\",\r\n          21: \"Franklin\",\r\n          23: \"Garfield\",\r\n          25: \"Grant\",\r\n          27: \"Grays Harbor\",\r\n          29: \"Island\",\r\n          31: \"Jefferson\",\r\n          33: \"King\",\r\n          35: \"Kitsap\",\r\n          37: \"Kittitas\",\r\n          39: \"Klickitat\",\r\n          41: \"Lewis\",\r\n          43: \"Lincoln\",\r\n          45: \"Mason\",\r\n          47: \"Okanogan\",\r\n          49: \"Pacific\",\r\n          51: \"Pend Oreille\",\r\n          53: \"Pierce\",\r\n          55: \"San Juan\",\r\n          57: \"Skagit\",\r\n          59: \"Skamania\",\r\n          61: \"Snohomish\",\r\n          63: \"Spokane\",\r\n          65: \"Stevens\",\r\n          67: \"Thurston\",\r\n          69: \"Wahkiakum\",\r\n          71: \"Walla Walla\",\r\n          73: \"Whatcom\",\r\n          75: \"Whitman\",\r\n          77: \"Yakima\"\r\n      },\r\n      texas:\r\n      {\r\n          1: \"Anderson\",\r\n          3: \"Andrews\",\r\n          5: \"Angelina\",\r\n          7: \"Aransas\",\r\n          9: \"Archer\",\r\n          11: \"Armstrong\",\r\n          13: \"Atascosa\",\r\n          15: \"Austin\",\r\n          17: \"Bailey\",\r\n          19: \"Bandera\",\r\n          21: \"Bastrop\",\r\n          23: \"Baylor\",\r\n          25: \"Bee\",\r\n          27: \"Bell\",\r\n          29: \"Bexar\",\r\n          31: \"Blanco\",\r\n          33: \"Borden\",\r\n          35: \"Bosque\",\r\n          37: \"Bowie\",\r\n          39: \"Brazoria\",\r\n          41: \"Brazos\",\r\n          43: \"Brewster\",\r\n          45: \"Briscoe\",\r\n          47: \"Brooks\",\r\n          49: \"Brown\",\r\n          51: \"Burleson\",\r\n          53: \"Burnet\",\r\n          55: \"Caldwell\",\r\n          57: \"Calhoun\",\r\n          59: \"Callahan\",\r\n          61: \"Cameron\",\r\n          63: \"Camp\",\r\n          65: \"Carson\",\r\n          67: \"Cass\",\r\n          69: \"Castro\",\r\n          71: \"Chambers\",\r\n          73: \"Cherokee\",\r\n          75: \"Childress\",\r\n          77: \"Clay\",\r\n          79: \"Cochran\",\r\n          81: \"Coke\",\r\n          83: \"Coleman\",\r\n          85: \"Collin\",\r\n          87: \"Collingsworth\",\r\n          89: \"Colorado\",\r\n          91: \"Comal\",\r\n          93: \"Comanche\",\r\n          95: \"Concho\",\r\n          97: \"Cooke\",\r\n          99: \"Coryell\",\r\n          101: \"Cottle\",\r\n          103: \"Crane\",\r\n          105: \"Crockett\",\r\n          107: \"Crosby\",\r\n          109: \"Culberson\",\r\n          111: \"Dallam\",\r\n          113: \"Dallas\",\r\n          115: \"Dawson\",\r\n          117: \"Deaf Smith\",\r\n          119: \"Delta\",\r\n          121: \"Denton\",\r\n          123: \"De Witt\",\r\n          125: \"Dickens\",\r\n          127: \"Dimmit\",\r\n          129: \"Donley\",\r\n          131: \"Duval\",\r\n          133: \"Eastland\",\r\n          135: \"Ector\",\r\n          137: \"Edwards\",\r\n          139: \"Ellis\",\r\n          141: \"El Paso\",\r\n          143: \"Erath\",\r\n          145: \"Falls\",\r\n          147: \"Fannin\",\r\n          149: \"Fayette\",\r\n          151: \"Fisher\",\r\n          153: \"Floyd\",\r\n          155: \"Foard\",\r\n          157: \"Fort Bend\",\r\n          159: \"Franklin\",\r\n          161: \"Freestone\",\r\n          163: \"Frio\",\r\n          165: \"Gaines\",\r\n          167: \"Galveston\",\r\n          169: \"Garza\",\r\n          171: \"Gillespie\",\r\n          173: \"Glasscock\",\r\n          175: \"Goliad\",\r\n          177: \"Gonzales\",\r\n          179: \"Gray\",\r\n          181: \"Grayson\",\r\n          183: \"Gregg\",\r\n          185: \"Grimes\",\r\n          187: \"Guadalupe\",\r\n          189: \"Hale\",\r\n          191: \"Hall\",\r\n          193: \"Hamilton\",\r\n          195: \"Hansford\",\r\n          197: \"Hardeman\",\r\n          199: \"Hardin\",\r\n          201: \"Harris\",\r\n          203: \"Harrison\",\r\n          205: \"Hartley\",\r\n          207: \"Haskell\",\r\n          209: \"Hays\",\r\n          211: \"Hemphill\",\r\n          213: \"Henderson\",\r\n          215: \"Hidalgo\",\r\n          217: \"Hill\",\r\n          219: \"Hockley\",\r\n          221: \"Hood\",\r\n          223: \"Hopkins\",\r\n          225: \"Houston\",\r\n          227: \"Howard\",\r\n          229: \"Hudspeth\",\r\n          231: \"Hunt\",\r\n          233: \"Hutchinson\",\r\n          235: \"Irion\",\r\n          237: \"Jack\",\r\n          239: \"Jackson\",\r\n          241: \"Jasper\",\r\n          243: \"Jeff Davis\",\r\n          245: \"Jefferson\",\r\n          247: \"Jim Hogg\",\r\n          249: \"Jim Wells\",\r\n          251: \"Johnson\",\r\n          253: \"Jones\",\r\n          255: \"Karnes\",\r\n          257: \"Kaufman\",\r\n          259: \"Kendall\",\r\n          261: \"Kenedy\",\r\n          263: \"Kent\",\r\n          265: \"Kerr\",\r\n          267: \"Kimble\",\r\n          269: \"King\",\r\n          271: \"Kinney\",\r\n          273: \"Kleberg\",\r\n          275: \"Knox\",\r\n          277: \"Lamar\",\r\n          279: \"Lamb\",\r\n          281: \"Lampasas\",\r\n          283: \"La Salle\",\r\n          285: \"Lavaca\",\r\n          287: \"Lee\",\r\n          289: \"Leon\",\r\n          291: \"Liberty\",\r\n          293: \"Limestone\",\r\n          295: \"Lipscomb\",\r\n          297: \"Live Oak\",\r\n          299: \"Llano\",\r\n          301: \"Loving\",\r\n          303: \"Lubbock\",\r\n          305: \"Lynn\",\r\n          307: \"McCulloch\",\r\n          309: \"McLennan\",\r\n          311: \"McMullen\",\r\n          313: \"Madison\",\r\n          315: \"Marion\",\r\n          317: \"Martin\",\r\n          319: \"Mason\",\r\n          321: \"Matagorda\",\r\n          323: \"Maverick\",\r\n          325: \"Medina\",\r\n          327: \"Menard\",\r\n          329: \"Midland\",\r\n          331: \"Milam\",\r\n          333: \"Mills\",\r\n          335: \"Mitchell\",\r\n          337: \"Montague\",\r\n          339: \"Montgomery\",\r\n          341: \"Moore\",\r\n          343: \"Morris\",\r\n          345: \"Motley\",\r\n          347: \"Nacogdoches\",\r\n          349: \"Navarro\",\r\n          351: \"Newton\",\r\n          353: \"Nolan\",\r\n          355: \"Nueces\",\r\n          357: \"Ochiltree\",\r\n          359: \"Oldham\",\r\n          361: \"Orange\",\r\n          363: \"Palo Pinto\",\r\n          365: \"Panola\",\r\n          367: \"Parker\",\r\n          369: \"Parmer\",\r\n          371: \"Pecos\",\r\n          373: \"Polk\",\r\n          375: \"Potter\",\r\n          377: \"Presidio\",\r\n          379: \"Rains\",\r\n          381: \"Randall\",\r\n          383: \"Reagan\",\r\n          385: \"Real\",\r\n          387: \"Red River\",\r\n          389: \"Reeves\",\r\n          391: \"Refugio\",\r\n          393: \"Roberts\",\r\n          395: \"Robertson\",\r\n          397: \"Rockwall\",\r\n          399: \"Runnels\",\r\n          401: \"Rusk\",\r\n          403: \"Sabine\",\r\n          405: \"San Augustine\",\r\n          407: \"San Jacinto\",\r\n          409: \"San Patricio\",\r\n          411: \"San Saba\",\r\n          413: \"Schleicher\",\r\n          415: \"Scurry\",\r\n          417: \"Shackelford\",\r\n          419: \"Shelby\",\r\n          421: \"Sherman\",\r\n          423: \"Smith\",\r\n          425: \"Somervell\",\r\n          427: \"Starr\",\r\n          429: \"Stephens\",\r\n          431: \"Sterling\",\r\n          433: \"Stonewall\",\r\n          435: \"Sutton\",\r\n          437: \"Swisher\",\r\n          439: \"Tarrant\",\r\n          441: \"Taylor\",\r\n          443: \"Terrell\",\r\n          445: \"Terry\",\r\n          447: \"Throckmorton\",\r\n          449: \"Titus\",\r\n          451: \"Tom Green\",\r\n          453: \"Travis\",\r\n          455: \"Trinity\",\r\n          457: \"Tyler\",\r\n          459: \"Upshur\",\r\n          461: \"Upton\",\r\n          463: \"Uvalde\",\r\n          465: \"Val Verde\",\r\n          467: \"Van Zandt\",\r\n          469: \"Victoria\",\r\n          471: \"Walker\",\r\n          473: \"Waller\",\r\n          475: \"Ward\",\r\n          477: \"Washington\",\r\n          479: \"Webb\",\r\n          481: \"Wharton\",\r\n          483: \"Wheeler\",\r\n          485: \"Wichita\",\r\n          487: \"Wilbarger\",\r\n          489: \"Willacy\",\r\n          491: \"Williamson\",\r\n          493: \"Wilson\",\r\n          495: \"Winkler\",\r\n          497: \"Wise\",\r\n          499: \"Wood\",\r\n          501: \"Yoakum\",\r\n          503: \"Young\",\r\n          505: \"Zapata\",\r\n          507: \"Zavala\"\r\n      },\r\n      arkansas:\r\n      {\r\n          1: \"Arkansas\",\r\n          3: \"Ashley\",\r\n          5: \"Baxter\",\r\n          7: \"Benton\",\r\n          9: \"Boone\",\r\n          11: \"Bradley\",\r\n          13: \"Calhoun\",\r\n          15: \"Carroll\",\r\n          17: \"Chicot\",\r\n          19: \"Clark\",\r\n          21: \"Clay\",\r\n          23: \"Cleburne\",\r\n          25: \"Cleveland\",\r\n          27: \"Columbia\",\r\n          29: \"Conway\",\r\n          31: \"Craighead\",\r\n          33: \"Crawford\",\r\n          35: \"Crittenden\",\r\n          37: \"Cross\",\r\n          39: \"Dallas\",\r\n          41: \"Desha\",\r\n          43: \"Drew\",\r\n          45: \"Faulkner\",\r\n          47: \"Franklin\",\r\n          49: \"Fulton\",\r\n          51: \"Garland\",\r\n          53: \"Grant\",\r\n          55: \"Greene\",\r\n          57: \"Hempstead\",\r\n          59: \"Hot Spring\",\r\n          61: \"Howard\",\r\n          63: \"Independence\",\r\n          65: \"Izard\",\r\n          67: \"Jackson\",\r\n          69: \"Jefferson\",\r\n          71: \"Johnson\",\r\n          73: \"Lafayette\",\r\n          75: \"Lawrence\",\r\n          77: \"Lee\",\r\n          79: \"Lincoln\",\r\n          81: \"Little River\",\r\n          83: \"Logan\",\r\n          85: \"Lonoke\",\r\n          87: \"Madison\",\r\n          89: \"Marion\",\r\n          91: \"Miller\",\r\n          93: \"Mississippi\",\r\n          95: \"Monroe\",\r\n          97: \"Montgomery\",\r\n          99: \"Nevada\",\r\n          101: \"Newton\",\r\n          103: \"Ouachita\",\r\n          105: \"Perry\",\r\n          107: \"Phillips\",\r\n          109: \"Pike\",\r\n          111: \"Poinsett\",\r\n          113: \"Polk\",\r\n          115: \"Pope\",\r\n          117: \"Prairie\",\r\n          119: \"Pulaski\",\r\n          121: \"Randolph\",\r\n          123: \"St Francis\",\r\n          125: \"Saline\",\r\n          127: \"Scott\",\r\n          129: \"Searcy\",\r\n          131: \"Sebastian\",\r\n          133: \"Sevier\",\r\n          135: \"Sharp\",\r\n          137: \"Stone\",\r\n          139: \"Union\",\r\n          141: \"Van Buren\",\r\n          143: \"Washington\",\r\n          145: \"White\",\r\n          147: \"Woodruff\",\r\n          149: \"Yell\"\r\n      },\r\n      michigan:\r\n      {\r\n          1: \"Alcona\",\r\n          3: \"Alger\",\r\n          5: \"Allegan\",\r\n          7: \"Alpena\",\r\n          9: \"Antrim\",\r\n          11: \"Arenac\",\r\n          13: \"Baraga\",\r\n          15: \"Barry\",\r\n          17: \"Bay\",\r\n          19: \"Benzie\",\r\n          21: \"Berrien\",\r\n          23: \"Branch\",\r\n          25: \"Calhoun\",\r\n          27: \"Cass\",\r\n          29: \"Charlevoix\",\r\n          31: \"Cheboygan\",\r\n          33: \"Chippewa\",\r\n          35: \"Clare\",\r\n          37: \"Clinton\",\r\n          39: \"Crawford\",\r\n          41: \"Delta\",\r\n          43: \"Dickinson\",\r\n          45: \"Eaton\",\r\n          47: \"Emmet\",\r\n          49: \"Genesee\",\r\n          51: \"Gladwin\",\r\n          53: \"Gogebic\",\r\n          55: \"Grand Traverse\",\r\n          57: \"Gratiot\",\r\n          59: \"Hillsdale\",\r\n          61: \"Houghton\",\r\n          63: \"Huron\",\r\n          65: \"Ingham\",\r\n          67: \"Ionia\",\r\n          69: \"Iosco\",\r\n          71: \"Iron\",\r\n          73: \"Isabella\",\r\n          75: \"Jackson\",\r\n          77: \"Kalamazoo\",\r\n          79: \"Kalkaska\",\r\n          81: \"Kent\",\r\n          83: \"Keweenaw\",\r\n          85: \"Lake\",\r\n          87: \"Lapeer\",\r\n          89: \"Leelanau\",\r\n          91: \"Lenawee\",\r\n          93: \"Livingston\",\r\n          95: \"Luce\",\r\n          97: \"Mackinac\",\r\n          99: \"Macomb\",\r\n          101: \"Manistee\",\r\n          103: \"Marquette\",\r\n          105: \"Mason\",\r\n          107: \"Mecosta\",\r\n          109: \"Menominee\",\r\n          111: \"Midland\",\r\n          113: \"Missaukee\",\r\n          115: \"Monroe\",\r\n          117: \"Montcalm\",\r\n          119: \"Montmorency\",\r\n          121: \"Muskegon\",\r\n          123: \"Newaygo\",\r\n          125: \"Oakland\",\r\n          127: \"Oceana\",\r\n          129: \"Ogemaw\",\r\n          131: \"Ontonagon\",\r\n          133: \"Osceola\",\r\n          135: \"Oscoda\",\r\n          137: \"Otsego\",\r\n          139: \"Ottawa\",\r\n          141: \"Presque Isle\",\r\n          143: \"Roscommon\",\r\n          145: \"Saginaw\",\r\n          147: \"St Clair\",\r\n          149: \"St Joseph\",\r\n          151: \"Sanilac\",\r\n          153: \"Schoolcraft\",\r\n          155: \"Shiawassee\",\r\n          157: \"Tuscola\",\r\n          159: \"Van Buren\",\r\n          161: \"Washtenaw\",\r\n          163: \"Wayne\",\r\n          165: \"Wexford\"\r\n      },\r\n      americansamoa:\r\n      {\r\n          10: \"Unknown\",\r\n          20: \"Olosega\",\r\n          50: \"Tutuila\"\r\n      },\r\n      northcarolina:\r\n      {\r\n          1: \"Alamance\",\r\n          3: \"Alexander\",\r\n          5: \"Alleghany\",\r\n          7: \"Anson\",\r\n          9: \"Ashe\",\r\n          11: \"Avery\",\r\n          13: \"Beaufort\",\r\n          15: \"Bertie\",\r\n          17: \"Bladen\",\r\n          19: \"Brunswick\",\r\n          21: \"Buncombe\",\r\n          23: \"Burke\",\r\n          25: \"Cabarrus\",\r\n          27: \"Caldwell\",\r\n          29: \"Camden\",\r\n          31: \"Carteret\",\r\n          33: \"Caswell\",\r\n          35: \"Catawba\",\r\n          37: \"Chatham\",\r\n          39: \"Cherokee\",\r\n          41: \"Chowan\",\r\n          43: \"Clay\",\r\n          45: \"Cleveland\",\r\n          47: \"Columbus\",\r\n          49: \"Craven\",\r\n          51: \"Cumberland\",\r\n          53: \"Currituck\",\r\n          55: \"Dare\",\r\n          57: \"Davidson\",\r\n          59: \"Davie\",\r\n          61: \"Duplin\",\r\n          63: \"Durham\",\r\n          65: \"Edgecombe\",\r\n          67: \"Forsyth\",\r\n          69: \"Franklin\",\r\n          71: \"Gaston\",\r\n          73: \"Gates\",\r\n          75: \"Graham\",\r\n          77: \"Granville\",\r\n          79: \"Greene\",\r\n          81: \"Guilford\",\r\n          83: \"Halifax\",\r\n          85: \"Harnett\",\r\n          87: \"Haywood\",\r\n          89: \"Henderson\",\r\n          91: \"Hertford\",\r\n          93: \"Hoke\",\r\n          95: \"Hyde\",\r\n          97: \"Iredell\",\r\n          99: \"Jackson\",\r\n          101: \"Johnston\",\r\n          103: \"Jones\",\r\n          105: \"Lee\",\r\n          107: \"Lenoir\",\r\n          109: \"Lincoln\",\r\n          111: \"McDowell\",\r\n          113: \"Macon\",\r\n          115: \"Madison\",\r\n          117: \"Martin\",\r\n          119: \"Mecklenburg\",\r\n          121: \"Mitchell\",\r\n          123: \"Montgomery\",\r\n          125: \"Moore\",\r\n          127: \"Nash\",\r\n          129: \"New Hanover\",\r\n          131: \"Northampton\",\r\n          133: \"Onslow\",\r\n          135: \"Orange\",\r\n          137: \"Pamlico\",\r\n          139: \"Pasquotank\",\r\n          141: \"Pender\",\r\n          143: \"Perquimans\",\r\n          145: \"Person\",\r\n          147: \"Pitt\",\r\n          149: \"Polk\",\r\n          151: \"Randolph\",\r\n          153: \"Richmond\",\r\n          155: \"Robeson\",\r\n          157: \"Rockingham\",\r\n          159: \"Rowan\",\r\n          161: \"Rutherford\",\r\n          163: \"Sampson\",\r\n          165: \"Scotland\",\r\n          167: \"Stanly\",\r\n          169: \"Stokes\",\r\n          171: \"Surry\",\r\n          173: \"Swain\",\r\n          175: \"Transylvania\",\r\n          177: \"Tyrrell\",\r\n          179: \"Union\",\r\n          181: \"Vance\",\r\n          183: \"Wake\",\r\n          185: \"Warren\",\r\n          187: \"Washington\",\r\n          189: \"Watauga\",\r\n          191: \"Wayne\",\r\n          193: \"Wilkes\",\r\n          195: \"Wilson\",\r\n          197: \"Yadkin\",\r\n          199: \"Yancey\"\r\n      },\r\n      kentucky:\r\n      {\r\n          1: \"Adair\",\r\n          3: \"Allen\",\r\n          5: \"Anderson\",\r\n          7: \"Ballard\",\r\n          9: \"Barren\",\r\n          11: \"Bath\",\r\n          13: \"Bell\",\r\n          15: \"Boone\",\r\n          17: \"Bourbon\",\r\n          19: \"Boyd\",\r\n          21: \"Boyle\",\r\n          23: \"Bracken\",\r\n          25: \"Breathitt\",\r\n          27: \"Breckinridge\",\r\n          29: \"Bullitt\",\r\n          31: \"Butler\",\r\n          33: \"Caldwell\",\r\n          35: \"Calloway\",\r\n          37: \"Campbell\",\r\n          39: \"Carlisle\",\r\n          41: \"Carroll\",\r\n          43: \"Carter\",\r\n          45: \"Casey\",\r\n          47: \"Christian\",\r\n          49: \"Clark\",\r\n          51: \"Clay\",\r\n          53: \"Clinton\",\r\n          55: \"Crittenden\",\r\n          57: \"Cumberland\",\r\n          59: \"Daviess\",\r\n          61: \"Edmonson\",\r\n          63: \"Elliott\",\r\n          65: \"Estill\",\r\n          67: \"Fayette\",\r\n          69: \"Fleming\",\r\n          71: \"Floyd\",\r\n          73: \"Franklin\",\r\n          75: \"Fulton\",\r\n          77: \"Gallatin\",\r\n          79: \"Garrard\",\r\n          81: \"Grant\",\r\n          83: \"Graves\",\r\n          85: \"Grayson\",\r\n          87: \"Green\",\r\n          89: \"Greenup\",\r\n          91: \"Hancock\",\r\n          93: \"Hardin\",\r\n          95: \"Harlan\",\r\n          97: \"Harrison\",\r\n          99: \"Hart\",\r\n          101: \"Henderson\",\r\n          103: \"Henry\",\r\n          105: \"Hickman\",\r\n          107: \"Hopkins\",\r\n          109: \"Jackson\",\r\n          111: \"Jefferson\",\r\n          113: \"Jessamine\",\r\n          115: \"Johnson\",\r\n          117: \"Kenton\",\r\n          119: \"Knott\",\r\n          121: \"Knox\",\r\n          123: \"Larue\",\r\n          125: \"Laurel\",\r\n          127: \"Lawrence\",\r\n          129: \"Lee\",\r\n          131: \"Leslie\",\r\n          133: \"Letcher\",\r\n          135: \"Lewis\",\r\n          137: \"Lincoln\",\r\n          139: \"Livingston\",\r\n          141: \"Logan\",\r\n          143: \"Lyon\",\r\n          145: \"McCracken\",\r\n          147: \"McCreary\",\r\n          149: \"McLean\",\r\n          151: \"Madison\",\r\n          153: \"Magoffin\",\r\n          155: \"Marion\",\r\n          157: \"Marshall\",\r\n          159: \"Martin\",\r\n          161: \"Mason\",\r\n          163: \"Meade\",\r\n          165: \"Menifee\",\r\n          167: \"Mercer\",\r\n          169: \"Metcalfe\",\r\n          171: \"Monroe\",\r\n          173: \"Montgomery\",\r\n          175: \"Morgan\",\r\n          177: \"Muhlenberg\",\r\n          179: \"Nelson\",\r\n          181: \"Nicholas\",\r\n          183: \"Ohio\",\r\n          185: \"Oldham\",\r\n          187: \"Owen\",\r\n          189: \"Owsley\",\r\n          191: \"Pendleton\",\r\n          193: \"Perry\",\r\n          195: \"Pike\",\r\n          197: \"Powell\",\r\n          199: \"Pulaski\",\r\n          201: \"Robertson\",\r\n          203: \"Rockcastle\",\r\n          205: \"Rowan\",\r\n          207: \"Russell\",\r\n          209: \"Scott\",\r\n          211: \"Shelby\",\r\n          213: \"Simpson\",\r\n          215: \"Spencer\",\r\n          217: \"Taylor\",\r\n          219: \"Todd\",\r\n          221: \"Trigg\",\r\n          223: \"Trimble\",\r\n          225: \"Union\",\r\n          227: \"Warren\",\r\n          229: \"Washington\",\r\n          231: \"Wayne\",\r\n          233: \"Webster\",\r\n          235: \"Whitley\",\r\n          237: \"Wolfe\",\r\n          239: \"Woodford\"\r\n      },\r\n      northernmarianaislands:\r\n      {\r\n          10: \"Cocos Island\",\r\n          100: \"Rota\",\r\n          110: \"Saipan\",\r\n          120: \"Tinian\"\r\n      },\r\n      tennessee:\r\n      {\r\n          1: \"Anderson\",\r\n          3: \"Bedford\",\r\n          5: \"Benton\",\r\n          7: \"Bledsoe\",\r\n          9: \"Blount\",\r\n          11: \"Bradley\",\r\n          13: \"Campbell\",\r\n          15: \"Cannon\",\r\n          17: \"Carroll\",\r\n          19: \"Carter\",\r\n          21: \"Cheatham\",\r\n          23: \"Chester\",\r\n          25: \"Claiborne\",\r\n          27: \"Clay\",\r\n          29: \"Cocke\",\r\n          31: \"Coffee\",\r\n          33: \"Crockett\",\r\n          35: \"Cumberland\",\r\n          37: \"Davidson\",\r\n          39: \"Decatur\",\r\n          41: \"De Kalb\",\r\n          43: \"Dickson\",\r\n          45: \"Dyer\",\r\n          47: \"Fayette\",\r\n          49: \"Fentress\",\r\n          51: \"Franklin\",\r\n          53: \"Gibson\",\r\n          55: \"Giles\",\r\n          57: \"Grainger\",\r\n          59: \"Greene\",\r\n          61: \"Grundy\",\r\n          63: \"Hamblen\",\r\n          65: \"Hamilton\",\r\n          67: \"Hancock\",\r\n          69: \"Hardeman\",\r\n          71: \"Hardin\",\r\n          73: \"Hawkins\",\r\n          75: \"Haywood\",\r\n          77: \"Henderson\",\r\n          79: \"Henry\",\r\n          81: \"Hickman\",\r\n          83: \"Houston\",\r\n          85: \"Humphreys\",\r\n          87: \"Jackson\",\r\n          89: \"Jefferson\",\r\n          91: \"Johnson\",\r\n          93: \"Knox\",\r\n          95: \"Lake\",\r\n          97: \"Lauderdale\",\r\n          99: \"Lawrence\",\r\n          101: \"Lewis\",\r\n          103: \"Lincoln\",\r\n          105: \"Loudon\",\r\n          107: \"McMinn\",\r\n          109: \"McNairy\",\r\n          111: \"Macon\",\r\n          113: \"Madison\",\r\n          115: \"Marion\",\r\n          117: \"Marshall\",\r\n          119: \"Maury\",\r\n          121: \"Meigs\",\r\n          123: \"Monroe\",\r\n          125: \"Montgomery\",\r\n          127: \"Moore\",\r\n          129: \"Morgan\",\r\n          131: \"Obion\",\r\n          133: \"Overton\",\r\n          135: \"Perry\",\r\n          137: \"Pickett\",\r\n          139: \"Polk\",\r\n          141: \"Putnam\",\r\n          143: \"Rhea\",\r\n          145: \"Roane\",\r\n          147: \"Robertson\",\r\n          149: \"Rutherford\",\r\n          151: \"Scott\",\r\n          153: \"Sequatchie\",\r\n          155: \"Sevier\",\r\n          157: \"Shelby\",\r\n          159: \"Smith\",\r\n          161: \"Stewart\",\r\n          163: \"Sullivan\",\r\n          165: \"Sumner\",\r\n          167: \"Tipton\",\r\n          169: \"Trousdale\",\r\n          171: \"Unicoi\",\r\n          173: \"Union\",\r\n          175: \"Van Buren\",\r\n          177: \"Warren\",\r\n          179: \"Washington\",\r\n          181: \"Wayne\",\r\n          183: \"Weakley\",\r\n          185: \"White\",\r\n          187: \"Williamson\",\r\n          189: \"Wilson\"\r\n      },\r\n      newjersey:\r\n      {\r\n          1: \"Atlantic\",\r\n          3: \"Bergen\",\r\n          5: \"Burlington\",\r\n          7: \"Camden\",\r\n          9: \"Cape May\",\r\n          11: \"Cumberland\",\r\n          13: \"Essex\",\r\n          15: \"Gloucester\",\r\n          17: \"Hudson\",\r\n          19: \"Hunterdon\",\r\n          21: \"Mercer\",\r\n          23: \"Middlesex\",\r\n          25: \"Monmouth\",\r\n          27: \"Morris\",\r\n          29: \"Ocean\",\r\n          31: \"Passaic\",\r\n          33: \"Salem\",\r\n          35: \"Somerset\",\r\n          37: \"Sussex\",\r\n          39: \"Union\",\r\n          41: \"Warren\"\r\n      },\r\n      puertorico:\r\n      {\r\n          1: \"Adjuntas\",\r\n          3: \"Aguada\",\r\n          5: \"Aguadilla\",\r\n          7: \"Aguas Buenas\",\r\n          9: \"Aibonito\",\r\n          11: \"Anasco\",\r\n          13: \"Arecibo\",\r\n          15: \"Arroyo\",\r\n          17: \"Barceloneta\",\r\n          19: \"Barranquitas\",\r\n          21: \"Bayamon\",\r\n          23: \"Cabo Rojo\",\r\n          25: \"Caguas\",\r\n          27: \"Camuy\",\r\n          29: \"Canovanas\",\r\n          31: \"Carolina\",\r\n          33: \"Catano\",\r\n          35: \"Cayey\",\r\n          37: \"Ceiba\",\r\n          41: \"Cidra\",\r\n          43: \"Coamo\",\r\n          45: \"Comerio\",\r\n          47: \"Corozal\",\r\n          49: \"Culebra\",\r\n          51: \"Dorado\",\r\n          53: \"Fajardo\",\r\n          54: \"Florida\",\r\n          55: \"Guanica\",\r\n          57: \"Guayama\",\r\n          59: \"Guayanilla\",\r\n          61: \"Guaynabo\",\r\n          63: \"Gurabo\",\r\n          65: \"Hatillo\",\r\n          67: \"Hormigueros\",\r\n          71: \"Isabela\",\r\n          73: \"Jayuya\",\r\n          75: \"Juana Diaz\",\r\n          77: \"Juncos\",\r\n          79: \"Lajas\",\r\n          81: \"Lares\",\r\n          83: \"Las Marias\",\r\n          85: \"Las Piedras\",\r\n          87: \"Loiza\",\r\n          89: \"Luquillo\",\r\n          91: \"Manati\",\r\n          93: \"Maricao\",\r\n          95: \"Maunabo\",\r\n          97: \"Mayaguez\",\r\n          99: \"Moca\",\r\n          101: \"Morovis\",\r\n          103: \"Nabuabo\",\r\n          105: \"Naranjito\",\r\n          107: \"Orocovis\",\r\n          109: \"Patillas\",\r\n          111: \"Penuelas\",\r\n          113: \"Ponce\",\r\n          115: \"Quebradillas\",\r\n          117: \"Rincon\",\r\n          119: \"Rio Grande\",\r\n          121: \"Sabana Grande\",\r\n          123: \"Salinas\",\r\n          125: \"San German\",\r\n          127: \"San Juan\",\r\n          129: \"San Lorenzo\",\r\n          131: \"San Sabastian\",\r\n          133: \"Santa Isabel\",\r\n          135: \"Toa Alta\",\r\n          137: \"Toa Baja\",\r\n          139: \"Trujillo Alto\",\r\n          141: \"Utuado\",\r\n          143: \"Vega Alta\",\r\n          145: \"Vega Baja\",\r\n          147: \"Vieques\",\r\n          149: \"Villalba\",\r\n          151: \"Yabucoa\",\r\n          153: \"Yauco\"\r\n      },\r\n      montana:\r\n      {\r\n          1: \"Beaverhead\",\r\n          3: \"Big Horn\",\r\n          5: \"Blaine\",\r\n          7: \"Broadwater\",\r\n          9: \"Carbon\",\r\n          11: \"Carter\",\r\n          13: \"Cascade\",\r\n          15: \"Chouteau\",\r\n          17: \"Custer\",\r\n          19: \"Daniels\",\r\n          21: \"Dawson\",\r\n          23: \"Deer Lodge\",\r\n          25: \"Fallon\",\r\n          27: \"Fergus\",\r\n          29: \"Flathead\",\r\n          31: \"Gallatin\",\r\n          33: \"Garfield\",\r\n          35: \"Glacier\",\r\n          37: \"Golden Valley\",\r\n          39: \"Granite\",\r\n          41: \"Hill\",\r\n          43: \"Jefferson\",\r\n          45: \"Judith Basin\",\r\n          47: \"Lake\",\r\n          49: \"Lewis and Clark\",\r\n          51: \"Liberty\",\r\n          53: \"Lincoln\",\r\n          55: \"McCone\",\r\n          57: \"Madison\",\r\n          59: \"Meagher\",\r\n          61: \"Mineral\",\r\n          63: \"Missoula\",\r\n          65: \"Musselshell\",\r\n          67: \"Park\",\r\n          69: \"Petroleum\",\r\n          71: \"Phillips\",\r\n          73: \"Pondera\",\r\n          75: \"Powder River\",\r\n          77: \"Powell\",\r\n          79: \"Prairie\",\r\n          81: \"Ravalli\",\r\n          83: \"Richland\",\r\n          85: \"Roosevelt\",\r\n          87: \"Rosebud\",\r\n          89: \"Sanders\",\r\n          91: \"Sheridan\",\r\n          93: \"Silver Bow\",\r\n          95: \"Stillwater\",\r\n          97: \"Sweet Grass\",\r\n          99: \"Teton\",\r\n          101: \"Toole\",\r\n          103: \"Treasure\",\r\n          105: \"Valley\",\r\n          107: \"Wheatland\",\r\n          109: \"Wibaux\",\r\n          111: \"Yellowstone\",\r\n          113: \"Yellowstone Nat Park\"\r\n      },\r\n      utah:\r\n      {\r\n          1: \"Beaver\",\r\n          3: \"Box Elder\",\r\n          5: \"Cache\",\r\n          7: \"Carbon\",\r\n          9: \"Daggett\",\r\n          11: \"Davis\",\r\n          13: \"Duchesne\",\r\n          15: \"Emery\",\r\n          17: \"Garfield\",\r\n          19: \"Grand\",\r\n          21: \"Iron\",\r\n          23: \"Juab\",\r\n          25: \"Kane\",\r\n          27: \"Millard\",\r\n          29: \"Morgan\",\r\n          31: \"Piute\",\r\n          33: \"Rich\",\r\n          35: \"Salt Lake\",\r\n          37: \"San Juan\",\r\n          39: \"Sanpete\",\r\n          41: \"Sevier\",\r\n          43: \"Summit\",\r\n          45: \"Tooele\",\r\n          47: \"Uintah\",\r\n          49: \"Utah\",\r\n          51: \"Wasatch\",\r\n          53: \"Washington\",\r\n          55: \"Wayne\",\r\n          57: \"Weber\"\r\n      },\r\n      florida:\r\n      {\r\n          1: \"Alachua\",\r\n          3: \"Baker\",\r\n          5: \"Bay\",\r\n          7: \"Bradford\",\r\n          9: \"Brevard\",\r\n          11: \"Broward\",\r\n          13: \"Calhoun\",\r\n          15: \"Charlotte\",\r\n          17: \"Citrus\",\r\n          19: \"Clay\",\r\n          21: \"Collier\",\r\n          23: \"Columbia\",\r\n          27: \"De Soto\",\r\n          29: \"Dixie\",\r\n          31: \"Duval\",\r\n          33: \"Escambia\",\r\n          35: \"Flagler\",\r\n          37: \"Franklin\",\r\n          39: \"Gadsden\",\r\n          41: \"Gilchrist\",\r\n          43: \"Glades\",\r\n          45: \"Gulf\",\r\n          47: \"Hamilton\",\r\n          49: \"Hardee\",\r\n          51: \"Hendry\",\r\n          53: \"Hernando\",\r\n          55: \"Highlands\",\r\n          57: \"Hillsborough\",\r\n          59: \"Holmes\",\r\n          61: \"Indian River\",\r\n          63: \"Jackson\",\r\n          65: \"Jefferson\",\r\n          67: \"Lafayette\",\r\n          69: \"Lake\",\r\n          71: \"Lee\",\r\n          73: \"Leon\",\r\n          75: \"Levy\",\r\n          77: \"Liberty\",\r\n          79: \"Madison\",\r\n          81: \"Manatee\",\r\n          83: \"Marion\",\r\n          85: \"Martin\",\r\n          86: \"Miami-Dade\",\r\n          87: \"Monroe\",\r\n          89: \"Nassau\",\r\n          91: \"Okaloosa\",\r\n          93: \"Okeechobee\",\r\n          95: \"Orange\",\r\n          97: \"Osceola\",\r\n          99: \"Palm Beach\",\r\n          101: \"Pasco\",\r\n          103: \"Pinellas\",\r\n          105: \"Polk\",\r\n          107: \"Putnam\",\r\n          109: \"St Johns\",\r\n          111: \"St Lucie\",\r\n          113: \"Santa Rosa\",\r\n          115: \"Sarasota\",\r\n          117: \"Seminole\",\r\n          119: \"Sumter\",\r\n          121: \"Suwannee\",\r\n          123: \"Taylor\",\r\n          125: \"Union\",\r\n          127: \"Volusia\",\r\n          129: \"Wakulla\",\r\n          131: \"Walton\",\r\n          133: \"Washington\"\r\n      },\r\n      colorado:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Alamosa\",\r\n          5: \"Arapahoe\",\r\n          7: \"Archuleta\",\r\n          9: \"Baca\",\r\n          11: \"Bent\",\r\n          13: \"Boulder\",\r\n          15: \"Chaffee\",\r\n          17: \"Cheyenne\",\r\n          19: \"Clear Creek\",\r\n          21: \"Conejos\",\r\n          23: \"Costilla\",\r\n          25: \"Crowley\",\r\n          27: \"Custer\",\r\n          29: \"Delta\",\r\n          31: \"Denver\",\r\n          33: \"Dolores\",\r\n          35: \"Douglas\",\r\n          37: \"Eagle\",\r\n          39: \"Elbert\",\r\n          41: \"El Paso\",\r\n          43: \"Fremont\",\r\n          45: \"Garfield\",\r\n          47: \"Gilpin\",\r\n          49: \"Grand\",\r\n          51: \"Gunnison\",\r\n          53: \"Hinsdale\",\r\n          55: \"Huerfano\",\r\n          57: \"Jackson\",\r\n          59: \"Jefferson\",\r\n          61: \"Kiowa\",\r\n          63: \"Kit Carson\",\r\n          65: \"Lake\",\r\n          67: \"La Plata\",\r\n          69: \"Larimer\",\r\n          71: \"Las Animas\",\r\n          73: \"Lincoln\",\r\n          75: \"Logan\",\r\n          77: \"Mesa\",\r\n          79: \"Mineral\",\r\n          81: \"Moffat\",\r\n          83: \"Montezuma\",\r\n          85: \"Montrose\",\r\n          87: \"Morgan\",\r\n          89: \"Otero\",\r\n          91: \"Ouray\",\r\n          93: \"Park\",\r\n          95: \"Phillips\",\r\n          97: \"Pitkin\",\r\n          99: \"Prowers\",\r\n          101: \"Pueblo\",\r\n          103: \"Rio Blanco\",\r\n          105: \"Rio Grande\",\r\n          107: \"Routt\",\r\n          109: \"Saguache\",\r\n          111: \"San Juan\",\r\n          113: \"San Miguel\",\r\n          115: \"Sedgwick\",\r\n          117: \"Summit\",\r\n          119: \"Teller\",\r\n          121: \"Washington\",\r\n          123: \"Weld\",\r\n          125: \"Yuma\"\r\n      },\r\n      illinois:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Alexander\",\r\n          5: \"Bond\",\r\n          7: \"Boone\",\r\n          9: \"Brown\",\r\n          11: \"Bureau\",\r\n          13: \"Calhoun\",\r\n          15: \"Carroll\",\r\n          17: \"Cass\",\r\n          19: \"Champaign\",\r\n          21: \"Christian\",\r\n          23: \"Clark\",\r\n          25: \"Clay\",\r\n          27: \"Clinton\",\r\n          29: \"Coles\",\r\n          31: \"Cook\",\r\n          33: \"Crawford\",\r\n          35: \"Cumberland\",\r\n          37: \"De Kalb\",\r\n          39: \"De Witt\",\r\n          41: \"Douglas\",\r\n          43: \"Du Page\",\r\n          45: \"Edgar\",\r\n          47: \"Edwards\",\r\n          49: \"Effingham\",\r\n          51: \"Fayette\",\r\n          53: \"Ford\",\r\n          55: \"Franklin\",\r\n          57: \"Fulton\",\r\n          59: \"Gallatin\",\r\n          61: \"Greene\",\r\n          63: \"Grundy\",\r\n          65: \"Hamilton\",\r\n          67: \"Hancock\",\r\n          69: \"Hardin\",\r\n          71: \"Henderson\",\r\n          73: \"Henry\",\r\n          75: \"Iroquois\",\r\n          77: \"Jackson\",\r\n          79: \"Jasper\",\r\n          81: \"Jefferson\",\r\n          83: \"Jersey\",\r\n          85: \"Jo Daviess\",\r\n          87: \"Johnson\",\r\n          89: \"Kane\",\r\n          91: \"Kankakee\",\r\n          93: \"Kendall\",\r\n          95: \"Knox\",\r\n          97: \"Lake\",\r\n          99: \"La Salle\",\r\n          101: \"Lawrence\",\r\n          103: \"Lee\",\r\n          105: \"Livingston\",\r\n          107: \"Logan\",\r\n          109: \"McDonough\",\r\n          111: \"McHenry\",\r\n          113: \"McLean\",\r\n          115: \"Macon\",\r\n          117: \"Macoupin\",\r\n          119: \"Madison\",\r\n          121: \"Marion\",\r\n          123: \"Marshall\",\r\n          125: \"Mason\",\r\n          127: \"Massac\",\r\n          129: \"Menard\",\r\n          131: \"Mercer\",\r\n          133: \"Monroe\",\r\n          135: \"Montgomery\",\r\n          137: \"Morgan\",\r\n          139: \"Moultrie\",\r\n          141: \"Ogle\",\r\n          143: \"Peoria\",\r\n          145: \"Perry\",\r\n          147: \"Piatt\",\r\n          149: \"Pike\",\r\n          151: \"Pope\",\r\n          153: \"Pulaski\",\r\n          155: \"Putnam\",\r\n          157: \"Randolph\",\r\n          159: \"Richland\",\r\n          161: \"Rock Island\",\r\n          163: \"St Clair\",\r\n          165: \"Saline\",\r\n          167: \"Sangamon\",\r\n          169: \"Schuyler\",\r\n          171: \"Scott\",\r\n          173: \"Shelby\",\r\n          175: \"Stark\",\r\n          177: \"Stephenson\",\r\n          179: \"Tazewell\",\r\n          181: \"Union\",\r\n          183: \"Vermilion\",\r\n          185: \"Wabash\",\r\n          187: \"Warren\",\r\n          189: \"Washington\",\r\n          191: \"Wayne\",\r\n          193: \"White\",\r\n          195: \"Whiteside\",\r\n          197: \"Will\",\r\n          199: \"Williamson\",\r\n          201: \"Winnebago\",\r\n          203: \"Woodford\"\r\n      },\r\n      indiana:\r\n      {\r\n          1: \"Adams\",\r\n          3: \"Allen\",\r\n          5: \"Bartholomew\",\r\n          7: \"Benton\",\r\n          9: \"Blackford\",\r\n          11: \"Boone\",\r\n          13: \"Brown\",\r\n          15: \"Carroll\",\r\n          17: \"Cass\",\r\n          19: \"Clark\",\r\n          21: \"Clay\",\r\n          23: \"Clinton\",\r\n          25: \"Crawford\",\r\n          27: \"Daviess\",\r\n          29: \"Dearborn\",\r\n          31: \"Decatur\",\r\n          33: \"De Kalb\",\r\n          35: \"Delaware\",\r\n          37: \"Dubois\",\r\n          39: \"Elkhart\",\r\n          41: \"Fayette\",\r\n          43: \"Floyd\",\r\n          45: \"Fountain\",\r\n          47: \"Franklin\",\r\n          49: \"Fulton\",\r\n          51: \"Gibson\",\r\n          53: \"Grant\",\r\n          55: \"Greene\",\r\n          57: \"Hamilton\",\r\n          59: \"Hancock\",\r\n          61: \"Harrison\",\r\n          63: \"Hendricks\",\r\n          65: \"Henry\",\r\n          67: \"Howard\",\r\n          69: \"Huntington\",\r\n          71: \"Jackson\",\r\n          73: \"Jasper\",\r\n          75: \"Jay\",\r\n          77: \"Jefferson\",\r\n          79: \"Jennings\",\r\n          81: \"Johnson\",\r\n          83: \"Knox\",\r\n          85: \"Kosciusko\",\r\n          87: \"La Grange\",\r\n          89: \"Lake\",\r\n          91: \"La Porte\",\r\n          93: \"Lawrence\",\r\n          95: \"Madison\",\r\n          97: \"Marion\",\r\n          99: \"Marshall\",\r\n          101: \"Martin\",\r\n          103: \"Miami\",\r\n          105: \"Monroe\",\r\n          107: \"Montgomery\",\r\n          109: \"Morgan\",\r\n          111: \"Newton\",\r\n          113: \"Noble\",\r\n          115: \"Ohio\",\r\n          117: \"Orange\",\r\n          119: \"Owen\",\r\n          121: \"Parke\",\r\n          123: \"Perry\",\r\n          125: \"Pike\",\r\n          127: \"Porter\",\r\n          129: \"Posey\",\r\n          131: \"Pulaski\",\r\n          133: \"Putnam\",\r\n          135: \"Randolph\",\r\n          137: \"Ripley\",\r\n          139: \"Rush\",\r\n          141: \"St Joseph\",\r\n          143: \"Scott\",\r\n          145: \"Shelby\",\r\n          147: \"Spencer\",\r\n          149: \"Starke\",\r\n          151: \"Steuben\",\r\n          153: \"Sullivan\",\r\n          155: \"Switzerland\",\r\n          157: \"Tippecanoe\",\r\n          159: \"Tipton\",\r\n          161: \"Union\",\r\n          163: \"Vanderburgh\",\r\n          165: \"Vermillion\",\r\n          167: \"Vigo\",\r\n          169: \"Wabash\",\r\n          171: \"Warren\",\r\n          173: \"Warrick\",\r\n          175: \"Washington\",\r\n          177: \"Wayne\",\r\n          179: \"Wells\",\r\n          181: \"White\",\r\n          183: \"Whitley\"\r\n      },\r\n      minnesota:\r\n      {\r\n          1: \"Aitkin\",\r\n          3: \"Anoka\",\r\n          5: \"Becker\",\r\n          7: \"Beltrami\",\r\n          9: \"Benton\",\r\n          11: \"Big Stone\",\r\n          13: \"Blue Earth\",\r\n          15: \"Brown\",\r\n          17: \"Carlton\",\r\n          19: \"Carver\",\r\n          21: \"Cass\",\r\n          23: \"Chippewa\",\r\n          25: \"Chisago\",\r\n          27: \"Clay\",\r\n          29: \"Clearwater\",\r\n          31: \"Cook\",\r\n          33: \"Cottonwood\",\r\n          35: \"Crow Wing\",\r\n          37: \"Dakota\",\r\n          39: \"Dodge\",\r\n          41: \"Douglas\",\r\n          43: \"Faribault\",\r\n          45: \"Fillmore\",\r\n          47: \"Freeborn\",\r\n          49: \"Goodhue\",\r\n          51: \"Grant\",\r\n          53: \"Hennepin\",\r\n          55: \"Houston\",\r\n          57: \"Hubbard\",\r\n          59: \"Isanti\",\r\n          61: \"Itasca\",\r\n          63: \"Jackson\",\r\n          65: \"Kanabec\",\r\n          67: \"Kandiyohi\",\r\n          69: \"Kittson\",\r\n          71: \"Koochiching\",\r\n          73: \"Lac qui Parle\",\r\n          75: \"Lake\",\r\n          77: \"Lake of the Woods\",\r\n          79: \"Le Sueur\",\r\n          81: \"Lincoln\",\r\n          83: \"Lyon\",\r\n          85: \"McLeod\",\r\n          87: \"Mahnomen\",\r\n          89: \"Marshall\",\r\n          91: \"Martin\",\r\n          93: \"Meeker\",\r\n          95: \"Mille Lacs\",\r\n          97: \"Morrison\",\r\n          99: \"Mower\",\r\n          101: \"Murray\",\r\n          103: \"Nicollet\",\r\n          105: \"Nobles\",\r\n          107: \"Norman\",\r\n          109: \"Olmsted\",\r\n          111: \"Otter Tail\",\r\n          113: \"Pennington\",\r\n          115: \"Pine\",\r\n          117: \"Pipestone\",\r\n          119: \"Polk\",\r\n          121: \"Pope\",\r\n          123: \"Ramsey\",\r\n          125: \"Red Lake\",\r\n          127: \"Redwood\",\r\n          129: \"Renville\",\r\n          131: \"Rice\",\r\n          133: \"Rock\",\r\n          135: \"Roseau\",\r\n          137: \"St Louis\",\r\n          139: \"Scott\",\r\n          141: \"Sherburne\",\r\n          143: \"Sibley\",\r\n          145: \"Stearns\",\r\n          147: \"Steele\",\r\n          149: \"Stevens\",\r\n          151: \"Swift\",\r\n          153: \"Todd\",\r\n          155: \"Traverse\",\r\n          157: \"Wabasha\",\r\n          159: \"Wadena\",\r\n          161: \"Waseca\",\r\n          163: \"Washington\",\r\n          165: \"Watonwan\",\r\n          167: \"Wilkin\",\r\n          169: \"Winona\",\r\n          171: \"Wright\",\r\n          173: \"Yellow Medicine\"\r\n      },\r\n      oklahoma:\r\n      {\r\n          1: \"Adair\",\r\n          3: \"Alfalfa\",\r\n          5: \"Atoka\",\r\n          7: \"Beaver\",\r\n          9: \"Beckham\",\r\n          11: \"Blaine\",\r\n          13: \"Bryan\",\r\n          15: \"Caddo\",\r\n          17: \"Canadian\",\r\n          19: \"Carter\",\r\n          21: \"Cherokee\",\r\n          23: \"Choctaw\",\r\n          25: \"Cimarron\",\r\n          27: \"Cleveland\",\r\n          29: \"Coal\",\r\n          31: \"Comanche\",\r\n          33: \"Cotton\",\r\n          35: \"Craig\",\r\n          37: \"Creek\",\r\n          39: \"Custer\",\r\n          41: \"Delaware\",\r\n          43: \"Dewey\",\r\n          45: \"Ellis\",\r\n          47: \"Garfield\",\r\n          49: \"Garvin\",\r\n          51: \"Grady\",\r\n          53: \"Grant\",\r\n          55: \"Greer\",\r\n          57: \"Harmon\",\r\n          59: \"Harper\",\r\n          61: \"Haskell\",\r\n          63: \"Hughes\",\r\n          65: \"Jackson\",\r\n          67: \"Jefferson\",\r\n          69: \"Johnston\",\r\n          71: \"Kay\",\r\n          73: \"Kingfisher\",\r\n          75: \"Kiowa\",\r\n          77: \"Latimer\",\r\n          79: \"Le Flore\",\r\n          81: \"Lincoln\",\r\n          83: \"Logan\",\r\n          85: \"Love\",\r\n          87: \"McClain\",\r\n          89: \"McCurtain\",\r\n          91: \"McIntosh\",\r\n          93: \"Major\",\r\n          95: \"Marshall\",\r\n          97: \"Mayes\",\r\n          99: \"Murray\",\r\n          101: \"Muskogee\",\r\n          103: \"Noble\",\r\n          105: \"Nowata\",\r\n          107: \"Okfuskee\",\r\n          109: \"Oklahoma\",\r\n          111: \"Okmulgee\",\r\n          113: \"Osage\",\r\n          115: \"Ottawa\",\r\n          117: \"Pawnee\",\r\n          119: \"Payne\",\r\n          121: \"Pittsburg\",\r\n          123: \"Pontotoc\",\r\n          125: \"Pottawatomie\",\r\n          127: \"Pushmataha\",\r\n          129: \"Roger Mills\",\r\n          131: \"Rogers\",\r\n          133: \"Seminole\",\r\n          135: \"Sequoyah\",\r\n          137: \"Stephens\",\r\n          139: \"Texas\",\r\n          141: \"Tillman\",\r\n          143: \"Tulsa\",\r\n          145: \"Wagoner\",\r\n          147: \"Washington\",\r\n          149: \"Washita\",\r\n          151: \"Woods\",\r\n          153: \"Woodward\"\r\n      },\r\n      guam:\r\n      {\r\n          10: \"Guam\"\r\n      },\r\n      connecticut:\r\n      {\r\n          1: \"Fairfield\",\r\n          3: \"Hartford\",\r\n          5: \"Litchfield\",\r\n          7: \"Middlesex\",\r\n          9: \"New Haven\",\r\n          11: \"New London\",\r\n          13: \"Tolland\",\r\n          15: \"Windham\"\r\n      },\r\n      iowa:\r\n      {\r\n          1: \"Adair\",\r\n          3: \"Adams\",\r\n          5: \"Allamakee\",\r\n          7: \"Appanoose\",\r\n          9: \"Audubon\",\r\n          11: \"Benton\",\r\n          13: \"Black Hawk\",\r\n          15: \"Boone\",\r\n          17: \"Bremer\",\r\n          19: \"Buchanan\",\r\n          21: \"Buena Vista\",\r\n          23: \"Butler\",\r\n          25: \"Calhoun\",\r\n          27: \"Carroll\",\r\n          29: \"Cass\",\r\n          31: \"Cedar\",\r\n          33: \"Cerro Gordo\",\r\n          35: \"Cherokee\",\r\n          37: \"Chickasaw\",\r\n          39: \"Clarke\",\r\n          41: \"Clay\",\r\n          43: \"Clayton\",\r\n          45: \"Clinton\",\r\n          47: \"Crawford\",\r\n          49: \"Dallas\",\r\n          51: \"Davis\",\r\n          53: \"Decatur\",\r\n          55: \"Delaware\",\r\n          57: \"Des Moines\",\r\n          59: \"Dickinson\",\r\n          61: \"Dubuque\",\r\n          63: \"Emmet\",\r\n          65: \"Fayette\",\r\n          67: \"Floyd\",\r\n          69: \"Franklin\",\r\n          71: \"Fremont\",\r\n          73: \"Greene\",\r\n          75: \"Grundy\",\r\n          77: \"Guthrie\",\r\n          79: \"Hamilton\",\r\n          81: \"Hancock\",\r\n          83: \"Hardin\",\r\n          85: \"Harrison\",\r\n          87: \"Henry\",\r\n          89: \"Howard\",\r\n          91: \"Humboldt\",\r\n          93: \"Ida\",\r\n          95: \"Iowa\",\r\n          97: \"Jackson\",\r\n          99: \"Jasper\",\r\n          101: \"Jefferson\",\r\n          103: \"Johnson\",\r\n          105: \"Jones\",\r\n          107: \"Keokuk\",\r\n          109: \"Kossuth\",\r\n          111: \"Lee\",\r\n          113: \"Linn\",\r\n          115: \"Louisa\",\r\n          117: \"Lucas\",\r\n          119: \"Lyon\",\r\n          121: \"Madison\",\r\n          123: \"Mahaska\",\r\n          125: \"Marion\",\r\n          127: \"Marshall\",\r\n          129: \"Mills\",\r\n          131: \"Mitchell\",\r\n          133: \"Monona\",\r\n          135: \"Monroe\",\r\n          137: \"Montgomery\",\r\n          139: \"Muscatine\",\r\n          141: \"O Brien\",\r\n          143: \"Osceola\",\r\n          145: \"Page\",\r\n          147: \"Palo Alto\",\r\n          149: \"Plymouth\",\r\n          151: \"Pocahontas\",\r\n          153: \"Polk\",\r\n          155: \"Pottawattamie\",\r\n          157: \"Poweshiek\",\r\n          159: \"Ringgold\",\r\n          161: \"Sac\",\r\n          163: \"Scott\",\r\n          165: \"Shelby\",\r\n          167: \"Sioux\",\r\n          169: \"Story\",\r\n          171: \"Tama\",\r\n          173: \"Taylor\",\r\n          175: \"Union\",\r\n          177: \"Van Buren\",\r\n          179: \"Wapello\",\r\n          181: \"Warren\",\r\n          183: \"Washington\",\r\n          185: \"Wayne\",\r\n          187: \"Webster\",\r\n          189: \"Winnebago\",\r\n          191: \"Winneshiek\",\r\n          193: \"Woodbury\",\r\n          195: \"Worth\",\r\n          197: \"Wright\"\r\n      },\r\n      maine:\r\n      {\r\n          1: \"Androscoggin\",\r\n          3: \"Aroostook\",\r\n          5: \"Cumberland\",\r\n          7: \"Franklin\",\r\n          9: \"Hancock\",\r\n          11: \"Kennebec\",\r\n          13: \"Knox\",\r\n          15: \"Lincoln\",\r\n          17: \"Oxford\",\r\n          19: \"Penobscot\",\r\n          21: \"Piscataquis\",\r\n          23: \"Sagadahoc\",\r\n          25: \"Somerset\",\r\n          27: \"Waldo\",\r\n          29: \"Washington\",\r\n          31: \"York\"\r\n      },\r\n      arizona:\r\n      {\r\n          1: \"Apache\",\r\n          3: \"Cochise\",\r\n          5: \"Coconino\",\r\n          7: \"Gila\",\r\n          9: \"Graham\",\r\n          11: \"Greenlee\",\r\n          12: \"La Paz\",\r\n          13: \"Maricopa\",\r\n          15: \"Mohave\",\r\n          17: \"Navajo\",\r\n          19: \"Pima\",\r\n          21: \"Pinal\",\r\n          23: \"Santa Cruz\",\r\n          25: \"Yavapai\",\r\n          27: \"Yuma\"\r\n      },\r\n      missouri:\r\n      {\r\n          1: \"Adair\",\r\n          3: \"Andrew\",\r\n          5: \"Atchison\",\r\n          7: \"Audrain\",\r\n          9: \"Barry\",\r\n          11: \"Barton\",\r\n          13: \"Bates\",\r\n          15: \"Benton\",\r\n          17: \"Bollinger\",\r\n          19: \"Boone\",\r\n          21: \"Buchanan\",\r\n          23: \"Butler\",\r\n          25: \"Caldwell\",\r\n          27: \"Callaway\",\r\n          29: \"Camden\",\r\n          31: \"Cape Girardeau\",\r\n          33: \"Carroll\",\r\n          35: \"Carter\",\r\n          37: \"Cass\",\r\n          39: \"Cedar\",\r\n          41: \"Chariton\",\r\n          43: \"Christian\",\r\n          45: \"Clark\",\r\n          47: \"Clay\",\r\n          49: \"Clinton\",\r\n          51: \"Cole\",\r\n          53: \"Cooper\",\r\n          55: \"Crawford\",\r\n          57: \"Dade\",\r\n          59: \"Dallas\",\r\n          61: \"Daviess\",\r\n          63: \"De Kalb\",\r\n          65: \"Dent\",\r\n          67: \"Douglas\",\r\n          69: \"Dunklin\",\r\n          71: \"Franklin\",\r\n          73: \"Gasconade\",\r\n          75: \"Gentry\",\r\n          77: \"Greene\",\r\n          79: \"Grundy\",\r\n          81: \"Harrison\",\r\n          83: \"Henry\",\r\n          85: \"Hickory\",\r\n          87: \"Holt\",\r\n          89: \"Howard\",\r\n          91: \"Howell\",\r\n          93: \"Iron\",\r\n          95: \"Jackson\",\r\n          97: \"Jasper\",\r\n          99: \"Jefferson\",\r\n          101: \"Johnson\",\r\n          103: \"Knox\",\r\n          105: \"Laclede\",\r\n          107: \"Lafayette\",\r\n          109: \"Lawrence\",\r\n          111: \"Lewis\",\r\n          113: \"Lincoln\",\r\n          115: \"Linn\",\r\n          117: \"Livingston\",\r\n          119: \"McDonald\",\r\n          121: \"Macon\",\r\n          123: \"Madison\",\r\n          125: \"Maries\",\r\n          127: \"Marion\",\r\n          129: \"Mercer\",\r\n          131: \"Miller\",\r\n          133: \"Mississippi\",\r\n          135: \"Moniteau\",\r\n          137: \"Monroe\",\r\n          139: \"Montgomery\",\r\n          141: \"Morgan\",\r\n          143: \"New Madrid\",\r\n          145: \"Newton\",\r\n          147: \"Nodaway\",\r\n          149: \"Oregon\",\r\n          151: \"Osage\",\r\n          153: \"Ozark\",\r\n          155: \"Pemiscot\",\r\n          157: \"Perry\",\r\n          159: \"Pettis\",\r\n          161: \"Phelps\",\r\n          163: \"Pike\",\r\n          165: \"Platte\",\r\n          167: \"Polk\",\r\n          169: \"Pulaski\",\r\n          171: \"Putnam\",\r\n          173: \"Ralls\",\r\n          175: \"Randolph\",\r\n          177: \"Ray\",\r\n          179: \"Reynolds\",\r\n          181: \"Ripley\",\r\n          183: \"St Charles\",\r\n          185: \"St Clair\",\r\n          186: \"Ste. Genevieve\",\r\n          187: \"St Francois\",\r\n          189: \"St Louis\",\r\n          195: \"Saline\",\r\n          197: \"Schuyler\",\r\n          199: \"Scotland\",\r\n          201: \"Scott\",\r\n          203: \"Shannon\",\r\n          205: \"Shelby\",\r\n          207: \"Stoddard\",\r\n          209: \"Stone\",\r\n          211: \"Sullivan\",\r\n          213: \"Taney\",\r\n          215: \"Texas\",\r\n          217: \"Vernon\",\r\n          219: \"Warren\",\r\n          221: \"Washington\",\r\n          223: \"Wayne\",\r\n          225: \"Webster\",\r\n          227: \"Worth\",\r\n          229: \"Wright\",\r\n          510: \"St Louis City\"\r\n      },\r\n      newhampshire:\r\n      {\r\n          1: \"Belknap\",\r\n          3: \"Carroll\",\r\n          5: \"Cheshire\",\r\n          7: \"Coos\",\r\n          9: \"Grafton\",\r\n          11: \"Hillsborough\",\r\n          13: \"Merrimack\",\r\n          15: \"Rockingham\",\r\n          17: \"Strafford\",\r\n          19: \"Sullivan\"\r\n      },\r\n      california:\r\n      {\r\n          1: \"Alameda\",\r\n          3: \"Alpine\",\r\n          5: \"Amador\",\r\n          7: \"Butte\",\r\n          9: \"Calaveras\",\r\n          11: \"Colusa\",\r\n          13: \"Contra Costa\",\r\n          15: \"Del Norte\",\r\n          17: \"El Dorado\",\r\n          19: \"Fresno\",\r\n          21: \"Glenn\",\r\n          23: \"Humboldt\",\r\n          25: \"Imperial\",\r\n          27: \"Inyo\",\r\n          29: \"Kern\",\r\n          31: \"Kings\",\r\n          33: \"Lake\",\r\n          35: \"Lassen\",\r\n          37: \"Los Angeles\",\r\n          39: \"Madera\",\r\n          41: \"Marin\",\r\n          43: \"Mariposa\",\r\n          45: \"Mendocino\",\r\n          47: \"Merced\",\r\n          49: \"Modoc\",\r\n          51: \"Mono\",\r\n          53: \"Monterey\",\r\n          55: \"Napa\",\r\n          57: \"Nevada\",\r\n          59: \"Orange\",\r\n          61: \"Placer\",\r\n          63: \"Plumas\",\r\n          65: \"Riverside\",\r\n          67: \"Sacramento\",\r\n          69: \"San Benito\",\r\n          71: \"San Bernardino\",\r\n          73: \"San Diego\",\r\n          75: \"San Francisco\",\r\n          77: \"San Joaquin\",\r\n          79: \"San Luis Obispo\",\r\n          81: \"San Mateo\",\r\n          83: \"Santa Barbara\",\r\n          85: \"Santa Clara\",\r\n          87: \"Santa Cruz\",\r\n          89: \"Shasta\",\r\n          91: \"Sierra\",\r\n          93: \"Siskiyou\",\r\n          95: \"Solano\",\r\n          97: \"Sonoma\",\r\n          99: \"Stanislaus\",\r\n          101: \"Sutter\",\r\n          103: \"Tehama\",\r\n          105: \"Trinity\",\r\n          107: \"Tulare\",\r\n          109: \"Tuolumne\",\r\n          111: \"Ventura\",\r\n          113: \"Yolo\",\r\n          115: \"Yuba\"\r\n      },\r\n      maryland:\r\n      {\r\n          1: \"Allegany\",\r\n          3: \"Anne Arundel\",\r\n          5: \"Baltimore\",\r\n          9: \"Calvert\",\r\n          11: \"Caroline\",\r\n          13: \"Carroll\",\r\n          15: \"Cecil\",\r\n          17: \"Charles\",\r\n          19: \"Dorchester\",\r\n          21: \"Frederick\",\r\n          23: \"Garrett\",\r\n          25: \"Harford\",\r\n          27: \"Howard\",\r\n          29: \"Kent\",\r\n          31: \"Montgomery\",\r\n          33: \"Prince Georges\",\r\n          35: \"Queen Annes\",\r\n          37: \"St Marys\",\r\n          39: \"Somerset\",\r\n          41: \"Talbot\",\r\n          43: \"Washington\",\r\n          45: \"Wicomico\",\r\n          47: \"Worcester\",\r\n          510: \"Baltimore City\"\r\n      },\r\n      rhodeisland:\r\n      {\r\n          1: \"Bristol\",\r\n          3: \"Kent\",\r\n          5: \"Newport\",\r\n          7: \"Providence\",\r\n          9: \"Washington\"\r\n      },\r\n      idaho:\r\n      {\r\n          1: \"Ada\",\r\n          3: \"Adams\",\r\n          5: \"Bannock\",\r\n          7: \"Bear Lake\",\r\n          9: \"Benewah\",\r\n          11: \"Bingham\",\r\n          13: \"Blaine\",\r\n          15: \"Boise\",\r\n          17: \"Bonner\",\r\n          19: \"Bonneville\",\r\n          21: \"Boundary\",\r\n          23: \"Butte\",\r\n          25: \"Camas\",\r\n          27: \"Canyon\",\r\n          29: \"Caribou\",\r\n          31: \"Cassia\",\r\n          33: \"Clark\",\r\n          35: \"Clearwater\",\r\n          37: \"Custer\",\r\n          39: \"Elmore\",\r\n          41: \"Franklin\",\r\n          43: \"Fremont\",\r\n          45: \"Gem\",\r\n          47: \"Gooding\",\r\n          49: \"Idaho\",\r\n          51: \"Jefferson\",\r\n          53: \"Jerome\",\r\n          55: \"Kootenai\",\r\n          57: \"Latah\",\r\n          59: \"Lemhi\",\r\n          61: \"Lewis\",\r\n          63: \"Lincoln\",\r\n          65: \"Madison\",\r\n          67: \"Minidoka\",\r\n          69: \"Nez Perce\",\r\n          71: \"Oneida\",\r\n          73: \"Owyhee\",\r\n          75: \"Payette\",\r\n          77: \"Power\",\r\n          79: \"Shoshone\",\r\n          81: \"Teton\",\r\n          83: \"Twin Falls\",\r\n          85: \"Valley\",\r\n          87: \"Washington\"\r\n      }\r\n  };\r\n  let st = state.toLowerCase().replace(' ', '');\r\n  return codes[st][parseInt(fips)]\r\n}\r\n\r\nexport function specialStates (moduleID) {\r\n  // does server rep. this as space, underscore, etc?\r\n  // pass through here to normalize module names\r\n  return {\r\n    dc: \"district_of_columbia\",\r\n    ma: \"massachusetts\",\r\n    newhampshire: \"new_hampshire\",\r\n    newjersey: \"new_jersey\",\r\n    new_mexico_portal: \"new_mexico\",\r\n    newyork: \"new_york\",\r\n    nc: \"north_carolina\",\r\n    northcarolina: \"north_carolina\",\r\n    northdakota: \"north_dakota\",\r\n    puertorico: \"puerto_rico\",\r\n    puertorico_prec: \"puerto_rico\",\r\n    // RI is OK\r\n    southcarolina: \"south_carolina\",\r\n    southdakota: \"south_dakota\",\r\n    westvirginia: \"west_virginia\",\r\n  }[moduleID] || moduleID;\r\n}\r\n","import { listPlaces } from \"./api/mockApi\";\r\nimport { spatial_abilities } from \"./utils\";\r\n\r\nconst routes = {\r\n    \"/\": \"/\",\r\n    \"/new\": \"/new\",\r\n    \"/edit\": \"/edit\",\r\n    \"/embedded\": \"/embedded\",\r\n    \"/COI\": \"/COI\",\r\n    \"/plan\": \"/plan\",\r\n    \"/register\": \"/register\",\r\n    \"/request\": \"/request\",\r\n    \"/signin\": \"/signin\",\r\n    \"/signout\": \"/signout\",\r\n    \"/analysis\": \"/analysis\",\r\n    \"/evaluation\": \"/evaluation\",\r\n    \"/eval\": \"/eval\",\r\n    \"/coi-info\": \"/coi-info\"\r\n};\r\n\r\nexport function navigateTo(route) {\r\n    if (routes.hasOwnProperty(route) || route.includes(\"?event=\")) {\r\n        location.assign(routes[route] || route);\r\n    } else {\r\n        throw Error(\"The requested route does not exist: \" + route);\r\n    }\r\n}\r\n\r\nexport function startNewPlan(place, problem, units, id, setParts, eventCode, portalOn) {\r\n    if (setParts) {\r\n        problem.numberOfParts = setParts;\r\n    }\r\n    savePlanToStorage({ place, problem, units, id });\r\n    let action = (window.location.hostname === \"localhost\" ? \"edit\" : (\r\n      problem.type === \"community\" ? \"COI\" : \"plan\"\r\n    ));\r\n    if (portalOn) {\r\n      eventCode += \"&portal\";\r\n    }\r\n    navigateTo(eventCode ? (`/${action}?event=${eventCode}`) : `/${action}`);\r\n}\r\n\r\nexport function savePlanToStorage({\r\n    place,\r\n    problem,\r\n    units,\r\n    id,\r\n    assignment,\r\n    name,\r\n    description,\r\n    parts\r\n}) {\r\n    const state = {\r\n        place,\r\n        problem,\r\n        units,\r\n        id,\r\n        assignment,\r\n        name,\r\n        description,\r\n        parts\r\n    };\r\n    if (!window.location.href.includes(\"embed\")) {\r\n        localStorage.setItem(\"savedState\", JSON.stringify(state));\r\n    }\r\n}\r\n\r\nexport function savePlanToDB(state, eventCode, planName, callback, forceNotScratch) {\r\n    const serialized = state.serialize(),\r\n        mapID = window.location.pathname.split(\"/\").slice(-1)[0],\r\n        token = localStorage.getItem(\"districtr_token_\" + mapID) || \"\",\r\n        createdAfter = (new Date() * 1) - 24 * 60 * 60 * 1000,\r\n        tokenValid = (token && (token !== \"null\")\r\n            && (token.split(\"_\")[1] * 1 > createdAfter)),\r\n        saveURL = tokenValid\r\n            ? (\"/.netlify/functions/planUpdate?id=\" + mapID)\r\n            : \"/.netlify/functions/planCreate\",\r\n        requestBody = {\r\n            plan: JSON.parse(JSON.stringify(serialized)),\r\n            token: token.split(\"_\")[0],\r\n            eventCode: eventCode,\r\n            planName: planName,\r\n            isScratch: (document.getElementById(\"is-scratch\") || {}).checked || (eventCode && !forceNotScratch),\r\n            hostname: window.location.hostname\r\n        };\r\n    // VA fix - if precinct IDs are strings, escape any \".\"\r\n    Object.keys(requestBody.plan.assignment || {}).forEach(key => {\r\n        if (typeof key === \"string\" && key.indexOf(\".\") > -1) {\r\n            requestBody.plan.assignment[key.replace(/\\./g, \"÷\")] =\r\n                requestBody.plan.assignment[key];\r\n            delete requestBody.plan.assignment[key];\r\n        }\r\n    });\r\n    fetch(saveURL, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(requestBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(info => {\r\n        if (info.simple_id) {\r\n            let action = (window.location.hostname === \"localhost\" ? \"edit\" : (\r\n              serialized.problem.type === \"community\" ? \"COI\" : \"plan\"\r\n            ));\r\n            let extras = \"\";\r\n            if (window.location.href.includes(\"portal\")) {\r\n                extras = \"?portal\";\r\n            } else if (window.location.href.includes(\"qa-portal\")) {\r\n                extras = \"?qa-portal\";\r\n            } else if (window.location.href.includes(\"event\")) {\r\n                const eventdefault = window.location.href.split(\"event=\")[1].split(\"&\")[0].split(\"#\")[0];\r\n                extras = \"?event=\" + eventdefault;\r\n            }\r\n            history.pushState({}, \"Districtr\", `/${action}/${info.simple_id}${extras}`);\r\n            if (info.token && localStorage) {\r\n                localStorage.setItem(\"districtr_token_\" + info.simple_id, info.token + \"_\" + (1 * new Date()));\r\n            }\r\n            if (spatial_abilities(state.place.id).shapefile) {\r\n                // screenshot\r\n                if (\r\n                  (state.place.id === state.place.state.toLowerCase() &&\r\n                  [\"blockgroups20\", \"vtds20\"].includes(state.unitsRecord.id))\r\n                    || [\"new_mexico\", \"new_mexico_portal\"].includes(state.place.id)\r\n                ) {\r\n                    fetch(\"https://gvd4917837.execute-api.us-east-1.amazonaws.com/plan_thumbnail\", {\r\n                      method: 'POST',\r\n                      mode: 'cors',\r\n                      headers: {\r\n                        'Content-Type': 'application/json',\r\n                      },\r\n                      body: JSON.stringify({ id: info.simple_id }),\r\n                    }).then((res) => res.text()).then(f => console.log('saved image'))\r\n                } else {\r\n                    fetch(\"//mggg.pythonanywhere.com/picture2?id=\" + info.simple_id).then((res) => res.text()).then(f => console.log('saved image'))\r\n                }\r\n            }\r\n            callback(info.simple_id, action);\r\n        } else {\r\n            callback(null);\r\n        }\r\n    })\r\n    .catch(e => callback(null));\r\n}\r\n\r\nexport function getContextFromStorage() {\r\n    const savedState = window.location.href.includes(\"embed\")\r\n        ? null\r\n        : localStorage.getItem(\"savedState\");\r\n    let state;\r\n    try {\r\n        state = JSON.parse(savedState);\r\n//         if (state.place && state.units && state.units.columnSets && (state.place.id === \"new_mexico\") && window.location.href.includes(\"portal\")) {\r\n//             state.units.columnSets = state.units.columnSets.filter(c => c.type !== \"election\");\r\n//         }\r\n    } catch (e) {\r\n        localStorage.removeItem(\"savedState\");\r\n        navigateTo(\"/new\");\r\n    }\r\n\r\n    if (state === null || state === undefined) {\r\n        navigateTo(\"/new\");\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport function loadPlanFromJSON(planRecord) {\r\n    if (planRecord.msg && planRecord.plan) {\r\n        // retrieved from database\r\n        console.log(planRecord.msg);\r\n        planRecord = planRecord.plan;\r\n    }\r\n    window.nycKeeps = {};\r\n    Object.keys(planRecord.assignment || {}).forEach((key) => {\r\n        if (String(key).includes('÷')) {\r\n            let newKey = key.replace(/÷/g, \".\");\r\n            planRecord.assignment[newKey] = planRecord.assignment[key];\r\n            delete planRecord.assignment[key];\r\n        }\r\n        let colorAssigned = planRecord.assignment[key];\r\n        if (!window.nycKeeps[String(colorAssigned)]) {\r\n          window.nycKeeps[String(colorAssigned)] = { added: [Number(key)], removed: [] };\r\n        } else {\r\n          window.nycKeeps[String(colorAssigned)].added.push(Number(key));\r\n        }\r\n    });\r\n\r\n    if (planRecord.placeId === \"nc\") {\r\n        planRecord.placeId = \"northcarolina\";\r\n    }\r\n    return listPlaces(planRecord.placeId, (planRecord.state || (planRecord.place ? planRecord.place.state : null))).then(places => {\r\n        const place = places.find(p => String(p.id).replace(/÷/g, \".\") === String(planRecord.placeId));\r\n        if (place) {\r\n            place.landmarks = (planRecord.place || {}).landmarks;\r\n            planRecord.units = place.units.find(u => (u.name === planRecord.units.name) || (u.name === \"Wards\" && planRecord.units.name === \"2011 Wards\") || (u.name === \"2011 Wards\" && planRecord.units.name === \"Wards\"));\r\n        }\r\n//         if (planRecord.place && (planRecord.place.id === \"new_mexico\") && planRecord.units && planRecord.units.columnSets && window.location.href.includes(\"portal\")) {\r\n//             // hide election data on New Mexico portal maps\r\n//             planRecord.units.columnSets = planRecord.units.columnSets.filter(c => c.type !== \"election\");\r\n//         }\r\n        return {\r\n            ...planRecord,\r\n            place\r\n        };\r\n    });\r\n}\r\n\r\nexport function loadPlanFromCSV(assignmentList, state) {\r\n    let rows = assignmentList.trim().split(/\\r?\\n/);\r\n    let headers = rows[0].replace(/\"/g, \"\").trim().split(\",\");\r\n    if (\r\n        headers[0].indexOf(\"id-\") === 0\r\n        && headers[0].split(\"-\").length === 5\r\n    ) {\r\n        // new format, verify units match\r\n        //id-state.place.id-state.units.id\r\n        let cols = headers[0].split(\"-\");\r\n        let placeId = cols[1],\r\n            unitId = cols[2],\r\n            partCount = cols[3],\r\n            pluralType = cols[4];\r\n        if (unitId.includes(\"_\")) {\r\n            unitId = unitId.split(\"_\").slice(-1)[0];\r\n        }\r\n\r\n        if (placeId !== state.place.id) {\r\n            throw new Error(\"CSV is for a different module (another state or region).\");\r\n        } else if (unitId !== state.units.id.split(\"_\").slice(-1)[0]) {\r\n            throw new Error(\"CSV is for this module but a different unit map (e.g. blocks, precincts).\");\r\n        }\r\n        // else if (pluralType !== state.problem.pluralNoun.replace(/\\s+/g, \"\")) {\r\n        //     throw new Error(\"CSV is for this module but a different division map (e.g. districts)\");\r\n        // }\r\n        state.problem.numberOfParts = partCount * 1;\r\n    } else if (!headers[1].match(/\\d/) && headers[1].length !== 1) {\r\n        // Sept 2021 fix, no numbers in first line = useless header\r\n        console.log(\"custom header\");\r\n    } else {\r\n        // old format, no column headers\r\n        headers = null;\r\n    }\r\n    let planRecord = state;\r\n    planRecord.assignment = {};\r\n\r\n    const delimiter = (state.place.id === \"louisiana\") ? \";\" : \",\";\r\n\r\n    let districtIds = new Set(rows.slice(1).map((row, index) => row.split(delimiter)[1].split(\"_\")[0] ));\r\n    if (headers) {districtIds.delete(rows[0].split(delimiter)[1]);}\r\n    districtIds.delete(undefined);\r\n\r\n    let distMap = Array.from(districtIds.values());\r\n    (!isNaN(distMap[0] - distMap[1])) ? distMap.sort((a, b) => a - b) : distMap.sort();\r\n\r\n    // if we didn't set numberOfParts in CSV, find max here\r\n    state.problem.numberOfParts =  Math.max(state.problem.numberOfParts, distMap.length)\r\n\r\n    if (state.place.id === \"nc\") {\r\n        state.place.id = \"northcarolina\";\r\n    }\r\n    return listPlaces(state.place.id, state.place.state).then(places => {\r\n        rows.forEach((row, index) => {\r\n            if (index > 0 || !headers) {\r\n                let cols = row.split(delimiter),\r\n                    val = cols[1].split(\"_\"),\r\n                    key = (isNaN(cols[0] * 1) || cols[0].match(/[^0-9]/) || cols[0][0] === \"0\")\r\n                        ? cols[0]\r\n                        : cols[0] * 1;\r\n                if (!cols[1].match(/\\d/) && cols[1].length !== 1) {\r\n                    console.log(\"no assigned value in row \" + index);\r\n                    return;\r\n                }\r\n                if (typeof(key) === \"string\" && (key.includes(\"\\\"\"))) {\r\n                    key = key.slice(1, -1);\r\n                }\r\n\r\n                if (key && val !== undefined) {\r\n                    planRecord.assignment[key] = [];\r\n                    val.forEach(v => planRecord.assignment[key].push(distMap.indexOf(v)));\r\n                }\r\n            }\r\n        });\r\n        const place = places.find(p => p.id === planRecord.place.id);\r\n        return {\r\n            ...planRecord,\r\n            place\r\n        };\r\n    });\r\n}\r\n\r\nexport function loadPlanFromURL(url) {\r\n    return fetch(url)\r\n        .then(r => r.json())\r\n        .then(loadPlanFromJSON);\r\n}\r\n","import { registerUser } from \"../api/auth\";\r\nimport { createForm, errorMessage, isEmail } from \"../form\";\r\nimport { navigateTo } from \"../routes\";\r\nimport { handleResponse } from \"../utils\";\r\n\r\nfunction onSubmit({ first, last, email }) {\r\n    registerUser({\r\n        first: first.value,\r\n        last: last.value,\r\n        email: email.value\r\n    })\r\n        .then(\r\n            handleResponse({\r\n                201: () => {\r\n                    document.getElementById(\"form\").remove();\r\n                    document.getElementById(\"email-message\").innerText =\r\n                        \"Success! We sent you an email with a link to sign in.\";\r\n                    window.setTimeout(() => navigateTo(\"/\"), 2000);\r\n                },\r\n                default: () => {\r\n                    errorMessage(\r\n                        \"We're sorry. Registration is currently unavailable.\"\r\n                    );\r\n                }\r\n            })\r\n        )\r\n        .catch(() => {\r\n            errorMessage(\r\n                \"We're having trouble accessing our registration service. \" +\r\n                    \"Are you connected to the internet?\"\r\n            );\r\n        });\r\n}\r\n\r\nfunction validate({ first, last, email, submit }) {\r\n    const valid =\r\n        first.value.length > 0 &&\r\n        last.value.length > 0 &&\r\n        email.value.length > 0 &&\r\n        isEmail(email.value);\r\n    submit.disabled = !valid;\r\n    return valid;\r\n}\r\n\r\nexport default function main() {\r\n    createForm(\r\n        [\"first\", \"last\", \"email\", \"submit\"],\r\n        \"form\",\r\n        validate,\r\n        onSubmit\r\n    );\r\n}\r\n"],"names":["API_URL","location","hostname","includes","ApiClient","base_url","middleware","undefined","uri","method","body","headers","requestBody","JSON","stringify","fetch","reduce","requestOptions","request","client","registerUser","first","last","email","post","popupMessage","message","raw","messageElement","document","getElementById","classList","remove","innerHTML","innerText","errorMessage","element","add","emailRegex","isEmail","value","match","onAllChanges","f","onblur","onfocus","oninput","createForm","elementIds","formId","validate","onSubmit","elements","lookup","elementId","forEach","form","onsubmit","event","preventDefault","handleResponse","handlers","default","resp","console","error","response","hasOwnProperty","status","routes","navigateTo","route","assign","Error","then","window","setTimeout","catch","submit","valid","length","disabled","main"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,IAAMA,OAAO,GAAGC,QAAQ,CAACC,QAAT,CAAkBC,QAAlB,CAA2B,WAA3B,IACV,uBADU,GAEV,EAFN;;MAIqBC;EACjB,qBAAYC,QAAZ,EAAsBC,UAAtB,EAAkC;EAAA;;EAC9B,QAAID,QAAQ,KAAKE,SAAb,IAA0BF,QAAQ,KAAK,IAA3C,EAAiD;EAC7CA,MAAAA,QAAQ,GAAGL,OAAX;EACH;;EACD,SAAKK,QAAL,GAAgBA,QAAhB;;EACA,QAAIC,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAKC,SAA1C,EAAqD;EACjDD,MAAAA,UAAU,GAAG,EAAb;EACH;;EACD,SAAKA,UAAL,GAAkBA,UAAlB;EACH;;;;aACD,iBAAQE,GAAR,EAAaC,MAAb,EAAqBC,IAArB,EAA2BC,OAA3B,EAAoC;EAChC,UAAIC,WAAJ;;EACA,UAAIF,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKH,SAA9B,EAAyC;EACrCK,QAAAA,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAd;EACH;;EACD,aAAOK,KAAK,CACR,KAAKV,QAAL,GAAgBG,GADR;EAGR,WAAKF,UAAL,CAAgBU,MAAhB,CACI,UAACC,cAAD,EAAiBX,UAAjB;EAAA,eAAgCA,UAAU,CAACW,cAAD,CAA1C;EAAA,OADJ,EAEI;EACIR,QAAAA,MAAM,EAAEA,MADZ;EAEIC,QAAAA,IAAI,EAAEE,WAFV;EAGID,QAAAA,OAAO;EAAI,0BAAgB;EAApB,WAA2CA,OAA3C;EAHX,OAFJ,CAHQ,CAAZ;EAYH;;;aACD,aAAIH,GAAJ,EAASG,OAAT,EAAkB;EACd,aAAO,KAAKO,OAAL,CAAaV,GAAb,EAAkB,KAAlB,EAAyB,IAAzB,EAA+BG,OAA/B,CAAP;EACH;;;aACD,cAAKH,GAAL,EAAUE,IAAV,EAAgB;EACZ,aAAO,KAAKQ,OAAL,CAAaV,GAAb,EAAkB,MAAlB,EAA0BE,IAA1B,CAAP;EACH;;;aACD,aAAIF,GAAJ,EAASE,IAAT,EAAe;EACX,aAAO,KAAKQ,OAAL,CAAaV,GAAb,EAAkB,KAAlB,EAAyBE,IAAzB,CAAP;EACH;;;aACD,iBAAOF,GAAP,EAAYE,IAAZ,EAAkB;EACd,aAAO,KAAKQ,OAAL,CAAaV,GAAb,EAAkB,QAAlB,EAA4BE,IAA5B,CAAP;EACH;;;aACD,eAAMF,GAAN,EAAWE,IAAX,EAAiB;EACb,aAAO,KAAKQ,OAAL,CAAaV,GAAb,EAAkB,OAAlB,EAA2BE,IAA3B,CAAP;EACH;;;;;EAGE,IAAMS,MAAM,GAAG,IAAIf,SAAJ,CAAcJ,OAAd,CAAf;;EChDA,SAASoB,YAAT,OAA8C;EAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;EAAA,MAAfC,IAAe,QAAfA,IAAe;EAAA,MAATC,KAAS,QAATA,KAAS;EACjD,SAAOJ,MAAM,CAACK,IAAP,CAAY,YAAZ,EAA0B;EAAEH,IAAAA,KAAK,EAALA,KAAF;EAASC,IAAAA,IAAI,EAAJA,IAAT;EAAeC,IAAAA,KAAK,EAALA;EAAf,GAA1B,CAAP;EACH;;ECJM,SAASE,YAAT,OAAwC;EAAA,MAAhBC,OAAgB,QAAhBA,OAAgB;EAAA,MAAPC,GAAO,QAAPA,GAAO;EAC3C,MAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAvB;EACAF,EAAAA,cAAc,CAACG,SAAf,CAAyBC,MAAzB,CAAgC,QAAhC;;EACA,MAAIL,GAAG,KAAK,IAAZ,EAAkB;EACdC,IAAAA,cAAc,CAACK,SAAf,GAA2BP,OAA3B;EACH,GAFD,MAEO;EACHE,IAAAA,cAAc,CAACM,SAAf,GAA2BR,OAA3B;EACH;;EACD,SAAOE,cAAP;EACH;EAEM,SAASO,YAAT,CAAsBT,OAAtB,EAA+B;EAClC,MAAMU,OAAO,GAAGX,YAAY,CAAC;EAAEC,IAAAA,OAAO,EAAPA;EAAF,GAAD,CAA5B;EACAU,EAAAA,OAAO,CAACL,SAAR,CAAkBM,GAAlB,CAAsB,OAAtB;EACH;EAEM,IAAMC,UAAU,GAAG,sIAAnB;EAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAC3B,SAAOA,KAAK,CAACC,KAAN,CAAYH,UAAZ,CAAP;EACH;;EAED,SAASI,YAAT,CAAsBN,OAAtB,EAA+BO,CAA/B,EAAkC;EAC9BP,EAAAA,OAAO,CAACQ,MAAR,GAAiBD,CAAjB;EACAP,EAAAA,OAAO,CAACS,OAAR,GAAkBF,CAAlB;EACAP,EAAAA,OAAO,CAACU,OAAR,GAAkBH,CAAlB;EACH;;EAEM,SAASI,UAAT,CAAoBC,UAApB,EAAgCC,MAAhC,EAAwCC,QAAxC,EAAkDC,QAAlD,EAA4D;EAC/D,MAAMC,QAAQ,GAAGJ,UAAU,CAAChC,MAAX,CAAkB,UAACqC,MAAD,EAASC,SAAT,EAAuB;EACtD,QAAMlB,OAAO,GAAGP,QAAQ,CAACC,cAAT,CAAwBwB,SAAxB,CAAhB;EACA,6CAAYD,MAAZ,2BAAqBC,SAArB,EAAiClB,OAAjC;EACH,GAHgB,EAGd,EAHc,CAAjB;EAKAY,EAAAA,UAAU,CAACO,OAAX,CAAmB,UAAAD,SAAS,EAAI;EAC5BZ,IAAAA,YAAY,CAACU,QAAQ,CAACE,SAAD,CAAT,EAAsB;EAAA,aAAMJ,QAAQ,CAACE,QAAD,CAAd;EAAA,KAAtB,CAAZ;EACH,GAFD;EAIA,MAAMI,IAAI,GAAG3B,QAAQ,CAACC,cAAT,CAAwBmB,MAAxB,CAAb;;EACAO,EAAAA,IAAI,CAACC,QAAL,GAAgB,UAAAC,KAAK,EAAI;EACrBA,IAAAA,KAAK,CAACC,cAAN;;EACA,QAAI,CAACT,QAAQ,CAACE,QAAD,CAAb,EAAyB;EACrB;EACH;;EACDD,IAAAA,QAAQ,CAACC,QAAD,CAAR;EACH,GAND;EAOH;;ECoDD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASQ,cAAT,CAAwBC,QAAxB,EAAkC;EACvCA,EAAAA,QAAQ;EACN;EACAC,IAAAA,OAAO,EAAE,kBAAAC,IAAI;EAAA,aAAIC,OAAO,CAACC,KAAR,CAAc,gBAAd,EAAgCF,IAAhC,CAAJ;EAAA;EAFP,KAGHF,QAHG,CAAR;EAKA,SAAO,UAAAK,QAAQ,EAAI;EACjB,QAAIL,QAAQ,CAACM,cAAT,CAAwBD,QAAQ,CAACE,MAAjC,CAAJ,EAA8C;EAC5C,aAAOP,QAAQ,CAACK,QAAQ,CAACE,MAAV,CAAR,CAA0BF,QAA1B,CAAP;EACD,KAFD,MAEO;EACL,aAAOL,QAAQ,CAACC,OAAT,CAAiBI,QAAjB,CAAP;EACD;EACF,GAND;EAOD;;ECrHD,IAAMG,MAAM,GAAG;EACX,OAAK,GADM;EAEX,UAAQ,MAFG;EAGX,WAAS,OAHE;EAIX,eAAa,WAJF;EAKX,UAAQ,MALG;EAMX,WAAS,OANE;EAOX,eAAa,WAPF;EAQX,cAAY,UARD;EASX,aAAW,SATA;EAUX,cAAY,UAVD;EAWX,eAAa,WAXF;EAYX,iBAAe,aAZJ;EAaX,WAAS,OAbE;EAcX,eAAa;EAdF,CAAf;EAiBO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAC9B,MAAIF,MAAM,CAACF,cAAP,CAAsBI,KAAtB,KAAgCA,KAAK,CAACpE,QAAN,CAAe,SAAf,CAApC,EAA+D;EAC3DF,IAAAA,QAAQ,CAACuE,MAAT,CAAgBH,MAAM,CAACE,KAAD,CAAN,IAAiBA,KAAjC;EACH,GAFD,MAEO;EACH,UAAME,KAAK,CAAC,yCAAyCF,KAA1C,CAAX;EACH;EACJ;;ECrBD,SAASpB,QAAT,OAA0C;EAAA,MAAtB9B,KAAsB,QAAtBA,KAAsB;EAAA,MAAfC,IAAe,QAAfA,IAAe;EAAA,MAATC,KAAS,QAATA,KAAS;EACtCH,EAAAA,YAAY,CAAC;EACTC,IAAAA,KAAK,EAAEA,KAAK,CAACmB,KADJ;EAETlB,IAAAA,IAAI,EAAEA,IAAI,CAACkB,KAFF;EAGTjB,IAAAA,KAAK,EAAEA,KAAK,CAACiB;EAHJ,GAAD,CAAZ,CAKKkC,IALL,CAMQd,cAAc,CAAC;EACX,SAAK,aAAM;EACP/B,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCE,MAAhC;EACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCI,SAAzC,GACI,uDADJ;EAEAyC,MAAAA,MAAM,CAACC,UAAP,CAAkB;EAAA,eAAMN,UAAU,CAAC,GAAD,CAAhB;EAAA,OAAlB,EAAyC,IAAzC;EACH,KANU;EAOXR,IAAAA,OAAO,EAAE,oBAAM;EACX3B,MAAAA,YAAY,CACR,qDADQ,CAAZ;EAGH;EAXU,GAAD,CANtB,EAoBK0C,KApBL,CAoBW,YAAM;EACT1C,IAAAA,YAAY,CACR,8DACI,oCAFI,CAAZ;EAIH,GAzBL;EA0BH;;EAED,SAASe,QAAT,QAAkD;EAAA,MAA9B7B,KAA8B,SAA9BA,KAA8B;EAAA,MAAvBC,IAAuB,SAAvBA,IAAuB;EAAA,MAAjBC,KAAiB,SAAjBA,KAAiB;EAAA,MAAVuD,MAAU,SAAVA,MAAU;EAC9C,MAAMC,KAAK,GACP1D,KAAK,CAACmB,KAAN,CAAYwC,MAAZ,GAAqB,CAArB,IACA1D,IAAI,CAACkB,KAAL,CAAWwC,MAAX,GAAoB,CADpB,IAEAzD,KAAK,CAACiB,KAAN,CAAYwC,MAAZ,GAAqB,CAFrB,IAGAzC,OAAO,CAAChB,KAAK,CAACiB,KAAP,CAJX;EAKAsC,EAAAA,MAAM,CAACG,QAAP,GAAkB,CAACF,KAAnB;EACA,SAAOA,KAAP;EACH;;EAEc,SAASG,IAAT,GAAgB;EAC3BnC,EAAAA,UAAU,CACN,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,EAA2B,QAA3B,CADM,EAEN,MAFM,EAGNG,QAHM,EAINC,QAJM,CAAV;EAMH;;;;;;;;"}